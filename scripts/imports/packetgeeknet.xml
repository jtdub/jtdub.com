<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="https://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:gd='http://schemas.google.com/g/2005' xmlns:thr='http://purl.org/syndication/thread/1.0' xmlns:georss='http://www.georss.org/georss'><id>tag:blogger.com,1999:blog-2200496390325245811.archive</id><updated>2020-02-28T21:51:23.702-06:00</updated><title type='text'>Packet Geek Networks</title><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/archive'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/archive'/><link rel='http://schemas.google.com/g/2005#post' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/archive'/><link rel='alternate' type='text/html' href='http://www.packetgeek.net/'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><generator version='7.00' uri='https://www.blogger.com'>Blogger</generator><entry><id>tag:blogger.com,1999:blog-2200496390325245811.layout</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#template'/><title type='text'>Template: Packet Geek Networks</title><content type='text'>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;!DOCTYPE html&gt;
&lt;html b:dynamicViews='true' b:version='2' class='v2' expr:dir='data:blog.languageDirection' expr:lang='data:blog.locale' xmlns='http://www.w3.org/1999/xhtml' xmlns:b='http://www.google.com/2005/gml/b' xmlns:data='http://www.google.com/2005/gml/data' xmlns:expr='http://www.google.com/2005/gml/expr'&gt;
  &lt;head&gt;
    &lt;b:include data='blog' name='all-head-content'/&gt;
    &lt;title&gt;&lt;data:blog.pageTitle/&gt;&lt;/title&gt;
    &lt;meta content='!' name='fragment'/&gt;
    &lt;meta content='dynamic' name='blogger-template'/&gt;
    &lt;meta content='IE=9,chrome=1' http-equiv='X-UA-Compatible'/&gt;
    &lt;meta content='initial-scale=1.0, maximum-scale=1.0, user-scalable=no, width=device-width' name='viewport'/&gt;
    &lt;b:skin&gt;&lt;![CDATA[/*-----------------------------------------------
Blogger Template Style
Name: Dynamic Views
----------------------------------------------- */

/* Variable definitions
   ====================
   &lt;Variable name="keycolor" description="Main Color" type="color" default="#ffffff"
         variants="#2b256f,#00b2b4,#4ba976,#696f00,#b38f00,#f07300,#d0422c,#f37a86,#7b5341" value="#ffffff"/&gt;

   &lt;Group description="Page"&gt;
     &lt;Variable name="page.text.font" description="Font" type="font"
         default="'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif" value="&amp;#39;Helvetica Neue Light&amp;#39;, HelveticaNeue-Light, &amp;#39;Helvetica Neue&amp;#39;, Helvetica, Arial, sans-serif"/&gt;
     &lt;Variable name="page.text.color" description="Text Color" type="color"
         default="#333333" variants="#333333" value="#333333"/&gt;
     &lt;Variable name="body.background.color" description="Background Color" type="color"
         default="#EEEEEE"
         variants="#dfdfea,#d9f4f4,#e4f2eb,#e9ead9,#f4eed9,#fdead9,#f8e3e0,#fdebed,#ebe5e3" value="#EEEEEE"/&gt;
   &lt;/Group&gt;

   &lt;Variable name="body.background" description="Body Background" type="background"
       color="#EEEEEE" default="$(color) none repeat scroll top left" value="$(color) none repeat scroll top left"/&gt;

   &lt;Group description="Header"&gt;
     &lt;Variable name="header.background.color" description="Background Color" type="color"
         default="#F3F3F3" variants="#F3F3F3" value="#F3F3F3"/&gt;
   &lt;/Group&gt;

   &lt;Group description="Header Bar"&gt;
     &lt;Variable name="primary.color" description="Background Color" type="color"
         default="#333333" variants="#2b256f,#00b2b4,#4ba976,#696f00,#b38f00,#f07300,#d0422c,#f37a86,#7b5341" value="#333333"/&gt;
     &lt;Variable name="menu.font" description="Font" type="font"
         default="'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif" value="&amp;#39;Helvetica Neue Light&amp;#39;, HelveticaNeue-Light, &amp;#39;Helvetica Neue&amp;#39;, Helvetica, Arial, sans-serif"/&gt;
     &lt;Variable name="menu.text.color" description="Text Color" type="color"
         default="#FFFFFF" variants="#FFFFFF" value="#FFFFFF"/&gt;
   &lt;/Group&gt;

   &lt;Group description="Links"&gt;
     &lt;Variable name="link.font" description="Link Text" type="font"
         default="'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif" value="&amp;#39;Helvetica Neue Light&amp;#39;, HelveticaNeue-Light, &amp;#39;Helvetica Neue&amp;#39;, Helvetica, Arial, sans-serif"/&gt;
     &lt;Variable name="link.color" description="Link Color" type="color"
         default="#009EB8"
         variants="#2b256f,#00b2b4,#4ba976,#696f00,#b38f00,#f07300,#d0422c,#f37a86,#7b5341" value="#009EB8"/&gt;
     &lt;Variable name="link.hover.color" description="Link Hover Color" type="color"
         default="#009EB8"
         variants="#2b256f,#00b2b4,#4ba976,#696f00,#b38f00,#f07300,#d0422c,#f37a86,#7b5341" value="#009EB8"/&gt;
     &lt;Variable name="link.visited.color" description="Link Visited Color" type="color"
         default="#009EB8"
         variants="#2b256f,#00b2b4,#4ba976,#696f00,#b38f00,#f07300,#d0422c,#f37a86,#7b5341" value="#009EB8"/&gt;
   &lt;/Group&gt;

   &lt;Group description="Blog Title"&gt;
     &lt;Variable name="blog.title.font" description="Font" type="font"
         default="'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif" value="&amp;#39;Helvetica Neue Light&amp;#39;, HelveticaNeue-Light, &amp;#39;Helvetica Neue&amp;#39;, Helvetica, Arial, sans-serif"/&gt;
     &lt;Variable name="blog.title.color" description="Color" type="color"
         default="#555555" variants="#555555" value="#555555"/&gt;
   &lt;/Group&gt;

   &lt;Group description="Blog Description"&gt;
     &lt;Variable name="blog.description.font" description="Font" type="font"
         default="'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif" value="&amp;#39;Helvetica Neue Light&amp;#39;, HelveticaNeue-Light, &amp;#39;Helvetica Neue&amp;#39;, Helvetica, Arial, sans-serif"/&gt;
     &lt;Variable name="blog.description.color" description="Color" type="color"
         default="#555555" variants="#555555" value="#555555"/&gt;
   &lt;/Group&gt;

   &lt;Group description="Post Title"&gt;
     &lt;Variable name="post.title.font" description="Font" type="font"
         default="'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif" value="&amp;#39;Helvetica Neue Light&amp;#39;, HelveticaNeue-Light, &amp;#39;Helvetica Neue&amp;#39;, Helvetica, Arial, sans-serif"/&gt;
     &lt;Variable name="post.title.color" description="Color" type="color"
         default="#333333" variants="#333333" value="#333333"/&gt;
   &lt;/Group&gt;

   &lt;Group description="Date Ribbon"&gt;
     &lt;Variable name="ribbon.color" description="Color" type="color"
         default="#666666" variants="#2b256f,#00b2b4,#4ba976,#696f00,#b38f00,#f07300,#d0422c,#f37a86,#7b5341" value="#666666"/&gt;
     &lt;Variable name="ribbon.hover.color" description="Hover Color" type="color"
         default="#AD3A2B" variants="#AD3A2B" value="#AD3A2B"/&gt;
   &lt;/Group&gt;

   &lt;Variable name="blitzview" description="Initial view type" type="string" default="sidebar" value="timeslide"/&gt;
*/

/* BEGIN CUT */
{
 "font:Text": "$(page.text.font)",
 "color:Text": "$(page.text.color)",
 "image:Background": "$(body.background)",
 "color:Background": "$(body.background.color)",
 "color:Header Background": "$(header.background.color)",
 "color:Primary": "$(primary.color)",
 "color:Menu Text": "$(menu.text.color)",
 "font:Menu": "$(menu.font)",
 "font:Link": "$(link.font)",
 "color:Link": "$(link.color)",
 "color:Link Visited": "$(link.visited.color)",
 "color:Link Hover": "$(link.hover.color)",
 "font:Blog Title": "$(blog.title.font)",
 "color:Blog Title": "$(blog.title.color)",
 "font:Blog Description": "$(blog.description.font)",
 "color:Blog Description": "$(blog.description.color)",
 "font:Post Title": "$(post.title.font)",
 "color:Post Title": "$(post.title.color)",
 "color:Ribbon": "$(ribbon.color)",
 "color:Ribbon Hover": "$(ribbon.hover.color)",
 "view": "$blitzview"
}
/* END CUT */
]]&gt;&lt;/b:skin&gt;
    &lt;b:template-skin&gt;
      &lt;b:variable default='960px' name='content.width' type='length'/&gt;
      &lt;b:variable default='0' name='main.column.left.width' type='length'/&gt;
      &lt;b:variable default='310px' name='main.column.right.width' type='length'/&gt;
      &lt;b:variable default='46px' name='faviconpanel.height' type='length'/&gt;

      &lt;![CDATA[
      body {
        min-width: $(content.width);
      }

      .column-center-outer {
        margin-top: $(faviconpanel.height);
      }

      .content-outer, .content-fauxcolumn-outer, .region-inner {
        min-width: $(content.width);
        max-width: $(content.width);
        _width: $(content.width);
      }

      .main-inner .columns {
        padding-left: $(main.column.left.width);
        padding-right: $(main.column.right.width);
      }

      .main-inner .fauxcolumn-center-outer {
        left: $(main.column.left.width);
        right: $(main.column.right.width);
        /* IE6 does not respect left and right together */
        _width: expression(this.parentNode.offsetWidth -
            parseInt("$(main.column.left.width)") -
            parseInt("$(main.column.right.width)") + 'px');
      }

      .main-inner .fauxcolumn-left-outer {
        width: $(main.column.left.width);
      }

      .main-inner .fauxcolumn-right-outer {
        width: $(main.column.right.width);
      }

      .main-inner .column-left-outer {
        width: $(main.column.left.width);
        right: 100%;
        margin-left: -$(main.column.left.width);
      }

      .main-inner .column-right-outer {
        width: $(main.column.right.width);
        margin-right: -$(main.column.right.width);
      }

      #layout {
        min-width: 0;
      }

      #layout .content-outer {
        min-width: 0;
        width: 800px;
      }

      #layout .region-inner {
        min-width: 0;
        width: auto;
      }
      ]]&gt;
    &lt;/b:template-skin&gt;

    &lt;script expr:src='data:blog.dynamicViewsScriptSrc + &amp;quot;/js/thirdparty/jquery.js&amp;quot;' type='text/javascript'/&gt;
    &lt;script expr:src='data:blog.dynamicViewsScriptSrc + &amp;quot;/js/thirdparty/jquery-mousewheel.js&amp;quot;' type='text/javascript'/&gt;
    &lt;script expr:src='data:blog.dynamicViewsScriptSrc + &amp;quot;/js/common.js&amp;quot;' type='text/javascript'/&gt;
    &lt;b:if cond='data:blog.localeUnderscoreDelimited != &amp;quot;en&amp;quot;'&gt;
      &lt;script expr:src='data:blog.dynamicViewsScriptSrc +           &amp;quot;/js/languages/lang__&amp;quot; + data:blog.localeUnderscoreDelimited + &amp;quot;.js&amp;quot;' type='text/javascript'/&gt;
    &lt;/b:if&gt;
    &lt;b:if cond='data:blog.view'&gt;
      &lt;script expr:src='data:blog.dynamicViewsScriptSrc + &amp;quot;/js/&amp;quot; + data:blog.view + &amp;quot;.js&amp;quot;' type='text/javascript'/&gt;
    &lt;b:else/&gt;
      &lt;b:if cond='data:blog.isMobileRequest'&gt;
        &lt;script expr:src='data:blog.dynamicViewsScriptSrc + &amp;quot;/js/classic.js&amp;quot;' type='text/javascript'/&gt;
      &lt;b:else/&gt;
        &lt;b:if cond='data:skin.vars.blitzview'&gt;
          &lt;script expr:src='data:blog.dynamicViewsScriptSrc + &amp;quot;/js/&amp;quot; + data:skin.vars.blitzview + &amp;quot;.js&amp;quot;' type='text/javascript'/&gt;
        &lt;b:else/&gt;
          &lt;script expr:src='data:blog.dynamicViewsScriptSrc + &amp;quot;/js/sidebar.js&amp;quot;' type='text/javascript'/&gt;
        &lt;/b:if&gt;
      &lt;/b:if&gt;
    &lt;/b:if&gt;
    &lt;script expr:src='data:blog.dynamicViewsScriptSrc + &amp;quot;/js/gadgets.js&amp;quot;' type='text/javascript'/&gt;
    &lt;script expr:src='data:blog.dynamicViewsCommentsSrc'/&gt;
    &lt;b:include data='blog' name='google-analytics'/&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;b:if cond='data:blog.isDynamicViewsAvailable'&gt;
      &lt;div class='content'&gt;
        &lt;div class='content-outer'&gt;
          &lt;div class='fauxborder-left content-fauxborder-left'&gt;
            &lt;div class='content-inner'&gt;
              &lt;div class='main-outer'&gt;
                &lt;div class='fauxborder-left main-fauxborder-left'&gt;
                  &lt;div class='region-inner main-inner'&gt;
                    &lt;div class='columns fauxcolumns'&gt;
                      &lt;div class='column-center-outer'&gt;
                        &lt;div class='column-center-inner'&gt;
                          &lt;b:section class='main' id='main' showaddelement='no'&gt;
                            &lt;b:widget id='Blog1' locked='true' title='Blog Posts' type='Blog'&gt;
                              &lt;b:widget-settings&gt;
                                &lt;b:widget-setting name='showDateHeader'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='style.textcolor'&gt;#009eb8&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showShareButtons'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='authorLabel'&gt;By&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showCommentLink'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='style.urlcolor'&gt;#555555&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showAuthor'&gt;false&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='disableGooglePlusShare'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='style.linkcolor'&gt;#333333&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='style.unittype'&gt;TextAndImage&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='style.bgcolor'&gt;#ffffff&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showAuthorProfile'&gt;false&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='style.layout'&gt;1x1&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showLabels'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showLocation'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showTimestamp'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='postsPerAd'&gt;3&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showBacklinks'&gt;false&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='style.bordercolor'&gt;#ffffff&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showInlineAds'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showReactions'&gt;false&lt;/b:widget-setting&gt;
                              &lt;/b:widget-settings&gt;
                              &lt;b:includable id='main' var='top'&gt;
  &lt;b:if cond='!data:mobile'&gt;
    &lt;!-- posts --&gt;
    &lt;div class='blog-posts hfeed'&gt;

      &lt;b:include data='top' name='status-message'/&gt;

      &lt;b:loop values='data:posts' var='post'&gt;
        &lt;b:if cond='data:post.isDateStart and not data:post.isFirstPost'&gt;
          &amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;
        &lt;/b:if&gt;
        &lt;b:if cond='data:post.isDateStart'&gt;
          &amp;lt;div class=&amp;quot;date-outer&amp;quot;&amp;gt;
        &lt;/b:if&gt;
        &lt;b:if cond='data:post.dateHeader'&gt;
          &lt;h2 class='date-header'&gt;&lt;span&gt;&lt;data:post.dateHeader/&gt;&lt;/span&gt;&lt;/h2&gt;
        &lt;/b:if&gt;
        &lt;b:if cond='data:post.isDateStart'&gt;
          &amp;lt;div class=&amp;quot;date-posts&amp;quot;&amp;gt;
        &lt;/b:if&gt;
        &lt;div class='post-outer'&gt;
          &lt;b:include data='post' name='post'/&gt;
          &lt;b:include cond='data:blog.pageType in {&amp;quot;static_page&amp;quot;,&amp;quot;item&amp;quot;}' data='post' name='comment_picker'/&gt;
        &lt;/div&gt;

        &lt;!-- Ad --&gt;
        &lt;b:if cond='data:post.includeAd'&gt;
          &lt;div class='inline-ad'&gt;
            &lt;data:adCode/&gt;
          &lt;/div&gt;
        &lt;/b:if&gt;
      &lt;/b:loop&gt;
      &lt;b:if cond='data:numPosts != 0'&gt;
        &amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;
      &lt;/b:if&gt;
    &lt;/div&gt;

    &lt;!-- navigation --&gt;
    &lt;b:include name='nextprev'/&gt;

    &lt;!-- feed links --&gt;
    &lt;b:include name='feedLinks'/&gt;

  &lt;b:else/&gt;
    &lt;b:include name='mobile-main'/&gt;
  &lt;/b:if&gt;

  &lt;b:include cond='data:top.showPlusOne' name='googlePlusBootstrap'/&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='backlinkDeleteIcon' var='backlink'/&gt;
                              &lt;b:includable id='backlinks' var='post'/&gt;
                              &lt;b:includable id='comment-form' var='post'&gt;
  &lt;div class='comment-form'&gt;
    &lt;a name='comment-form'/&gt;
    &lt;b:if cond='data:mobile'&gt;
      &lt;h4 id='comment-post-message'&gt;
        &lt;a expr:id='data:widget.instanceId + &amp;quot;_comment-editor-toggle-link&amp;quot;' href='javascript:void(0)'&gt;&lt;data:postCommentMsg/&gt;&lt;/a&gt;&lt;/h4&gt;
      &lt;p&gt;&lt;data:blogCommentMessage/&gt;&lt;/p&gt;
      &lt;data:blogTeamBlogMessage/&gt;
      &lt;a expr:href='data:post.commentFormIframeSrc' id='comment-editor-src'/&gt;
      &lt;iframe allowtransparency='true' class='blogger-iframe-colorize blogger-comment-from-post' expr:height='data:cmtIframeInitialHeight' frameborder='0' id='comment-editor' name='comment-editor' src='' style='display: none' width='100%'/&gt;
    &lt;b:else/&gt;
      &lt;h4 id='comment-post-message'&gt;&lt;data:postCommentMsg/&gt;&lt;/h4&gt;
      &lt;p&gt;&lt;data:blogCommentMessage/&gt;&lt;/p&gt;
      &lt;data:blogTeamBlogMessage/&gt;
      &lt;a expr:href='data:post.commentFormIframeSrc' id='comment-editor-src'/&gt;
      &lt;iframe allowtransparency='true' class='blogger-iframe-colorize blogger-comment-from-post' expr:height='data:cmtIframeInitialHeight' frameborder='0' id='comment-editor' name='comment-editor' src='' width='100%'/&gt;
    &lt;/b:if&gt;
    &lt;data:post.cmtfpIframe/&gt;
    &lt;script type='text/javascript'&gt;
      BLOG_CMT_createIframe(&amp;#39;&lt;data:post.appRpcRelayPath/&gt;&amp;#39;);
    &lt;/script&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='commentDeleteIcon' var='comment'&gt;
  &lt;span expr:class='&amp;quot;item-control &amp;quot; + data:comment.adminClass'&gt;
    &lt;b:if cond='data:showCmtPopup'&gt;
      &lt;div class='goog-toggle-button'&gt;
        &lt;div class='goog-inline-block comment-action-icon'/&gt;
      &lt;/div&gt;
    &lt;b:else/&gt;
      &lt;a class='comment-delete' expr:href='data:comment.deleteUrl' expr:title='data:top.deleteCommentMsg'&gt;
        &lt;img src='https://resources.blogblog.com/img/icon_delete13.gif'/&gt;
      &lt;/a&gt;
    &lt;/b:if&gt;
  &lt;/span&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='comment_count_picker' var='post'&gt;
  &lt;a class='comment-link' expr:href='data:post.addCommentUrl' expr:onclick='data:post.addCommentOnclick'&gt;
    &lt;data:post.commentLabelFull/&gt;:
  &lt;/a&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='comment_picker' var='post'&gt;
  &lt;b:if cond='data:post.showThreadedComments'&gt;
    &lt;b:include data='post' name='threaded_comments'/&gt;
  &lt;b:else/&gt;
    &lt;b:include data='post' name='comments'/&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='comments' var='post'&gt;
  &lt;div class='comments' id='comments'&gt;
    &lt;a name='comments'/&gt;
    &lt;b:if cond='data:post.allowComments'&gt;
      &lt;h4&gt;&lt;data:post.commentLabelFull/&gt;:&lt;/h4&gt;

      &lt;b:if cond='data:post.commentPagingRequired'&gt;
        &lt;span class='paging-control-container'&gt;
          &lt;b:if cond='data:post.hasOlderLinks'&gt;
            &lt;a expr:class='data:post.oldLinkClass' expr:href='data:post.oldestLinkUrl'&gt;&lt;data:post.oldestLinkText/&gt;&lt;/a&gt;
              &amp;#160;
            &lt;a expr:class='data:post.oldLinkClass' expr:href='data:post.olderLinkUrl'&gt;&lt;data:post.olderLinkText/&gt;&lt;/a&gt;
              &amp;#160;
          &lt;/b:if&gt;

          &lt;data:post.commentRangeText/&gt;

          &lt;b:if cond='data:post.hasNewerLinks'&gt;
            &amp;#160;
            &lt;a expr:class='data:post.newLinkClass' expr:href='data:post.newerLinkUrl'&gt;&lt;data:post.newerLinkText/&gt;&lt;/a&gt;
            &amp;#160;
            &lt;a expr:class='data:post.newLinkClass' expr:href='data:post.newestLinkUrl'&gt;&lt;data:post.newestLinkText/&gt;&lt;/a&gt;
          &lt;/b:if&gt;
        &lt;/span&gt;
      &lt;/b:if&gt;

      &lt;div expr:id='data:widget.instanceId + &amp;quot;_comments-block-wrapper&amp;quot;'&gt;
        &lt;dl expr:class='data:post.avatarIndentClass' id='comments-block'&gt;
          &lt;b:loop values='data:post.comments' var='comment'&gt;
            &lt;dt expr:class='&amp;quot;comment-author &amp;quot; + data:comment.authorClass' expr:id='data:comment.anchorName'&gt;
              &lt;b:if cond='data:comment.favicon'&gt;
                &lt;img expr:src='data:comment.favicon' height='16px' style='margin-bottom:-2px;' width='16px'/&gt;
              &lt;/b:if&gt;
              &lt;a expr:name='data:comment.anchorName'/&gt;
              &lt;b:if cond='data:blog.enabledCommentProfileImages'&gt;
                &lt;data:comment.authorAvatarImage/&gt;
              &lt;/b:if&gt;
              &lt;b:if cond='data:comment.authorUrl'&gt;
                &lt;a expr:href='data:comment.authorUrl' rel='nofollow'&gt;&lt;data:comment.author/&gt;&lt;/a&gt;
              &lt;b:else/&gt;
                &lt;data:comment.author/&gt;
              &lt;/b:if&gt;
              &lt;data:commentPostedByMsg/&gt;
            &lt;/dt&gt;
            &lt;dd class='comment-body' expr:id='data:widget.instanceId + data:comment.cmtBodyIdPostfix'&gt;
              &lt;b:if cond='data:comment.isDeleted'&gt;
                &lt;span class='deleted-comment'&gt;&lt;data:comment.body/&gt;&lt;/span&gt;
              &lt;b:else/&gt;
                &lt;p&gt;
                  &lt;data:comment.body/&gt;
                &lt;/p&gt;
              &lt;/b:if&gt;
            &lt;/dd&gt;
            &lt;dd class='comment-footer'&gt;
              &lt;span class='comment-timestamp'&gt;
                &lt;a expr:href='data:comment.url' title='comment permalink'&gt;
                  &lt;data:comment.timestamp/&gt;
                &lt;/a&gt;
                &lt;b:include data='comment' name='commentDeleteIcon'/&gt;
              &lt;/span&gt;
            &lt;/dd&gt;
          &lt;/b:loop&gt;
        &lt;/dl&gt;
      &lt;/div&gt;

      &lt;b:if cond='data:post.commentPagingRequired'&gt;
        &lt;span class='paging-control-container'&gt;
          &lt;a expr:class='data:post.oldLinkClass' expr:href='data:post.oldestLinkUrl'&gt;
            &lt;data:post.oldestLinkText/&gt;
          &lt;/a&gt;
          &lt;a expr:class='data:post.oldLinkClass' expr:href='data:post.olderLinkUrl'&gt;
            &lt;data:post.olderLinkText/&gt;
          &lt;/a&gt;
          &amp;#160;
          &lt;data:post.commentRangeText/&gt;
          &amp;#160;
          &lt;a expr:class='data:post.newLinkClass' expr:href='data:post.newerLinkUrl'&gt;
            &lt;data:post.newerLinkText/&gt;
          &lt;/a&gt;
          &lt;a expr:class='data:post.newLinkClass' expr:href='data:post.newestLinkUrl'&gt;
            &lt;data:post.newestLinkText/&gt;
          &lt;/a&gt;
        &lt;/span&gt;
      &lt;/b:if&gt;

      &lt;p class='comment-footer'&gt;
        &lt;b:if cond='data:post.embedCommentForm'&gt;
          &lt;b:if cond='data:post.allowNewComments'&gt;
            &lt;b:include data='post' name='comment-form'/&gt;
          &lt;b:else/&gt;
            &lt;data:post.noNewCommentsText/&gt;
          &lt;/b:if&gt;
        &lt;b:elseif cond='data:post.allowComments'/&gt;
          &lt;a expr:href='data:post.addCommentUrl' expr:onclick='data:post.addCommentOnclick'&gt;&lt;data:postCommentMsg/&gt;&lt;/a&gt;
        &lt;/b:if&gt;
      &lt;/p&gt;
    &lt;/b:if&gt;
    &lt;b:if cond='data:showCmtPopup'&gt;
      &lt;div id='comment-popup'&gt;
        &lt;iframe allowtransparency='true' frameborder='0' id='comment-actions' name='comment-actions' scrolling='no'&gt;
        &lt;/iframe&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

  &lt;/div&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='feedLinks'&gt;
  &lt;b:if cond='data:blog.pageType != &amp;quot;item&amp;quot;'&gt; &lt;!-- Blog feed links --&gt;
    &lt;b:if cond='data:feedLinks'&gt;
      &lt;div class='blog-feeds'&gt;
        &lt;b:include data='feedLinks' name='feedLinksBody'/&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

  &lt;b:else/&gt; &lt;!--Post feed links --&gt;
    &lt;div class='post-feeds'&gt;
      &lt;b:loop values='data:posts' var='post'&gt;
        &lt;b:include cond='data:post.allowComments and data:post.feedLinks' data='post.feedLinks' name='feedLinksBody'/&gt;
      &lt;/b:loop&gt;
    &lt;/div&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='feedLinksBody' var='links'&gt;
  &lt;div class='feed-links'&gt;
  &lt;data:feedLinksMsg/&gt;
  &lt;b:loop values='data:links' var='f'&gt;
     &lt;a class='feed-link' expr:href='data:f.url' expr:type='data:f.mimeType' target='_blank'&gt;&lt;data:f.name/&gt; (&lt;data:f.feedType/&gt;)&lt;/a&gt;
  &lt;/b:loop&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='iframe_comments' var='post'&gt;
  &lt;!-- G+ comments, no longer available. The includable is retained for backwards-compatibility. --&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='mobile-index-post' var='post'&gt;
  &lt;div class='mobile-date-outer date-outer'&gt;
    &lt;b:if cond='data:post.dateHeader'&gt;
      &lt;div class='date-header'&gt;
        &lt;span&gt;&lt;data:post.dateHeader/&gt;&lt;/span&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

    &lt;div class='mobile-post-outer'&gt;
      &lt;a expr:href='data:post.url'&gt;
        &lt;h3 class='mobile-index-title entry-title' itemprop='name'&gt;
          &lt;data:post.title/&gt;
        &lt;/h3&gt;

        &lt;div class='mobile-index-arrow'&gt;&amp;amp;rsaquo;&lt;/div&gt;

        &lt;div class='mobile-index-contents'&gt;
          &lt;b:if cond='data:post.thumbnailUrl'&gt;
            &lt;div class='mobile-index-thumbnail'&gt;
              &lt;div class='Image'&gt;
                &lt;img expr:src='data:post.thumbnailUrl'/&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/b:if&gt;

          &lt;div class='post-body'&gt;
            &lt;b:if cond='data:post.snippet'&gt;&lt;data:post.snippet/&gt;&lt;/b:if&gt;
          &lt;/div&gt;
        &lt;/div&gt;

        &lt;div style='clear: both;'/&gt;
      &lt;/a&gt;

      &lt;div class='mobile-index-comment'&gt;
        &lt;b:include cond='data:blog.pageType != &amp;quot;static_page&amp;quot;                          and data:post.allowComments                          and data:post.numComments != 0' data='post' name='comment_count_picker'/&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='mobile-main' var='top'&gt;
    &lt;!-- posts --&gt;
    &lt;div class='blog-posts hfeed'&gt;

      &lt;b:include data='top' name='status-message'/&gt;

      &lt;b:if cond='data:blog.pageType == &amp;quot;index&amp;quot;'&gt;
        &lt;b:loop values='data:posts' var='post'&gt;
          &lt;b:include data='post' name='mobile-index-post'/&gt;
        &lt;/b:loop&gt;
      &lt;b:else/&gt;
        &lt;b:loop values='data:posts' var='post'&gt;
          &lt;b:include data='post' name='mobile-post'/&gt;
        &lt;/b:loop&gt;
      &lt;/b:if&gt;
    &lt;/div&gt;

   &lt;b:include name='mobile-nextprev'/&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='mobile-nextprev'&gt;
  &lt;div class='blog-pager' id='blog-pager'&gt;
    &lt;b:if cond='data:newerPageUrl'&gt;
      &lt;div class='mobile-link-button' id='blog-pager-newer-link'&gt;
      &lt;a class='blog-pager-newer-link' expr:href='data:newerPageUrl' expr:id='data:widget.instanceId + &amp;quot;_blog-pager-newer-link&amp;quot;' expr:title='data:newerPageTitle'&gt;&amp;amp;lsaquo;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

    &lt;b:if cond='data:olderPageUrl'&gt;
      &lt;div class='mobile-link-button' id='blog-pager-older-link'&gt;
      &lt;a class='blog-pager-older-link' expr:href='data:olderPageUrl' expr:id='data:widget.instanceId + &amp;quot;_blog-pager-older-link&amp;quot;' expr:title='data:olderPageTitle'&gt;&amp;amp;rsaquo;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

    &lt;div class='mobile-link-button' id='blog-pager-home-link'&gt;
    &lt;a class='home-link' expr:href='data:blog.homepageUrl'&gt;&lt;data:homeMsg/&gt;&lt;/a&gt;
    &lt;/div&gt;

    &lt;div class='mobile-desktop-link'&gt;
      &lt;a class='home-link' expr:href='data:desktopLinkUrl'&gt;&lt;data:desktopLinkMsg/&gt;&lt;/a&gt;
    &lt;/div&gt;

  &lt;/div&gt;
  &lt;div class='clear'/&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='mobile-post' var='post'&gt;
  &lt;div class='date-outer'&gt;
    &lt;b:if cond='data:post.dateHeader'&gt;
      &lt;h2 class='date-header'&gt;&lt;span&gt;&lt;data:post.dateHeader/&gt;&lt;/span&gt;&lt;/h2&gt;
    &lt;/b:if&gt;
    &lt;div class='date-posts'&gt;
      &lt;div class='post-outer'&gt;

        &lt;div class='post hentry uncustomized-post-template' itemscope='itemscope' itemtype='http://schema.org/BlogPosting'&gt;
          &lt;b:if cond='data:post.thumbnailUrl'&gt;
            &lt;meta expr:content='data:post.thumbnailUrl' itemprop='image_url'/&gt;
          &lt;/b:if&gt;
          &lt;meta expr:content='data:blog.blogId' itemprop='blogId'/&gt;
          &lt;meta expr:content='data:post.id' itemprop='postId'/&gt;

          &lt;a expr:name='data:post.id'/&gt;
          &lt;b:if cond='data:post.title'&gt;
            &lt;h3 class='post-title entry-title' itemprop='name'&gt;
              &lt;b:if cond='data:post.link'&gt;
                &lt;a expr:href='data:post.link'&gt;&lt;data:post.title/&gt;&lt;/a&gt;
              &lt;b:elseif cond='data:post.url and data:blog.url != data:post.url'/&gt;
                &lt;a expr:href='data:post.url'&gt;&lt;data:post.title/&gt;&lt;/a&gt;
              &lt;b:else/&gt;
                &lt;data:post.title/&gt;
              &lt;/b:if&gt;
            &lt;/h3&gt;
          &lt;/b:if&gt;

          &lt;div class='post-header'&gt;
            &lt;div class='post-header-line-1'/&gt;
          &lt;/div&gt;

          &lt;div class='post-body entry-content' expr:id='&amp;quot;post-body-&amp;quot; + data:post.id' itemprop='articleBody'&gt;
            &lt;data:post.body/&gt;
            &lt;div style='clear: both;'/&gt; &lt;!-- clear for photos floats --&gt;
          &lt;/div&gt;

          &lt;div class='post-footer'&gt;
            &lt;div class='post-footer-line post-footer-line-1'&gt;
              &lt;span class='post-author vcard'&gt;
                &lt;b:if cond='data:top.showAuthor'&gt;
                  &lt;b:if cond='data:post.authorProfileUrl'&gt;
                    &lt;span class='fn' itemprop='author' itemscope='itemscope' itemtype='http://schema.org/Person'&gt;
                      &lt;meta expr:content='data:post.authorProfileUrl' itemprop='url'/&gt;
                      &lt;a expr:href='data:post.authorProfileUrl' rel='author' title='author profile'&gt;
                        &lt;span itemprop='name'&gt;&lt;data:post.author/&gt;&lt;/span&gt;
                      &lt;/a&gt;
                    &lt;/span&gt;
                  &lt;b:else/&gt;
                    &lt;span class='fn' itemprop='author' itemscope='itemscope' itemtype='http://schema.org/Person'&gt;
                      &lt;span itemprop='name'&gt;&lt;data:post.author/&gt;&lt;/span&gt;
                    &lt;/span&gt;
                  &lt;/b:if&gt;
                &lt;/b:if&gt;
              &lt;/span&gt;

              &lt;span class='post-timestamp'&gt;
                &lt;b:if cond='data:top.showTimestamp'&gt;
                  &lt;data:top.timestampLabel/&gt;
                  &lt;b:if cond='data:post.url'&gt;
                    &lt;meta expr:content='data:post.url.canonical' itemprop='url'/&gt;
                    &lt;a class='timestamp-link' expr:href='data:post.url' rel='bookmark' title='permanent link'&gt;&lt;abbr class='published' expr:title='data:post.timestampISO8601' itemprop='datePublished'&gt;&lt;data:post.timestamp/&gt;&lt;/abbr&gt;&lt;/a&gt;
                  &lt;/b:if&gt;
                &lt;/b:if&gt;
              &lt;/span&gt;

              &lt;span class='post-comment-link'&gt;
                &lt;b:include cond='data:blog.pageType not in {&amp;quot;item&amp;quot;,&amp;quot;static_page&amp;quot;}                                  and data:post.allowComments' data='post' name='comment_count_picker'/&gt;
              &lt;/span&gt;
            &lt;/div&gt;

            &lt;div class='post-footer-line post-footer-line-2'&gt;
              &lt;b:if cond='data:top.showMobileShare'&gt;
                &lt;div class='mobile-link-button goog-inline-block' id='mobile-share-button'&gt;
                  &lt;a href='javascript:void(0);'&gt;&lt;data:shareMsg/&gt;&lt;/a&gt;
                &lt;/div&gt;
              &lt;/b:if&gt;
              &lt;b:if cond='data:top.showDummy'&gt;
                &lt;div class='goog-inline-block dummy-container'&gt;&lt;data:post.dummyTag/&gt;&lt;/div&gt;
              &lt;/b:if&gt;
            &lt;/div&gt;

          &lt;/div&gt;
        &lt;/div&gt;

        &lt;b:include cond='data:blog.pageType in {&amp;quot;static_page&amp;quot;,&amp;quot;item&amp;quot;}' data='post' name='comment_picker'/&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='nextprev'&gt;
  &lt;div class='blog-pager' id='blog-pager'&gt;
    &lt;b:if cond='data:newerPageUrl'&gt;
      &lt;span id='blog-pager-newer-link'&gt;
      &lt;a class='blog-pager-newer-link' expr:href='data:newerPageUrl' expr:id='data:widget.instanceId + &amp;quot;_blog-pager-newer-link&amp;quot;' expr:title='data:newerPageTitle'&gt;&lt;data:newerPageTitle/&gt;&lt;/a&gt;
      &lt;/span&gt;
    &lt;/b:if&gt;

    &lt;b:if cond='data:olderPageUrl'&gt;
      &lt;span id='blog-pager-older-link'&gt;
      &lt;a class='blog-pager-older-link' expr:href='data:olderPageUrl' expr:id='data:widget.instanceId + &amp;quot;_blog-pager-older-link&amp;quot;' expr:title='data:olderPageTitle'&gt;&lt;data:olderPageTitle/&gt;&lt;/a&gt;
      &lt;/span&gt;
    &lt;/b:if&gt;

    &lt;a class='home-link' expr:href='data:blog.homepageUrl'&gt;&lt;data:homeMsg/&gt;&lt;/a&gt;

    &lt;b:if cond='data:mobileLinkUrl'&gt;
      &lt;div class='blog-mobile-link'&gt;
        &lt;a expr:href='data:mobileLinkUrl'&gt;&lt;data:mobileLinkMsg/&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

  &lt;/div&gt;
  &lt;div class='clear'/&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='post' var='post'&gt;
  &lt;div class='post hentry uncustomized-post-template' itemprop='blogPost' itemscope='itemscope' itemtype='http://schema.org/BlogPosting'&gt;
    &lt;b:if cond='data:post.firstImageUrl'&gt;
      &lt;meta expr:content='data:post.firstImageUrl' itemprop='image_url'/&gt;
    &lt;/b:if&gt;
    &lt;meta expr:content='data:blog.blogId' itemprop='blogId'/&gt;
    &lt;meta expr:content='data:post.id' itemprop='postId'/&gt;

    &lt;a expr:name='data:post.id'/&gt;
    &lt;b:if cond='data:post.title'&gt;
      &lt;h3 class='post-title entry-title' itemprop='name'&gt;
      &lt;b:if cond='data:post.link or (data:post.url and data:blog.url != data:post.url)'&gt;
        &lt;a expr:href='data:post.link ? data:post.link : data:post.url'&gt;&lt;data:post.title/&gt;&lt;/a&gt;
      &lt;b:else/&gt;
        &lt;data:post.title/&gt;
      &lt;/b:if&gt;
      &lt;/h3&gt;
    &lt;/b:if&gt;

    &lt;div class='post-header'&gt;
    &lt;div class='post-header-line-1'/&gt;
    &lt;/div&gt;

    &lt;!-- Then use the post body as the schema.org description, for good G+/FB snippeting. --&gt;
    &lt;div class='post-body entry-content' expr:id='&amp;quot;post-body-&amp;quot; + data:post.id' expr:itemprop='(data:blog.metaDescription ? &amp;quot;&amp;quot; : &amp;quot;description &amp;quot;) + &amp;quot;articleBody&amp;quot;'&gt;
      &lt;data:post.body/&gt;
      &lt;div style='clear: both;'/&gt; &lt;!-- clear for photos floats --&gt;
    &lt;/div&gt;

    &lt;b:if cond='data:post.hasJumpLink'&gt;
      &lt;div class='jump-link'&gt;
        &lt;a expr:href='data:post.url + &amp;quot;#more&amp;quot;' expr:title='data:post.title'&gt;&lt;data:post.jumpText/&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

    &lt;div class='post-footer'&gt;
    &lt;div class='post-footer-line post-footer-line-1'&gt;
      &lt;span class='post-author vcard'&gt;
        &lt;b:if cond='data:top.showAuthor'&gt;
          &lt;data:top.authorLabel/&gt;
            &lt;b:if cond='data:post.authorProfileUrl'&gt;
              &lt;span class='fn' itemprop='author' itemscope='itemscope' itemtype='http://schema.org/Person'&gt;
                &lt;meta expr:content='data:post.authorProfileUrl' itemprop='url'/&gt;
                &lt;a class='g-profile' expr:href='data:post.authorProfileUrl' rel='author' title='author profile'&gt;
                  &lt;span itemprop='name'&gt;&lt;data:post.author/&gt;&lt;/span&gt;
                &lt;/a&gt;
              &lt;/span&gt;
            &lt;b:else/&gt;
              &lt;span class='fn' itemprop='author' itemscope='itemscope' itemtype='http://schema.org/Person'&gt;
                &lt;span itemprop='name'&gt;&lt;data:post.author/&gt;&lt;/span&gt;
              &lt;/span&gt;
            &lt;/b:if&gt;
        &lt;/b:if&gt;
      &lt;/span&gt;

      &lt;span class='post-timestamp'&gt;
        &lt;b:if cond='data:top.showTimestamp'&gt;
          &lt;data:top.timestampLabel/&gt;
          &lt;b:if cond='data:post.url'&gt;
            &lt;meta expr:content='data:post.url.canonical' itemprop='url'/&gt;
            &lt;a class='timestamp-link' expr:href='data:post.url' rel='bookmark' title='permanent link'&gt;&lt;abbr class='published' expr:title='data:post.timestampISO8601' itemprop='datePublished'&gt;&lt;data:post.timestamp/&gt;&lt;/abbr&gt;&lt;/a&gt;
          &lt;/b:if&gt;
        &lt;/b:if&gt;
      &lt;/span&gt;

      &lt;span class='reaction-buttons'&gt;
        &lt;b:if cond='data:top.showReactions'&gt;
          &lt;table border='0' cellpadding='0' cellspacing='0' width='100%'&gt;&lt;tr&gt;
            &lt;td class='reactions-label-cell' nowrap='nowrap' valign='top' width='1%'&gt;
              &lt;span class='reactions-label'&gt;
              &lt;data:top.reactionsLabel/&gt;&lt;/span&gt;&amp;#160;&lt;/td&gt;
            &lt;td&gt;&lt;iframe allowtransparency='true' class='reactions-iframe' expr:src='data:post.reactionsUrl' frameborder='0' name='reactions' scrolling='no'/&gt;&lt;/td&gt;
           &lt;/tr&gt;&lt;/table&gt;
        &lt;/b:if&gt;
      &lt;/span&gt;

      &lt;span class='post-comment-link'&gt;
        &lt;b:include cond='data:blog.pageType not in {&amp;quot;item&amp;quot;,&amp;quot;static_page&amp;quot;}                          and data:post.allowComments' data='post' name='comment_count_picker'/&gt;
      &lt;/span&gt;

      &lt;span class='post-icons'&gt;
        &lt;!-- email post links --&gt;
        &lt;b:if cond='data:post.emailPostUrl'&gt;
          &lt;span class='item-action'&gt;
          &lt;a expr:href='data:post.emailPostUrl' expr:title='data:top.emailPostMsg'&gt;
            &lt;img alt='' class='icon-action' height='13' src='https://resources.blogblog.com/img/icon18_email.gif' width='18'/&gt;
          &lt;/a&gt;
          &lt;/span&gt;
        &lt;/b:if&gt;

        &lt;!-- quickedit pencil --&gt;
        &lt;b:include data='post' name='postQuickEdit'/&gt;
      &lt;/span&gt;

      &lt;!-- share buttons --&gt;
      &lt;div class='post-share-buttons goog-inline-block'&gt;
        &lt;b:include cond='data:post.sharePostUrl' data='post' name='shareButtons'/&gt;
      &lt;/div&gt;

      &lt;/div&gt;

      &lt;div class='post-footer-line post-footer-line-2'&gt;
      &lt;span class='post-labels'&gt;
        &lt;b:if cond='data:top.showPostLabels and data:post.labels'&gt;
          &lt;data:postLabelsLabel/&gt;
          &lt;b:loop values='data:post.labels' var='label'&gt;
            &lt;a expr:href='data:label.url' rel='tag'&gt;&lt;data:label.name/&gt;&lt;/a&gt;&lt;b:if cond='not data:label.isLast'&gt;,&lt;/b:if&gt;
          &lt;/b:loop&gt;
        &lt;/b:if&gt;
      &lt;/span&gt;
      &lt;/div&gt;

      &lt;div class='post-footer-line post-footer-line-3'&gt;
      &lt;span class='post-location'&gt;
        &lt;b:if cond='data:top.showLocation and data:post.location'&gt;
          &lt;data:postLocationLabel/&gt;
          &lt;a expr:href='data:post.location.mapsUrl' target='_blank'&gt;&lt;data:post.location.name/&gt;&lt;/a&gt;
        &lt;/b:if&gt;
      &lt;/span&gt;
      &lt;/div&gt;
      &lt;b:if cond='data:post.authorAboutMe'&gt;
        &lt;div class='author-profile' itemprop='author' itemscope='itemscope' itemtype='http://schema.org/Person'&gt;
          &lt;b:if cond='data:post.authorPhoto.url'&gt;
            &lt;img expr:src='data:post.authorPhoto.url' itemprop='image' width='50px'/&gt;
          &lt;/b:if&gt;
          &lt;div&gt;
            &lt;a class='g-profile' expr:href='data:post.authorProfileUrl' itemprop='url' rel='author' title='author profile'&gt;
              &lt;span itemprop='name'&gt;&lt;data:post.author/&gt;&lt;/span&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;span itemprop='description'&gt;&lt;data:post.authorAboutMe/&gt;&lt;/span&gt;
        &lt;/div&gt;
      &lt;/b:if&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='postQuickEdit' var='post'&gt;
  &lt;b:if cond='data:post.editUrl'&gt;
    &lt;span expr:class='&amp;quot;item-control &amp;quot; + data:post.adminClass'&gt;
      &lt;a expr:href='data:post.editUrl' expr:title='data:top.editPostMsg'&gt;
        &lt;img alt='' class='icon-action' height='18' src='https://resources.blogblog.com/img/icon18_edit_allbkg.gif' width='18'/&gt;
      &lt;/a&gt;
    &lt;/span&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='shareButtons' var='post'&gt;
  &lt;b:if cond='data:top.showEmailButton'&gt;&lt;a class='goog-inline-block share-button sb-email' expr:href='data:post.sharePostUrl + &amp;quot;&amp;amp;target=email&amp;quot;' expr:title='data:top.emailThisMsg' target='_blank'&gt;&lt;span class='share-button-link-text'&gt;&lt;data:top.emailThisMsg/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b:if&gt;&lt;b:if cond='data:top.showBlogThisButton'&gt;&lt;a class='goog-inline-block share-button sb-blog' expr:href='data:post.sharePostUrl + &amp;quot;&amp;amp;target=blog&amp;quot;' expr:onclick='&amp;quot;window.open(this.href, \&amp;quot;_blank\&amp;quot;, \&amp;quot;height=270,width=475\&amp;quot;); return false;&amp;quot;' expr:title='data:top.blogThisMsg' target='_blank'&gt;&lt;span class='share-button-link-text'&gt;&lt;data:top.blogThisMsg/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b:if&gt;&lt;b:if cond='data:top.showTwitterButton'&gt;&lt;a class='goog-inline-block share-button sb-twitter' expr:href='data:post.sharePostUrl + &amp;quot;&amp;amp;target=twitter&amp;quot;' expr:title='data:top.shareToTwitterMsg' target='_blank'&gt;&lt;span class='share-button-link-text'&gt;&lt;data:top.shareToTwitterMsg/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b:if&gt;&lt;b:if cond='data:top.showFacebookButton'&gt;&lt;a class='goog-inline-block share-button sb-facebook' expr:href='data:post.sharePostUrl + &amp;quot;&amp;amp;target=facebook&amp;quot;' expr:onclick='&amp;quot;window.open(this.href, \&amp;quot;_blank\&amp;quot;, \&amp;quot;height=430,width=640\&amp;quot;); return false;&amp;quot;' expr:title='data:top.shareToFacebookMsg' target='_blank'&gt;&lt;span class='share-button-link-text'&gt;&lt;data:top.shareToFacebookMsg/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b:if&gt;&lt;b:if cond='data:top.showPinterestButton'&gt;&lt;a class='goog-inline-block share-button sb-pinterest' expr:href='data:post.sharePostUrl + &amp;quot;&amp;amp;target=pinterest&amp;quot;' expr:title='data:top.shareToPinterestMsg' target='_blank'&gt;&lt;span class='share-button-link-text'&gt;&lt;data:top.shareToPinterestMsg/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b:if&gt;&lt;b:if cond='data:top.showPlusOne'&gt;&lt;div class='goog-inline-block google-plus-share-container'&gt;&lt;data:post.googlePlusShareTag/&gt;&lt;/div&gt;&lt;/b:if&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='status-message'&gt;
  &lt;b:if cond='data:navMessage'&gt;
  &lt;div class='status-msg-wrap'&gt;
    &lt;div class='status-msg-body'&gt;
      &lt;data:navMessage/&gt;
    &lt;/div&gt;
    &lt;div class='status-msg-border'&gt;
      &lt;div class='status-msg-bg'&gt;
        &lt;div class='status-msg-hidden'&gt;&lt;data:navMessage/&gt;&lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style='clear: both;'/&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='threaded-comment-form' var='post'&gt;
  &lt;div class='comment-form'&gt;
    &lt;a name='comment-form'/&gt;
    &lt;b:if cond='data:mobile'&gt;
      &lt;p&gt;&lt;data:blogCommentMessage/&gt;&lt;/p&gt;
      &lt;data:blogTeamBlogMessage/&gt;
      &lt;a expr:href='data:post.commentFormIframeSrc' id='comment-editor-src'/&gt;
      &lt;iframe allowtransparency='true' class='blogger-iframe-colorize blogger-comment-from-post' expr:height='data:cmtIframeInitialHeight' frameborder='0' id='comment-editor' name='comment-editor' src='' style='display: none' width='100%'/&gt;
    &lt;b:else/&gt;
      &lt;p&gt;&lt;data:blogCommentMessage/&gt;&lt;/p&gt;
      &lt;data:blogTeamBlogMessage/&gt;
      &lt;a expr:href='data:post.commentFormIframeSrc' id='comment-editor-src'/&gt;
      &lt;iframe allowtransparency='true' class='blogger-iframe-colorize blogger-comment-from-post' expr:height='data:cmtIframeInitialHeight' frameborder='0' id='comment-editor' name='comment-editor' src='' width='100%'/&gt;
    &lt;/b:if&gt;
    &lt;data:post.cmtfpIframe/&gt;
    &lt;script type='text/javascript'&gt;
      BLOG_CMT_createIframe(&amp;#39;&lt;data:post.appRpcRelayPath/&gt;&amp;#39;);
    &lt;/script&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='threaded_comment_js' var='post'&gt;
  &lt;script async='async' expr:src='data:post.commentSrc' type='text/javascript'/&gt;

  &lt;script type='text/javascript'&gt;
    (function() {
      var items = &lt;data:post.commentJso/&gt;;
      var msgs = &lt;data:post.commentMsgs/&gt;;
      var config = &lt;data:post.commentConfig/&gt;;

// &lt;![CDATA[
      var cursor = null;
      if (items &amp;&amp; items.length &gt; 0) {
        cursor = parseInt(items[items.length - 1].timestamp) + 1;
      }

      var bodyFromEntry = function(entry) {
        var text = (entry &amp;&amp;
                    ((entry.content &amp;&amp; entry.content.$t) ||
                     (entry.summary &amp;&amp; entry.summary.$t))) ||
            '';
        if (entry &amp;&amp; entry.gd$extendedProperty) {
          for (var k in entry.gd$extendedProperty) {
            if (entry.gd$extendedProperty[k].name == 'blogger.contentRemoved') {
              return '&lt;span class="deleted-comment"&gt;' + text + '&lt;/span&gt;';
            }
          }
        }
        return text;
      }

      var parse = function(data) {
        cursor = null;
        var comments = [];
        if (data &amp;&amp; data.feed &amp;&amp; data.feed.entry) {
          for (var i = 0, entry; entry = data.feed.entry[i]; i++) {
            var comment = {};
            // comment ID, parsed out of the original id format
            var id = /blog-(\d+).post-(\d+)/.exec(entry.id.$t);
            comment.id = id ? id[2] : null;
            comment.body = bodyFromEntry(entry);
            comment.timestamp = Date.parse(entry.published.$t) + '';
            if (entry.author &amp;&amp; entry.author.constructor === Array) {
              var auth = entry.author[0];
              if (auth) {
                comment.author = {
                  name: (auth.name ? auth.name.$t : undefined),
                  profileUrl: (auth.uri ? auth.uri.$t : undefined),
                  avatarUrl: (auth.gd$image ? auth.gd$image.src : undefined)
                };
              }
            }
            if (entry.link) {
              if (entry.link[2]) {
                comment.link = comment.permalink = entry.link[2].href;
              }
              if (entry.link[3]) {
                var pid = /.*comments\/default\/(\d+)\?.*/.exec(entry.link[3].href);
                if (pid &amp;&amp; pid[1]) {
                  comment.parentId = pid[1];
                }
              }
            }
            comment.deleteclass = 'item-control blog-admin';
            if (entry.gd$extendedProperty) {
              for (var k in entry.gd$extendedProperty) {
                if (entry.gd$extendedProperty[k].name == 'blogger.itemClass') {
                  comment.deleteclass += ' ' + entry.gd$extendedProperty[k].value;
                } else if (entry.gd$extendedProperty[k].name == 'blogger.displayTime') {
                  comment.displayTime = entry.gd$extendedProperty[k].value;
                }
              }
            }
            comments.push(comment);
          }
        }
        return comments;
      };

      var paginator = function(callback) {
        if (hasMore()) {
          var url = config.feed + '?alt=json&amp;v=2&amp;orderby=published&amp;reverse=false&amp;max-results=50';
          if (cursor) {
            url += '&amp;published-min=' + new Date(cursor).toISOString();
          }
          window.bloggercomments = function(data) {
            var parsed = parse(data);
            cursor = parsed.length &lt; 50 ? null
                : parseInt(parsed[parsed.length - 1].timestamp) + 1
            callback(parsed);
            window.bloggercomments = null;
          }
          url += '&amp;callback=bloggercomments';
          var script = document.createElement('script');
          script.type = 'text/javascript';
          script.src = url;
          document.getElementsByTagName('head')[0].appendChild(script);
        }
      };
      var hasMore = function() {
        return !!cursor;
      };
      var getMeta = function(key, comment) {
        if ('iswriter' == key) {
          var matches = !!comment.author
              &amp;&amp; comment.author.name == config.authorName
              &amp;&amp; comment.author.profileUrl == config.authorUrl;
          return matches ? 'true' : '';
        } else if ('deletelink' == key) {
          return config.baseUri + '/delete-comment.g?blogID='
               + config.blogId + '&amp;postID=' + comment.id;
        } else if ('deleteclass' == key) {
          return comment.deleteclass;
        }
        return '';
      };

      var replybox = null;
      var replyUrlParts = null;
      var replyParent = undefined;

      var onReply = function(commentId, domId) {
        if (replybox == null) {
          // lazily cache replybox, and adjust to suit this style:
          replybox = document.getElementById('comment-editor');
          if (replybox != null) {
            replybox.height = '250px';
            replybox.style.display = 'block';
            replyUrlParts = replybox.src.split('#');
          }
        }
        if (replybox &amp;&amp; (commentId !== replyParent)) {
          replybox.src = '';
          document.getElementById(domId).insertBefore(replybox, null);
          replybox.src = replyUrlParts[0]
              + (commentId ? '&amp;parentID=' + commentId : '')
              + '#' + replyUrlParts[1];
          replyParent = commentId;
        }
      };

      var hash = (window.location.hash || '#').substring(1);
      var startThread, targetComment;
      if (/^comment-form_/.test(hash)) {
        startThread = hash.substring('comment-form_'.length);
      } else if (/^c[0-9]+$/.test(hash)) {
        targetComment = hash.substring(1);
      }

      // Configure commenting API:
      var configJso = {
        'maxDepth': config.maxThreadDepth
      };
      var provider = {
        'id': config.postId,
        'data': items,
        'loadNext': paginator,
        'hasMore': hasMore,
        'getMeta': getMeta,
        'onReply': onReply,
        'rendered': true,
        'initComment': targetComment,
        'initReplyThread': startThread,
        'config': configJso,
        'messages': msgs
      };

      var render = function() {
        if (window.goog &amp;&amp; window.goog.comments) {
          var holder = document.getElementById('comment-holder');
          window.goog.comments.render(holder, provider);
        }
      };

      // render now, or queue to render when library loads:
      if (window.goog &amp;&amp; window.goog.comments) {
        render();
      } else {
        window.goog = window.goog || {};
        window.goog.comments = window.goog.comments || {};
        window.goog.comments.loadQueue = window.goog.comments.loadQueue || [];
        window.goog.comments.loadQueue.push(render);
      }
    })();
// ]]&gt;
  &lt;/script&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='threaded_comments' var='post'&gt;
  &lt;div class='comments' id='comments'&gt;
    &lt;a name='comments'/&gt;
    &lt;h4&gt;&lt;data:post.commentLabelFull/&gt;:&lt;/h4&gt;

    &lt;div class='comments-content'&gt;
      &lt;b:include cond='data:post.embedCommentForm' data='post' name='threaded_comment_js'/&gt;
      &lt;div id='comment-holder'&gt;
         &lt;data:post.commentHtml/&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;p class='comment-footer'&gt;
      &lt;b:if cond='data:post.allowNewComments'&gt;
        &lt;b:include data='post' name='threaded-comment-form'/&gt;
      &lt;b:else/&gt;
        &lt;data:post.noNewCommentsText/&gt;
      &lt;/b:if&gt;
    &lt;/p&gt;

    &lt;b:if cond='data:showCmtPopup'&gt;
      &lt;div id='comment-popup'&gt;
        &lt;iframe allowtransparency='true' frameborder='0' id='comment-actions' name='comment-actions' scrolling='no'&gt;
        &lt;/iframe&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

    &lt;div id='backlinks-container'&gt;
    &lt;div expr:id='data:widget.instanceId + &amp;quot;_backlinks-container&amp;quot;'&gt;
      &lt;b:include cond='data:post.showBacklinks' data='post' name='backlinks'/&gt;
    &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                            &lt;/b:widget&gt;
                            &lt;b:widget id='FeaturedPost1' locked='false' title='' type='FeaturedPost'&gt;
                              &lt;b:widget-settings&gt;
                                &lt;b:widget-setting name='showSnippet'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showPostTitle'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showFirstImage'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='useMostRecentPost'&gt;true&lt;/b:widget-setting&gt;
                              &lt;/b:widget-settings&gt;
                              &lt;b:includable id='main'&gt;
  &lt;!-- Only display title if it's non-empty --&gt;
  &lt;b:if cond='data:title != &amp;quot;&amp;quot;'&gt;
    &lt;h2 class='title'&gt;&lt;data:title/&gt;&lt;/h2&gt;
  &lt;/b:if&gt;
  &lt;b:include name='content'/&gt;

  &lt;b:include name='quickedit'/&gt;
&lt;/b:includable&gt;
                              &lt;b:includable id='content'&gt;
  &lt;div class='post-summary'&gt;
    &lt;b:if cond='data:showPostTitle and data:postTitle != &amp;quot;&amp;quot;'&gt;
      &lt;h3&gt;&lt;a expr:href='data:postUrl'&gt;&lt;data:postTitle/&gt;&lt;/a&gt;&lt;/h3&gt;
    &lt;/b:if&gt;
    &lt;b:if cond='data:showSnippet and data:postSummary != &amp;quot;&amp;quot;'&gt;
      &lt;p&gt;
        &lt;data:postSummary/&gt;
      &lt;/p&gt;
    &lt;/b:if&gt;
    &lt;b:if cond='data:showFirstImage and data:postFirstImage != &amp;quot;&amp;quot;'&gt;
      &lt;img class='image' expr:src='data:postFirstImage'/&gt;
    &lt;/b:if&gt;
  &lt;/div&gt;

  &lt;style type='text/css'&gt;
    .image {
      width: 100%;
    }
  &lt;/style&gt;
&lt;/b:includable&gt;
                            &lt;/b:widget&gt;
                            &lt;b:widget id='PopularPosts1' locked='false' title='' type='PopularPosts'&gt;
                              &lt;b:widget-settings&gt;
                                &lt;b:widget-setting name='numItemsToShow'&gt;3&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showThumbnails'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='showSnippets'&gt;true&lt;/b:widget-setting&gt;
                                &lt;b:widget-setting name='timeRange'&gt;LAST_YEAR&lt;/b:widget-setting&gt;
                              &lt;/b:widget-settings&gt;
                              &lt;b:includable id='main'&gt;
  &lt;b:if cond='data:title != &amp;quot;&amp;quot;'&gt;&lt;h2&gt;&lt;data:title/&gt;&lt;/h2&gt;&lt;/b:if&gt;
  &lt;div class='widget-content popular-posts'&gt;
    &lt;ul&gt;
      &lt;b:loop values='data:posts' var='post'&gt;
      &lt;li&gt;
        &lt;b:if cond='!data:showThumbnails'&gt;
          &lt;b:if cond='!data:showSnippets'&gt;
            &lt;!-- (1) No snippet/thumbnail --&gt;
            &lt;a expr:href='data:post.href'&gt;&lt;data:post.title/&gt;&lt;/a&gt;
          &lt;b:else/&gt;
            &lt;!-- (2) Show only snippets --&gt;
            &lt;div class='item-title'&gt;&lt;a expr:href='data:post.href'&gt;&lt;data:post.title/&gt;&lt;/a&gt;&lt;/div&gt;
            &lt;div class='item-snippet'&gt;&lt;data:post.snippet/&gt;&lt;/div&gt;
          &lt;/b:if&gt;
        &lt;b:else/&gt;
          &lt;!-- (3) Show only thumbnails or (4) Snippets and thumbnails. --&gt;
          &lt;div expr:class='data:showSnippets ? &amp;quot;item-content&amp;quot; : &amp;quot;item-thumbnail-only&amp;quot;'&gt;
            &lt;b:if cond='data:post.featuredImage.isResizable or data:post.thumbnail'&gt;
              &lt;div class='item-thumbnail'&gt;
                &lt;a expr:href='data:post.href' target='_blank'&gt;
                  &lt;b:with value='data:post.featuredImage.isResizable                                  ? resizeImage(data:post.featuredImage, 72, &amp;quot;1:1&amp;quot;)                                  : data:post.thumbnail' var='image'&gt;
                    &lt;img alt='' border='0' expr:src='data:image'/&gt;
                  &lt;/b:with&gt;
                &lt;/a&gt;
              &lt;/div&gt;
            &lt;/b:if&gt;
            &lt;div class='item-title'&gt;&lt;a expr:href='data:post.href'&gt;&lt;data:post.title/&gt;&lt;/a&gt;&lt;/div&gt;
            &lt;b:if cond='data:showSnippets'&gt;
              &lt;div class='item-snippet'&gt;&lt;data:post.snippet/&gt;&lt;/div&gt;
            &lt;/b:if&gt;
          &lt;/div&gt;
          &lt;div style='clear: both;'/&gt;
        &lt;/b:if&gt;
      &lt;/li&gt;
      &lt;/b:loop&gt;
    &lt;/ul&gt;
    &lt;b:include name='quickedit'/&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                            &lt;/b:widget&gt;
                          &lt;/b:section&gt;
                        &lt;/div&gt;
                      &lt;/div&gt;
                      &lt;div class='column-right-outer'&gt;
                        &lt;div class='column-right-inner'&gt;
                          &lt;aside&gt;
                            &lt;b:section class='sidebar' id='sidebar-right-1' preferred='yes' showaddelement='yes'&gt;
                              &lt;b:widget id='Header1' locked='false' title='Packet Geek Networks (Header)' type='Header'&gt;
                                &lt;b:widget-settings&gt;
                                  &lt;b:widget-setting name='displayUrl'/&gt;
                                  &lt;b:widget-setting name='displayHeight'&gt;0&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='sectionWidth'&gt;-1&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='useImage'&gt;false&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='shrinkToFit'&gt;false&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='imagePlacement'&gt;BEHIND&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='displayWidth'&gt;0&lt;/b:widget-setting&gt;
                                &lt;/b:widget-settings&gt;
                                &lt;b:includable id='main'&gt;

  &lt;b:if cond='data:useImage'&gt;
    &lt;b:if cond='data:imagePlacement == &amp;quot;BEHIND&amp;quot;'&gt;
      &lt;!--
      Show image as background to text. You can't really calculate the width
      reliably in JS because margins are not taken into account by any of
      clientWidth, offsetWidth or scrollWidth, so we don't force a minimum
      width if the user is using shrink to fit.
      This results in a margin-width's worth of pixels being cropped. If the
      user is not using shrink to fit then we expand the header.
      --&gt;
      &lt;b:if cond='data:mobile'&gt;
        &lt;div id='header-inner'&gt;
          &lt;div class='titlewrapper' style='background: transparent'&gt;
            &lt;h1 class='title' style='background: transparent; border-width: 0px'&gt;
              &lt;b:include name='title'/&gt;
            &lt;/h1&gt;
          &lt;/div&gt;
          &lt;b:include name='description'/&gt;
        &lt;/div&gt;
      &lt;b:else/&gt;
        &lt;div expr:style='&amp;quot;background-image: url(\&amp;quot;&amp;quot; + data:sourceUrl + &amp;quot;\&amp;quot;); &amp;quot;                      + &amp;quot;background-position: &amp;quot;                      + data:backgroundPositionStyleStr + &amp;quot;; &amp;quot;                      + data:widthStyleStr                      + &amp;quot;min-height: &amp;quot; + data:height                      + &amp;quot;_height: &amp;quot; + data:height                      + &amp;quot;background-repeat: no-repeat; &amp;quot;' id='header-inner'&gt;
          &lt;div class='titlewrapper' style='background: transparent'&gt;
            &lt;h1 class='title' style='background: transparent; border-width: 0px'&gt;
              &lt;b:include name='title'/&gt;
            &lt;/h1&gt;
          &lt;/div&gt;
          &lt;b:include name='description'/&gt;
        &lt;/div&gt;
      &lt;/b:if&gt;
    &lt;b:else/&gt;
      &lt;!--Show the image only--&gt;
      &lt;div id='header-inner'&gt;
        &lt;a expr:href='data:blog.homepageUrl' style='display: block'&gt;
          &lt;img expr:alt='data:title' expr:height='data:height' expr:id='data:widget.instanceId + &amp;quot;_headerimg&amp;quot;' expr:src='data:sourceUrl' expr:width='data:width' style='display: block'/&gt;
        &lt;/a&gt;
        &lt;!--Show the description--&gt;
        &lt;b:if cond='data:imagePlacement == &amp;quot;BEFORE_DESCRIPTION&amp;quot;'&gt;
          &lt;b:include name='description'/&gt;
        &lt;/b:if&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;
  &lt;b:else/&gt;
    &lt;!--No header image --&gt;
    &lt;div id='header-inner'&gt;
      &lt;div class='titlewrapper'&gt;
        &lt;h1 class='title'&gt;
          &lt;b:include name='title'/&gt;
        &lt;/h1&gt;
      &lt;/div&gt;
      &lt;b:include name='description'/&gt;
    &lt;/div&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
                                &lt;b:includable id='description'&gt;
  &lt;div class='descriptionwrapper'&gt;
    &lt;p class='description'&gt;&lt;span&gt;&lt;data:description/&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                                &lt;b:includable id='title'&gt;
  &lt;b:tag cond='data:blog.url != data:blog.homepageUrl' expr:href='data:blog.homepageUrl' name='a'&gt;
    &lt;data:title/&gt;
  &lt;/b:tag&gt;
&lt;/b:includable&gt;
                              &lt;/b:widget&gt;
                              &lt;b:widget id='BlogSearch1' locked='false' title='Search This Blog' type='BlogSearch'&gt;
                                &lt;b:includable id='main'&gt;
    &lt;!-- only display title if it's non-empty --&gt;
    &lt;b:if cond='data:title != &amp;quot;&amp;quot;'&gt;
      &lt;h2 class='title'&gt;&lt;data:title/&gt;&lt;/h2&gt;
    &lt;/b:if&gt;

    &lt;div class='widget-content'&gt;
      &lt;div expr:id='data:widget.instanceId + &amp;quot;_form&amp;quot;'&gt;
        &lt;form class='gsc-search-box' expr:action='data:blog.searchUrl'&gt;
          &lt;b:attr cond='not data:view.isPreview' name='target' value='_top'/&gt;
          &lt;table cellpadding='0' cellspacing='0' class='gsc-search-box'&gt;
            &lt;tbody&gt;
              &lt;tr&gt;
                &lt;td class='gsc-input'&gt;
                  &lt;input autocomplete='off' class='gsc-input' expr:value='data:view.isSearch ? data:view.search.query.escaped : &amp;quot;&amp;quot;' name='q' size='10' title='search' type='text'/&gt;
                &lt;/td&gt;
                &lt;td class='gsc-search-button'&gt;
                  &lt;input class='gsc-search-button' expr:value='data:messages.search' title='search' type='submit'/&gt;
                &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
        &lt;/form&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;b:include name='quickedit'/&gt;
  &lt;/b:includable&gt;
                              &lt;/b:widget&gt;
                              &lt;b:widget id='FollowByEmail1' locked='false' title='Follow by Email' type='FollowByEmail'&gt;
                                &lt;b:includable id='main'&gt;
  &lt;b:if cond='data:title != &amp;quot;&amp;quot;'&gt;&lt;h2 class='title'&gt;&lt;data:title/&gt;&lt;/h2&gt;&lt;/b:if&gt;
  &lt;div class='widget-content'&gt;
    &lt;div class='follow-by-email-inner'&gt;
      &lt;form action='https://feedburner.google.com/fb/a/mailverify' expr:onsubmit='&amp;quot;window.open(\&amp;quot;https://feedburner.google.com/fb/a/mailverify?uri=&amp;quot; + data:feedPath + &amp;quot;\&amp;quot;, \&amp;quot;popupwindow\&amp;quot;, \&amp;quot;scrollbars=yes,width=550,height=520\&amp;quot;); return true&amp;quot;' method='post' target='popupwindow'&gt;
        &lt;table width='100%'&gt;
          &lt;tr&gt;
            &lt;td&gt;
              &lt;input class='follow-by-email-address' name='email' placeholder='Email address...' type='text'/&gt;
            &lt;/td&gt;
            &lt;td width='64px'&gt;
              &lt;input class='follow-by-email-submit' type='submit' value='Submit'/&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
        &lt;/table&gt;
        &lt;input expr:value='data:feedPath' name='uri' type='hidden'/&gt;
        &lt;input name='loc' type='hidden' value='en_US'/&gt;
      &lt;/form&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;span class='item-control blog-admin'&gt;
    &lt;b:include name='quickedit'/&gt;
  &lt;/span&gt;
&lt;/b:includable&gt;
                              &lt;/b:widget&gt;
                              &lt;b:widget id='PageList1' locked='false' title='' type='PageList'&gt;
                                &lt;b:widget-settings&gt;
                                  &lt;b:widget-setting name='pageListJson'&gt;&lt;![CDATA[{'home': {'href': 'https://packetgeeknetworks.blogspot.com/', 'title': 'Home', 'position': 0}, '3531204875718424320': {'href': 'https://packetgeeknetworks.blogspot.com/p/about.html', 'title': 'About', 'position': 1}}]]&gt;&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='homeTitle'&gt;Home&lt;/b:widget-setting&gt;
                                &lt;/b:widget-settings&gt;
                                &lt;b:includable id='main'&gt;
  &lt;b:if cond='data:title != &amp;quot;&amp;quot;'&gt;&lt;h2&gt;&lt;data:title/&gt;&lt;/h2&gt;&lt;/b:if&gt;
  &lt;div class='widget-content'&gt;
    &lt;b:if cond='data:mobile'&gt;
      &lt;select expr:id='data:widget.instanceId + &amp;quot;_select&amp;quot;'&gt;
        &lt;b:loop values='data:links' var='link'&gt;
          &lt;option expr:value='data:link.href'&gt;
            &lt;b:attr cond='data:link.isCurrentPage' name='selected' value='selected'/&gt;
            &lt;data:link.title/&gt;
          &lt;/option&gt;
        &lt;/b:loop&gt;
      &lt;/select&gt;
      &lt;span class='pagelist-arrow'&gt;&amp;amp;#9660;&lt;/span&gt;
    &lt;b:else/&gt;
      &lt;ul&gt;
        &lt;b:loop values='data:links' var='link'&gt;
          &lt;li&gt;
            &lt;b:class cond='data:link.isCurrentPage' name='selected'/&gt;
            &lt;a expr:href='data:link.href'&gt;&lt;data:link.title/&gt;&lt;/a&gt;
          &lt;/li&gt;
        &lt;/b:loop&gt;
      &lt;/ul&gt;
    &lt;/b:if&gt;
    &lt;b:include name='quickedit'/&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                              &lt;/b:widget&gt;
                              &lt;b:widget id='AdSense1' locked='false' title='' type='AdSense'&gt;
                                &lt;b:includable id='main'&gt;
  &lt;div class='widget-content'&gt;
    &lt;data:adCode/&gt;
    &lt;b:include name='quickedit'/&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                              &lt;/b:widget&gt;
                              &lt;b:widget id='AdSense2' locked='false' title='' type='AdSense'&gt;
                                &lt;b:includable id='main'&gt;
  &lt;div class='widget-content'&gt;
    &lt;data:adCode/&gt;
    &lt;b:include name='quickedit'/&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                              &lt;/b:widget&gt;
                              &lt;b:widget id='Profile1' locked='false' title='About Me' type='Profile'&gt;
                                &lt;b:widget-settings&gt;
                                  &lt;b:widget-setting name='showaboutme'&gt;true&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='showlocation'&gt;false&lt;/b:widget-setting&gt;
                                &lt;/b:widget-settings&gt;
                                &lt;b:includable id='main'&gt;
    &lt;b:if cond='data:title != &amp;quot;&amp;quot;'&gt;
      &lt;h2&gt;&lt;data:title/&gt;&lt;/h2&gt;
    &lt;/b:if&gt;
    &lt;div class='widget-content'&gt;
    &lt;b:if cond='data:team'&gt; &lt;!-- team blog profile --&gt;
      &lt;ul&gt;
        &lt;b:loop values='data:authors' var='i'&gt;
          &lt;li&gt;&lt;a class='profile-name-link g-profile' expr:href='data:i.userUrl' expr:style='&amp;quot;background-image: url(&amp;quot; + data:i.profileLogo + &amp;quot;);&amp;quot;'&gt;&lt;data:i.display-name/&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;/b:loop&gt;
      &lt;/ul&gt;

    &lt;b:else/&gt; &lt;!-- normal blog profile --&gt;

      &lt;b:if cond='data:photo.url != &amp;quot;&amp;quot;'&gt;
        &lt;a expr:href='data:userUrl'&gt;&lt;img class='profile-img' expr:alt='data:messages.myPhoto' expr:height='data:photo.height' expr:src='data:photo.url' expr:width='data:photo.width'/&gt;&lt;/a&gt;
      &lt;/b:if&gt;

      &lt;dl class='profile-datablock'&gt;
        &lt;dt class='profile-data'&gt;
          &lt;a class='profile-name-link g-profile' expr:href='data:userUrl' expr:style='&amp;quot;background-image: url(&amp;quot; + data:profileLogo + &amp;quot;);&amp;quot;' rel='author'&gt;
            &lt;data:displayname/&gt;
          &lt;/a&gt;
          &lt;b:if cond='data:hasgoogleprofile'&gt;
            &lt;br/&gt;
            &lt;div class='g-follow' data-annotation='bubble' data-height='20' expr:data-href='data:userUrl'/&gt;
          &lt;/b:if&gt;
        &lt;/dt&gt;

        &lt;b:if cond='data:showlocation'&gt;
          &lt;dd class='profile-data'&gt;&lt;data:location/&gt;&lt;/dd&gt;
        &lt;/b:if&gt;

        &lt;b:if cond='data:aboutme != &amp;quot;&amp;quot;'&gt;&lt;dd class='profile-textblock'&gt;&lt;data:aboutme/&gt;&lt;/dd&gt;&lt;/b:if&gt;
      &lt;/dl&gt;
      &lt;a class='profile-link' expr:href='data:userUrl' rel='author'&gt;&lt;data:viewProfileMsg/&gt;&lt;/a&gt;
    &lt;/b:if&gt;

     &lt;b:include name='quickedit'/&gt;
    &lt;/div&gt;
  &lt;/b:includable&gt;
                              &lt;/b:widget&gt;
                              &lt;b:widget id='ReportAbuse1' locked='false' title='' type='ReportAbuse'&gt;
                                &lt;b:includable id='main'&gt;
  &lt;b:include name='reportAbuse'/&gt;
&lt;/b:includable&gt;
                              &lt;/b:widget&gt;
                              &lt;b:widget id='Label1' locked='false' title='Labels' type='Label'&gt;
                                &lt;b:widget-settings&gt;
                                  &lt;b:widget-setting name='sorting'&gt;ALPHA&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='display'&gt;LIST&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='selectedLabelsList'/&gt;
                                  &lt;b:widget-setting name='showType'&gt;ALL&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='showFreqNumbers'&gt;false&lt;/b:widget-setting&gt;
                                &lt;/b:widget-settings&gt;
                                &lt;b:includable id='main'&gt;
  &lt;b:if cond='data:title != &amp;quot;&amp;quot;'&gt;
    &lt;h2&gt;&lt;data:title/&gt;&lt;/h2&gt;
  &lt;/b:if&gt;
  &lt;div expr:class='&amp;quot;widget-content &amp;quot; + data:display + &amp;quot;-label-widget-content&amp;quot;'&gt;
    &lt;b:if cond='data:display == &amp;quot;list&amp;quot;'&gt;
      &lt;ul&gt;
        &lt;b:loop values='data:labels' var='label'&gt;
          &lt;li&gt;
            &lt;b:if cond='data:blog.url == data:label.url'&gt;
              &lt;span expr:dir='data:blog.languageDirection'&gt;&lt;data:label.name/&gt;&lt;/span&gt;
            &lt;b:else/&gt;
              &lt;a expr:dir='data:blog.languageDirection' expr:href='data:label.url'&gt;&lt;data:label.name/&gt;&lt;/a&gt;
            &lt;/b:if&gt;
            &lt;b:if cond='data:showFreqNumbers'&gt;
              &lt;span dir='ltr'&gt;(&lt;data:label.count/&gt;)&lt;/span&gt;
            &lt;/b:if&gt;
          &lt;/li&gt;
        &lt;/b:loop&gt;
      &lt;/ul&gt;
    &lt;b:else/&gt;
      &lt;b:loop values='data:labels' var='label'&gt;
        &lt;span expr:class='&amp;quot;label-size label-size-&amp;quot; + data:label.cssSize'&gt;
          &lt;b:if cond='data:blog.url == data:label.url'&gt;
            &lt;span expr:dir='data:blog.languageDirection'&gt;&lt;data:label.name/&gt;&lt;/span&gt;
          &lt;b:else/&gt;
            &lt;a expr:dir='data:blog.languageDirection' expr:href='data:label.url'&gt;&lt;data:label.name/&gt;&lt;/a&gt;
          &lt;/b:if&gt;
          &lt;b:if cond='data:showFreqNumbers'&gt;
            &lt;span class='label-count' dir='ltr'&gt;(&lt;data:label.count/&gt;)&lt;/span&gt;
          &lt;/b:if&gt;
        &lt;/span&gt;
      &lt;/b:loop&gt;
    &lt;/b:if&gt;
    &lt;b:include name='quickedit'/&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                              &lt;/b:widget&gt;
                              &lt;b:widget id='BlogArchive1' locked='false' title='Blog Archive' type='BlogArchive'&gt;
                                &lt;b:widget-settings&gt;
                                  &lt;b:widget-setting name='showStyle'&gt;FLAT&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='yearPattern'&gt;yyyy&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='showWeekEnd'&gt;true&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='monthPattern'&gt;MMMM yyyy&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='dayPattern'&gt;MMM dd&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='weekPattern'&gt;MM/dd&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='chronological'&gt;false&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='showPosts'&gt;true&lt;/b:widget-setting&gt;
                                  &lt;b:widget-setting name='frequency'&gt;MONTHLY&lt;/b:widget-setting&gt;
                                &lt;/b:widget-settings&gt;
                                &lt;b:includable id='main'&gt;
  &lt;b:if cond='data:title != &amp;quot;&amp;quot;'&gt;
    &lt;h2&gt;&lt;data:title/&gt;&lt;/h2&gt;
  &lt;/b:if&gt;
  &lt;div class='widget-content'&gt;
  &lt;div id='ArchiveList'&gt;
  &lt;div expr:id='data:widget.instanceId + &amp;quot;_ArchiveList&amp;quot;'&gt;
    &lt;b:include cond='data:style == &amp;quot;HIERARCHY&amp;quot;' data='data' name='interval'/&gt;
    &lt;b:include cond='data:style == &amp;quot;FLAT&amp;quot;' data='data' name='flat'/&gt;
    &lt;b:include cond='data:style == &amp;quot;MENU&amp;quot;' data='data' name='menu'/&gt;
  &lt;/div&gt;
  &lt;/div&gt;
  &lt;b:include name='quickedit'/&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
                                &lt;b:includable id='flat' var='data'&gt;
  &lt;ul class='flat'&gt;
    &lt;b:loop values='data:data' var='i'&gt;
      &lt;li class='archivedate'&gt;
        &lt;a expr:href='data:i.url'&gt;&lt;data:i.name/&gt;&lt;/a&gt; (&lt;data:i.post-count/&gt;)
      &lt;/li&gt;
    &lt;/b:loop&gt;
  &lt;/ul&gt;
&lt;/b:includable&gt;
                                &lt;b:includable id='interval' var='intervalData'&gt;
  &lt;b:loop values='data:intervalData' var='interval'&gt;
    &lt;ul class='hierarchy'&gt;
      &lt;li expr:class='&amp;quot;archivedate &amp;quot; + data:interval.expclass'&gt;
        &lt;b:include cond='data:interval.toggleId' data='interval' name='toggle'/&gt;
        &lt;a class='post-count-link' expr:href='data:interval.url'&gt;
          &lt;data:interval.name/&gt;
        &lt;/a&gt;
        &lt;span class='post-count' dir='ltr'&gt;(&lt;data:interval.post-count/&gt;)&lt;/span&gt;
        &lt;b:include cond='data:interval.data' data='interval.data' name='interval'/&gt;
        &lt;b:include cond='data:interval.posts' data='interval.posts' name='posts'/&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/b:loop&gt;
&lt;/b:includable&gt;
                                &lt;b:includable id='menu' var='data'&gt;
  &lt;select expr:id='data:widget.instanceId + &amp;quot;_ArchiveMenu&amp;quot;'&gt;
    &lt;option value=''&gt;&lt;data:title/&gt;&lt;/option&gt;
    &lt;b:loop values='data:data' var='i'&gt;
      &lt;option expr:value='data:i.url'&gt;&lt;data:i.name/&gt; (&lt;data:i.post-count/&gt;)&lt;/option&gt;
    &lt;/b:loop&gt;
  &lt;/select&gt;
&lt;/b:includable&gt;
                                &lt;b:includable id='posts' var='posts'&gt;
  &lt;ul class='posts'&gt;
    &lt;b:loop values='data:posts' var='post'&gt;
      &lt;li&gt;&lt;a expr:href='data:post.url'&gt;&lt;data:post.title/&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/b:loop&gt;
  &lt;/ul&gt;
&lt;/b:includable&gt;
                                &lt;b:includable id='toggle' var='interval'&gt;
  &lt;a class='toggle' href='javascript:void(0)'&gt;
    &lt;span expr:class='&amp;quot;zippy&amp;quot; + (data:interval.expclass == &amp;quot;expanded&amp;quot; ? &amp;quot; toggle-open&amp;quot; : &amp;quot;&amp;quot;)'&gt;
      &lt;b:if cond='data:interval.expclass == &amp;quot;expanded&amp;quot;'&gt;
        &amp;#9660;&amp;#160;
      &lt;b:elseif cond='data:blog.languageDirection == &amp;quot;rtl&amp;quot;'/&gt;
        &amp;#9668;&amp;#160;
      &lt;b:else/&gt;
        &amp;#9658;&amp;#160;
      &lt;/b:if&gt;
    &lt;/span&gt;
  &lt;/a&gt;
&lt;/b:includable&gt;
                              &lt;/b:widget&gt;
                              &lt;b:widget id='Navbar1' locked='false' title='Navbar' type='Navbar'&gt;
                                &lt;b:includable id='main'&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    function setAttributeOnload(object, attribute, val) {
      if(window.addEventListener) {
        window.addEventListener(&amp;#39;load&amp;#39;,
          function(){ object[attribute] = val; }, false);
      } else {
        window.attachEvent(&amp;#39;onload&amp;#39;, function(){ object[attribute] = val; });
      }
    }
  &amp;lt;/script&amp;gt;
&amp;lt;div id=&amp;quot;navbar-iframe-container&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;https://apis.google.com/js/plusone.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
      gapi.load(&amp;quot;gapi.iframes:gapi.iframes.style.bubble&amp;quot;, function() {
        if (gapi.iframes &amp;amp;&amp;amp; gapi.iframes.getContext) {
          gapi.iframes.getContext().openChild({
              url: &amp;#39;https://www.blogger.com/navbar.g?targetBlogID\x3d2200496390325245811\x26blogName\x3dPacket+Geek+Networks\x26publishMode\x3dPUBLISH_MODE_HOSTED\x26navbarType\x3dLIGHT\x26layoutType\x3dLAYOUTS\x26searchRoot\x3dhttps://www.packetgeek.net/search\x26blogLocale\x3den\x26v\x3d2\x26homepageUrl\x3dhttps://www.packetgeek.net/\x26vt\x3d-3909547591976302888&amp;#39;,
              where: document.getElementById(&amp;quot;navbar-iframe-container&amp;quot;),
              id: &amp;quot;navbar-iframe&amp;quot;
          });
        }
      });
    &amp;lt;/script&amp;gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
(function() {
var script = document.createElement(&amp;#39;script&amp;#39;);
script.type = &amp;#39;text/javascript&amp;#39;;
script.src = &amp;#39;//pagead2.googlesyndication.com/pagead/js/google_top_exp.js&amp;#39;;
var head = document.getElementsByTagName(&amp;#39;head&amp;#39;)[0];
if (head) {
head.appendChild(script);
}})();
&amp;lt;/script&amp;gt;
&lt;/b:includable&gt;
                              &lt;/b:widget&gt;
                              &lt;b:widget id='Attribution1' locked='false' title='' type='Attribution'&gt;
                                &lt;b:widget-settings&gt;
                                  &lt;b:widget-setting name='copyright'/&gt;
                                &lt;/b:widget-settings&gt;
                                &lt;b:includable id='main'&gt;
    &lt;div class='widget-content' style='text-align: center;'&gt;
      &lt;b:if cond='data:attribution != &amp;quot;&amp;quot;'&gt;
       &lt;data:attribution/&gt;
      &lt;/b:if&gt;
    &lt;/div&gt;

    &lt;b:include name='quickedit'/&gt;
  &lt;/b:includable&gt;
                              &lt;/b:widget&gt;
                            &lt;/b:section&gt;
                          &lt;/aside&gt;
                        &lt;/div&gt;
                      &lt;/div&gt;
                      &lt;div style='clear: both'/&gt;
                    &lt;/div&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;script language='javascript' type='text/javascript'&gt;
        window.onload = function() {
          blogger.ui().configure().view();
        };
      &lt;/script&gt;
    &lt;b:else/&gt;
      &lt;h2&gt;&lt;b:message name='messages.dynamicViewsNotAvailable'/&gt;&lt;/h2&gt;
    &lt;/b:if&gt;
  &lt;/body&gt;
&lt;/html&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/template/default'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/template/default'/><link rel='alternate' type='text/html' href='http://www.packetgeek.net/'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_PUBLISHING_MODE</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The type of publishing done for this blog.</title><content type='text'>PUBLISH_MODE_HOSTED</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_PUBLISHING_MODE'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_PUBLISHING_MODE'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_ADMIN_PERMISSION</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The list of administrators' emails for the blog.</title><content type='text'>amascuba@gmail.com</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_ADMIN_PERMISSION'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_ADMIN_PERMISSION'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_ADULT_CONTENT</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether this blog contains adult content</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_ADULT_CONTENT'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_ADULT_CONTENT'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_ALTERNATE_JSRENDER_ALLOWED</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether alternate JS renderings are allowed</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_ALTERNATE_JSRENDER_ALLOWED'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_ALTERNATE_JSRENDER_ALLOWED'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_ANALYTICS_ACCOUNT_NUMBER</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Blog's Google Analytics account number</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_ANALYTICS_ACCOUNT_NUMBER'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_ANALYTICS_ACCOUNT_NUMBER'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_ARCHIVE_DATE_FORMAT</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The number of the archive index date format</title><content type='text'>9</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_ARCHIVE_DATE_FORMAT'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_ARCHIVE_DATE_FORMAT'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_ARCHIVE_FREQUENCY</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>How frequently this blog should be archived</title><content type='text'>MONTHLY</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_ARCHIVE_FREQUENCY'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_ARCHIVE_FREQUENCY'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_AUTHOR_PERMISSION</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The list of authors' emails who have permission to publish.</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_AUTHOR_PERMISSION'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_AUTHOR_PERMISSION'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_BY_POST_ARCHIVING</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether to provide an archive page for each post</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_BY_POST_ARCHIVING'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_BY_POST_ARCHIVING'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_COMMENT_ACCESS</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Who can comment</title><content type='text'>BLOGGERS</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_ACCESS'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_ACCESS'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_COMMENT_CAPTCHA</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether to require commenters to complete a Captcha</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_CAPTCHA'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_CAPTCHA'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_COMMENT_EMAIL</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>List of e-mail addresses to send notifications of new comments to</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_EMAIL'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_EMAIL'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_COMMENT_FEED</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The type of feed to provide for blog comments</title><content type='text'>FULL</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_FEED'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_FEED'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_COMMENT_FORM_LOCATION</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Blog comment form location</title><content type='text'>EMBEDDED_IFRAME</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_FORM_LOCATION'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_FORM_LOCATION'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_COMMENT_MESSAGE</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Blog comment message</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_MESSAGE'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_MESSAGE'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_COMMENT_MODERATION</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether to enable comment moderation</title><content type='text'>DISABLED</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_MODERATION'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_MODERATION'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_COMMENT_MODERATION_DELAY</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Number of days after which new comments are subject to moderation</title><content type='text'>14</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_MODERATION_DELAY'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_MODERATION_DELAY'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_COMMENT_MODERATION_EMAIL</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Email address to send notifications of new comments needing moderation to</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_MODERATION_EMAIL'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_MODERATION_EMAIL'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_COMMENT_PROFILE_IMAGES</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether to show profile images in comments</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_PROFILE_IMAGES'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENT_PROFILE_IMAGES'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_COMMENTS_ALLOWED</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether to show comments</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENTS_ALLOWED'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENTS_ALLOWED'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_COMMENTS_TIME_STAMP_FORMAT</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Comment time stamp format number</title><content type='text'>29</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENTS_TIME_STAMP_FORMAT'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_COMMENTS_TIME_STAMP_FORMAT'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_CONVERT_LINE_BREAKS</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether to convert line breaks into &lt;br /&gt; tags in post editor</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_CONVERT_LINE_BREAKS'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_CONVERT_LINE_BREAKS'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_CUSTOM_ADS_TXT</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The custom ads.txt content of the blog served to ads search engines.</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_CUSTOM_ADS_TXT'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_CUSTOM_ADS_TXT'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_CUSTOM_ADS_TXT_ENABLED</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether this blog serves custom ads.txt content to ads search engines.</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_CUSTOM_ADS_TXT_ENABLED'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_CUSTOM_ADS_TXT_ENABLED'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_CUSTOM_PAGE_NOT_FOUND</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The content served when the requested post or page is not found.</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_CUSTOM_PAGE_NOT_FOUND'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_CUSTOM_PAGE_NOT_FOUND'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_CUSTOM_ROBOTS_TXT</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The custom robots.txt content of the blog served to search engines.</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_CUSTOM_ROBOTS_TXT'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_CUSTOM_ROBOTS_TXT'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_CUSTOM_ROBOTS_TXT_ENABLED</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether this blog serves custom robots.txt content to search engines.</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_CUSTOM_ROBOTS_TXT_ENABLED'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_CUSTOM_ROBOTS_TXT_ENABLED'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_DATE_FORMAT</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The number of the date header format</title><content type='text'>26</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_DATE_FORMAT'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_DATE_FORMAT'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_DEFAULT_COMMENTS_MODE</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Default comment mode for posts</title><content type='text'>DEFAULT_HAVE_COMMENTS</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_DEFAULT_COMMENTS_MODE'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_DEFAULT_COMMENTS_MODE'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_DESCRIPTION</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>A description of the blog</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_DESCRIPTION'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_DESCRIPTION'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_EMAIL_POST_LINKS</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether to show a link for users to e-mail posts</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_EMAIL_POST_LINKS'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_EMAIL_POST_LINKS'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_FEED_REDIRECT_URL</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>URL to redirect post feed requests to</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_FEED_REDIRECT_URL'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_FEED_REDIRECT_URL'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_FLOAT_ALIGNMENT</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether float alignment is enabled for the blog</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_FLOAT_ALIGNMENT'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_FLOAT_ALIGNMENT'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_LOCALE</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Language for this blog</title><content type='text'>en</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_LOCALE'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_LOCALE'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_MAX_NUM</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Maximum number of things to show on the main page"</title><content type='text'>7</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_MAX_NUM'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_MAX_NUM'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_MAX_UNIT</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Unit of things to show on the main page</title><content type='text'>POSTS</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_MAX_UNIT'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_MAX_UNIT'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_META_DESCRIPTION</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The meta description of the blog served to search engines.</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_META_DESCRIPTION'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_META_DESCRIPTION'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_META_DESCRIPTION_ENABLED</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether this blog is served with meta descriptions.</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_META_DESCRIPTION_ENABLED'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_META_DESCRIPTION_ENABLED'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_NAME</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The name of the blog</title><content type='text'>Packet Geek Networks</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_NAME'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_NAME'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_PER_POST_FEED</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The type of feed to provide for per-post comments</title><content type='text'>FULL</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_PER_POST_FEED'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_PER_POST_FEED'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_POST_FEED</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The type of feed to provide for blog posts</title><content type='text'>FULL</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_POST_FEED'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_POST_FEED'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_POST_FEED_FOOTER</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Footer to append to the end of each entry in the post feed</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_POST_FEED_FOOTER'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_POST_FEED_FOOTER'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_POST_TEMPLATE</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The template for blog posts</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_POST_TEMPLATE'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_POST_TEMPLATE'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_PROMOTED</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether this blog can be promoted on Blogger</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_PROMOTED'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_PROMOTED'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_QUICK_EDITING</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether Quick Editing is enabled</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_QUICK_EDITING'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_QUICK_EDITING'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_READ_ACCESS_MODE</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The access type for the readers of the blog.</title><content type='text'>PUBLIC</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_READ_ACCESS_MODE'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_READ_ACCESS_MODE'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_READER_PERMISSION</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The list of emails for users who have permission to read the blog.</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_READER_PERMISSION'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_READER_PERMISSION'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_SEARCHABLE</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether this blog should be indexed by search engines</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_SEARCHABLE'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_SEARCHABLE'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_SEND_EMAIL</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Comma separated list of emails to send new blog posts to</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_SEND_EMAIL'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_SEND_EMAIL'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_SHOW_TITLE</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether to show the title field</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_SHOW_TITLE'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_SHOW_TITLE'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_SHOW_URL</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether to show a related link box in the post composer</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_SHOW_URL'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_SHOW_URL'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_TIME_STAMP_FORMAT</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The number of the time stamp format</title><content type='text'>15</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_TIME_STAMP_FORMAT'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_TIME_STAMP_FORMAT'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_TIME_ZONE</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>The time zone for this blog</title><content type='text'>America/Chicago</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_TIME_ZONE'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_TIME_ZONE'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.settings.BLOG_USE_LIGHTBOX</id><published>2019-04-11T10:26:23.590-05:00</published><updated>2020-02-28T21:51:23.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Whether to show images in the Lightbox when clicked</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_USE_LIGHTBOX'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/settings/BLOG_USE_LIGHTBOX'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-6776662308315702558</id><published>2016-10-21T12:10:00.001-05:00</published><updated>2019-04-11T11:10:08.032-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='network security'/><category scheme='http://www.blogger.com/atom/ns#' term='DDoS'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Security'/><category scheme='http://www.blogger.com/atom/ns#' term='Miscellaneous Hacking'/><category scheme='http://www.blogger.com/atom/ns#' term='Net Nuetrality'/><category scheme='http://www.blogger.com/atom/ns#' term='Network Connectivity'/><title type='text'>A New Approach to Defending Against DDoS Attacks</title><content type='html'>DDoS (Distributed Denial of Service) attacks are getting larger, more sophisticated, and more pervasive. Just today (October 21, 2016), DDoS attacks against &lt;a href="http://dyn.com/" target="_blank"&gt;Dyn, Inc&lt;/a&gt; have impacted the availability of sites such as &lt;a href="https://twitter.com/" target="_blank"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.netflix.com/browse" target="_blank"&gt;Netflix&lt;/a&gt;, &lt;a href="https://github.com/" target="_blank"&gt;Github&lt;/a&gt;, and &lt;a href="https://www.spotify.com/us/" target="_blank"&gt;Spotify&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;Typical DDoS mitigation strategies rely on defending the victim (destination) as close to the destination as possible. This can happen in a number of ways.&lt;br/&gt;&lt;br/&gt;One defense strategy is to redirect traffic, destined to the victim, through an alternative network that is designed to identify malicious traffic, drop the malicious traffic, before sending the legitimate traffic to the victim. This generally works well for volumetric or protocol based attacks. However, this requires that a network with a vast amount of capacity be available and sitting idle, except in times of attacks.&lt;br/&gt;&lt;br/&gt;Another defense strategy is to utilize network and application firewalls, sitting in front of the destination, to identify the malicious traffic and drop it before sending the legitimate traffic to the destination. This generally works fine for some protocol and application based attacks.&lt;br/&gt;&lt;br/&gt;Then, in some cases, volumetric attacks are so large, that they completely overwhelm the destination network. In this case, they use a BGP community, known as Remote Triggered Black Holes (RTBH) to tell their upstream service providers to drop traffic destined to the victim before it even reaches the destination network. In this case, the victim is sacrificed for the availability of rest of the network. This is typically the worst case scenario, as the victim still goes offline, conceding a victory to the attacker.&lt;br/&gt;&lt;br/&gt;These countermeasures obviously are not going to scale with ever growing attacks. This is why we need the architects and builders of the Internet to come together to standardize on a new method of defending against the these attacks. We need a global community of real time analytics that identify malicious sources and use RTBH techniques to automatically take the offending sources off the Internet, instead of the victims. This technique will require that every Internet provider agree on a standard, and abide by it.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/6776662308315702558/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2016/10/a-new-approach-to-defending-against_21.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6776662308315702558'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6776662308315702558'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2016/10/a-new-approach-to-defending-against_21.html' title='A New Approach to Defending Against DDoS Attacks'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-2970364981213724816</id><published>2016-07-08T11:26:00.001-05:00</published><updated>2019-04-11T11:10:07.509-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Python Scripting'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><category scheme='http://www.blogger.com/atom/ns#' term='Network Programmability'/><category scheme='http://www.blogger.com/atom/ns#' term='DevOps'/><category scheme='http://www.blogger.com/atom/ns#' term='Network DevOps'/><title type='text'>Network Lifecycle Management with Hierarchical Configuration</title><content type='html'>In a &lt;a href="https://www.packetgeek.net/2016/03/kicking-the-tires-on-the-new-ansible-network-modules-part-2/"&gt;previous blog&lt;/a&gt;, I hinted at a network configuration life cycle management library called hierarchical_configuration. I've been meaning to write about it for a while, but we've been super busy at work. I also wanted to ensure that we get our latest version of the library out in the public for general consumption before I wrote about it.&lt;br/&gt;&lt;br/&gt;As your fleet routers and switches grow, it becomes pretty natural to place these devices into a set of categories. For example, core, aggregation, and access. Each of these categories typically have a standard configuration. Hopefully each of these standard configurations exists as templates, so that new deployments can be rolled out quickly. But, what about making changes to the templates? Do you make changes to these templates, then continue to roll them out to new deployments, leaving the existing install base with an outdated configuration? Or do you return to the install base and remediate the devices with updated configurations? What if you have thousands of devices? This has been a problem that my colleagues and I have set out to solve. This is how hierarchical_configuration has evolved.&lt;br/&gt;&lt;br/&gt;So, what is hierarchical_configuration? hierarchical_configuration is a python library that allows you to compare the running configuration and the intended configuration from a network device, then generate a set of commands that it will bring the network device into compliance with the intended configuration. hierarchical_configuration also has an extensive configuration file, so that you can define how specific commands or sections of commands get remediated.&lt;br/&gt;&lt;br/&gt;Most utilities that performs a similar function as hierarchical_configuration, apply command remediation by negating a command, then applying the new command. For instance, if you wanted to change the interface description of an interface, most utilities will do something like:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;interface Ethernet0/1&lt;br/&gt; no description ROUTER1&lt;br/&gt; description ROUTER2&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;That works, but it's wasteful on CPU cycles, which slows down the over all application run time when you are attempting to apply interface descriptions to thousands of interfaces. What if the command was something that could be impactful, if it were negated? Maybe something like changing 'transport input ssh telnet' to 'transport input ssh', under your line vty? Negating the command could potentially cause you to lose management access.&lt;br/&gt;&lt;br/&gt;hierarchical_configuration gives you several configuration options for dealing with such scenarios. You define those as a &lt;a href="http://yaml.org/" target="_blank"&gt;YAML&lt;/a&gt; file under hier_options. Here is a sample of hier_options:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;---&lt;br/&gt;hier_tags:&lt;br/&gt;- lineage:&lt;br/&gt;  - startswith:&lt;br/&gt;    - ip access-list extended TEST&lt;br/&gt;    - no ip access-list extended TEST&lt;br/&gt;  add_tags: NEW_ACL&lt;br/&gt;- lineage:&lt;br/&gt;  - startswith: interface&lt;br/&gt;  - startswith: ip access-group TEST&lt;br/&gt;  add_tags: NEW_ACL&lt;br/&gt;- lineage:&lt;br/&gt;  - startswith:&lt;br/&gt;    - ip domain-name&lt;br/&gt;    - no ip domain-name&lt;br/&gt;    - ip domain-lookup&lt;br/&gt;    - no ip domain-lookup&lt;br/&gt;    - logging&lt;br/&gt;    - no logging&lt;br/&gt;    - snmp-server &lt;br/&gt;    - no snmp-server &lt;br/&gt;    - ntp server&lt;br/&gt;    - no ntp server&lt;br/&gt;    - ip tcp path-mtu-discovery&lt;br/&gt;    - ip access-list resequence&lt;br/&gt;  add_tags: safe &lt;br/&gt;- lineage:&lt;br/&gt;  - startswith: line&lt;br/&gt;  - startswith: exec-timeout&lt;br/&gt;  add_tags: safe &lt;br/&gt;- lineage:&lt;br/&gt;  - startswith: interface&lt;br/&gt;  - startswith: ip access-group&lt;br/&gt;  add_tags: unsafe &lt;br/&gt;- lineage:&lt;br/&gt;  - startswith: router ospf&lt;br/&gt;    new_in_config: false&lt;br/&gt;  - startswith:&lt;br/&gt;    - ispf&lt;br/&gt;    - nsf&lt;br/&gt;    - log&lt;br/&gt;  add_tags: safe &lt;br/&gt;- lineage: &lt;br/&gt;  - startswith: router ospf&lt;br/&gt;    new_in_config: false&lt;br/&gt;  - startswith:&lt;br/&gt;    - network &lt;br/&gt;    - area&lt;br/&gt;  add_tags: unsafe &lt;br/&gt;&lt;br/&gt;hier_options:&lt;br/&gt;  #Indicates the style of the configuration&lt;br/&gt;  style: ios&lt;br/&gt;&lt;br/&gt;  #if there is a delta, overwrite these parents instead of one of their children&lt;br/&gt;  sectional_overwrite:&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: ipv6 access-list&lt;br/&gt;&lt;br/&gt;  ordering:&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith:&lt;br/&gt;      - ip access-list&lt;br/&gt;      - access-list&lt;br/&gt;    order: 300&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith:&lt;br/&gt;      - tacacs-server host&lt;br/&gt;    order: 400&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: interface&lt;br/&gt;    - startswith:&lt;br/&gt;      - ip access-group&lt;br/&gt;      - no ip access-group&lt;br/&gt;    order: 400&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith:&lt;br/&gt;      - no ip access-list&lt;br/&gt;      - no access-list&lt;br/&gt;      - no ip prefix-list&lt;br/&gt;      - no tacacs-server host&lt;br/&gt;    order: 590 &lt;br/&gt;  - lineage:&lt;br/&gt;    - contains: ip spd queue min-threshold&lt;br/&gt;    order: 601&lt;br/&gt;  - lineage:&lt;br/&gt;    - contains: ip spd queue max-threshold&lt;br/&gt;    order: 602&lt;br/&gt;&lt;br/&gt;  sectional_overwrite_no_negate: []&lt;br/&gt;&lt;br/&gt;  #adds +1 indent to lines following start_expression and removes the +1 indent for lines following end_expression&lt;br/&gt;  indent_adjust: []&lt;br/&gt;&lt;br/&gt;  parent_allows_duplicate_child: []&lt;br/&gt;&lt;br/&gt;  sectional_exiting:&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: router bgp&lt;br/&gt;    - startswith: template peer-policy&lt;br/&gt;    exit_text: exit-peer-policy&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: router bgp&lt;br/&gt;    - startswith: template peer-session&lt;br/&gt;    exit_text: exit-peer-session&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: router bgp&lt;br/&gt;    - startswith: address-family&lt;br/&gt;    exit_text: exit-address-family&lt;br/&gt;&lt;br/&gt;  #substitions against the full multi-line config text&lt;br/&gt;  full_text_sub:&lt;br/&gt;  - search: 'banner exec (\S+)\n(.*\n)+\\1\s*\n'&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: 'banner motd (\S+)\n(.*\n)+\\1\s*\n'&lt;br/&gt;    replace: ''&lt;br/&gt;&lt;br/&gt;  #substitions against each line of the config text&lt;br/&gt;  per_line_sub:&lt;br/&gt;  - search: ^Building configuration.*&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^Current configuration.*&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^! Last configuration change.*&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^! NVRAM config last updated.*&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^ntp clock-period .*&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: .*message-digest-key.*&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^version.*&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: .*password.*&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^ logging event link-status$&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^ logging event subif-link-status$&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^\s*ipv6 unreachables disable$&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^\s*key .*&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^end$&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: '^\s*[#!].*'&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^ no ip address&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^ exit-peer-policy&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^ exit-peer-session&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^ exit-address-family&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: ^crypto key generate rsa general-keys.*$&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: .*key-string.*&lt;br/&gt;    replace: ''&lt;br/&gt;&lt;br/&gt;  idempotent_commands_blacklist: []&lt;br/&gt;&lt;br/&gt;  #These commands do not require negation, they simply overwrite themselves&lt;br/&gt;  idempotent_commands:&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: hostname&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: logging source-interface&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: interface&lt;br/&gt;    - startswith: description&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: interface&lt;br/&gt;    - startswith: ip address&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: line vty&lt;br/&gt;    - startswith:&lt;br/&gt;      - transport input&lt;br/&gt;      - access-class&lt;br/&gt;      - ipv6 access-class&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: interface&lt;br/&gt;    - re_search: standby \d+ (priority|authentication md5)&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: router bgp&lt;br/&gt;    - startswith: bgp router-id&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: router ospf&lt;br/&gt;    - startswith: router-id&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: ipv6 router ospf&lt;br/&gt;    - startswith: router-id&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: router ospf&lt;br/&gt;    - startswith: log-adjacency-changes&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: ipv6 router ospf&lt;br/&gt;    - startswith: log-adjacency-changes&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: router bgp&lt;br/&gt;    - re_search: neighbor \S+ description&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: snmp-server community&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: snmp-server location&lt;br/&gt;  - lineage:&lt;br/&gt;    - equals: line con 0&lt;br/&gt;    - startswith: exec-timeout&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: interface&lt;br/&gt;    - startswith: ip ospf message-digest-key&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: logging buffered&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: tacacs-server key&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: logging facility&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: vlan internal allocation policy&lt;br/&gt;&lt;br/&gt;  #Default when expression: list of expressions&lt;br/&gt;  negation_default_when: []&lt;br/&gt;  #- lineage:&lt;br/&gt;  #  - startswith: interface&lt;br/&gt;&lt;br/&gt;  #Negate substitutions: expression -&amp;gt; negate with&lt;br/&gt;  negation_negate_with: []&lt;br/&gt;  #- lineage:&lt;br/&gt;  #  - startswith: interface&lt;br/&gt;  #  use: command&lt;/pre&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;Lets break down the individual sections of hier_options. The first section is 'sectional_overwrite'. sectional_overwrite does exactly like it sounds. It over-writes an entire section of configuration if there is a change. In the example, it tags ipv6 access-lists as a section of code that should use sectional_overwrite.  If any changes are made to the intended configuration for ipv6 access-list, then hierarchical_configuration over writes the entire section of configuration, rather than targeting individual lines of children configuration in the section.&lt;br/&gt;&lt;br/&gt;The next section is 'ordering'. Ordering is a very handy configuration option. It allows you to weight the order in which commands are presented in hierarchical_configuration. The default weight is 500. The smaller the number, the higher up in the configuration the commands are presented. While the commands tagged with larger numbers are presented lower in the configuration.&lt;br/&gt;&lt;br/&gt;For instance, assume that you have an access-list called TEST, which is applied to Ethernet0/1:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;ip access-list TEST&lt;br/&gt; permit ip any host 1.1.1.1&lt;br/&gt;interface Ethernet0/1&lt;br/&gt; ip access-group TEST in&lt;/pre&gt;&lt;br/&gt;Let's say that you want to create a new access-list called TESTING and apply it to Ethernet0/1, rendering the access-list TEST as un-needed. When you go to apply the configuration, you don't want to remove the access-list TEST before you've created access-list TESTING and applied it to interface Ethernet0/1. Doing so may impact traffic that is flowing across the interface. The preferable order of operation is:&lt;br/&gt;&lt;ol&gt;&lt;br/&gt; 	&lt;li&gt;Create the new access-list&lt;/li&gt;&lt;br/&gt; 	&lt;li&gt;Apply the new access-list to the interface&lt;/li&gt;&lt;br/&gt; 	&lt;li&gt;Remove the old access-list&lt;/li&gt;&lt;br/&gt;&lt;/ol&gt;&lt;br/&gt;To do so, you will want to the command 'no ip access-list' closer to the bottom of the list of commands. You would do this, by setting the order of the negation of ip access-list higher than 500.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;  ordering:&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith:&lt;br/&gt;      - no ip access-list&lt;br/&gt;    order: 525&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;In this example, any command generated that starts with 'no ip access-list' gets tagged with an order of 525, which moves that section of configuration lower into the generated config. The generated configuration would look like:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;ip access-list TESTING&lt;br/&gt; permit ip any host 1.1.1.1&lt;br/&gt;interface Ethernet0/1&lt;br/&gt; ip access-group TESTING in&lt;br/&gt;no ip access-list TEST&lt;/pre&gt;&lt;br/&gt;The next two sections are 'full_text_sub' and 'per_line_sub'. When you pull a running config from a device, it will typically contain some fluff, such as:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;#sh run&lt;br/&gt;Building configuration...&lt;br/&gt;&lt;br/&gt;Current configuration : 9574 bytes&lt;br/&gt;!&lt;br/&gt;! Last configuration change at 19:51:43 CST Mon Apr 25 2016 by jtdub&lt;br/&gt;version 15.1&lt;/pre&gt;&lt;br/&gt;That kind of text is just back ground noise, when we are attempting to determine the difference between the running config and the intended config. So, per_line_sub attempts to resolve that by ignoring it when comparing the configurations.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;  per_line_sub:&lt;br/&gt;  - search: ^Building configuration.*&lt;br/&gt;    replace: ''&lt;/pre&gt;&lt;br/&gt;As you can see, it will find any line that contains 'Building configuration" and replace it with no data, effectively deleting the line. full_text_sub performs a similar task, but for entire sections of code. In our example, we ignore the banners on the device, as those can have information that is unique to the device.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;  full_text_sub:&lt;br/&gt;  - search: 'banner exec (\S+)\n(.*\n)+\\1\s*\n'&lt;br/&gt;    replace: ''&lt;br/&gt;  - search: 'banner motd (\S+)\n(.*\n)+\\1\s*\n'&lt;br/&gt;    replace: ''&lt;/pre&gt;&lt;br/&gt;Hierarchical_configuration understands sections of config. It does this by assuming that a line of configuration that doesn't have any indentation to be a parent and any lines of configuration under the parent that have indentation are children of the parent. When the config reaches another line without indentation, the section of configuration ends. An example would be an interface configuration.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;interface Ethernet0/1       : Parent configuration section&lt;br/&gt; switchport                 : Child configuration section of interface Ethernet0/1&lt;br/&gt; switchport mode access     : Child configuration section of interface Ethernet0/1&lt;br/&gt; switchport access vlan 10  : Child configuration section of interface Ethernet0/1&lt;br/&gt;interface Ethernet0/2       : Parent configuration section&lt;br/&gt; no switchport              : Child configuration section of interface Ethernet0/2&lt;br/&gt; ip address 10.0.0.0/31     : Child configuration section of interface Ethernet0/2&lt;/pre&gt;&lt;br/&gt;In some cases, there will be multiple tiers of parent / child configurations. An example would be peer templates in BGP.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;router bgp 65000          : Parent configuration section&lt;br/&gt; template peer-session RR : Child configuration section of 'router bgp 65000'&lt;br/&gt;  remote-as 65000         : Child configuration section of 'template peer-session RR'&lt;br/&gt;  update-source loopback0 : Child configuration section of 'template peer-session RR'&lt;br/&gt; exit-peer-session        : Sectional exit&lt;br/&gt; template peer-policy RR  : Child configuration section of 'router bgp 65000'&lt;br/&gt;  route-reflector-client  : Child configuration section of 'template peer-policy RR'&lt;br/&gt; exit-peer-policy         : Sectional exit&lt;/pre&gt;&lt;br/&gt;With 'sectional_exiting', you can define sections of configuration that have sub-children of children, as explained above.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;  sectional_exiting:&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: router bgp&lt;br/&gt;    - startswith: template peer-policy&lt;br/&gt;    exit_text: exit-peer-policy&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: router bgp&lt;br/&gt;    - startswith: template peer-session&lt;br/&gt;    exit_text: exit-peer-session&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: router bgp&lt;br/&gt;    - startswith: address-family&lt;br/&gt;    exit_text: exit-address-family&lt;/pre&gt;&lt;br/&gt;'&lt;span class="s1"&gt;idempotent_commands' is the section where you define what should be over-written, rather than negated, then re-applied with new configuration. Commands such as hostname, description, ip address, etc should all be over-written, rather than negated.&lt;/span&gt;&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;  idempotent_commands:&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: hostname&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: logging source-interface&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: interface&lt;br/&gt;    - startswith: description&lt;br/&gt;  - lineage:&lt;br/&gt;    - startswith: interface&lt;br/&gt;    - startswith: ip address&lt;/pre&gt;&lt;br/&gt;Another very handy set of options is command tagging, which resides in a different config section from hier_options, called hier_tags. Being able to tag commands allows you to generate remediation commands which target very specific commands, such as creating a new access-list, applying it, then removing the old access-list. We'll continue to use the examples that I've have above with replacing the access-list TEST with TESTING. The first thing we need to do is set up our tagging, which will look like:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;hier_tags:&lt;br/&gt;- lineage:&lt;br/&gt;  - startswith:&lt;br/&gt;    - ip access-list extended TEST&lt;br/&gt;    - no ip access-list extended TEST&lt;br/&gt;  add_tags: NEW_ACL&lt;br/&gt;- lineage:&lt;br/&gt;  - startswith: interface&lt;br/&gt;  - startswith: ip access-group TEST&lt;br/&gt;  add_tags: NEW_ACL&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;Assume that your running config is:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;hostname router&lt;br/&gt;!&lt;br/&gt;interface Ethernet0/1&lt;br/&gt; ip address 10.0.0.0/31&lt;br/&gt; ip access-group TEST in&lt;br/&gt;!&lt;br/&gt;interface Ethernet0/2&lt;br/&gt; ip address 10.0.0.2/31&lt;br/&gt;!&lt;br/&gt;ip access-list extended TEST&lt;br/&gt; permit ip any host 1.1.1.1&lt;br/&gt; permit ip any host 4.4.4.4&lt;br/&gt; permit ip any host 5.5.5.5&lt;br/&gt; permit ip any host 6.6.6.6&lt;br/&gt;!&lt;br/&gt;router ospf 1&lt;br/&gt; network 10.0.0.0 0.0.255.255 area 0&lt;br/&gt;!&lt;br/&gt;snmp-server community private&lt;br/&gt;!&lt;br/&gt;ntp server 11.22.33.44&lt;/pre&gt;&lt;br/&gt;and your intended config is:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;hostname router&lt;br/&gt;!&lt;br/&gt;interface Ethernet0/1&lt;br/&gt; ip address 10.0.0.0/31&lt;br/&gt; ip access-group TESTING in&lt;br/&gt;!&lt;br/&gt;interface Ethernet0/2&lt;br/&gt; ip address 10.0.0.2/31&lt;br/&gt; ip access-group SOMEACL in&lt;br/&gt; ipv6 enable&lt;br/&gt; ipv6 filter TEST out &lt;br/&gt;!&lt;br/&gt;ip access-list extended TESTING&lt;br/&gt; permit ip any host 1.1.1.1&lt;br/&gt; permit ip any host 4.4.4.4&lt;br/&gt; permit ip any host 5.5.5.5&lt;br/&gt; permit ip any host 6.6.6.6&lt;br/&gt;!&lt;br/&gt;ip access-list extended SOMEACL&lt;br/&gt; permit ip any host 7.7.7.7&lt;br/&gt;!&lt;br/&gt;ipv6 access-list TEST&lt;br/&gt; permit ipv6 any 2001::1/128&lt;br/&gt;!&lt;br/&gt;router ospf 1&lt;br/&gt; network 10.0.0.0 0.0.255.255 area 0&lt;br/&gt;!&lt;br/&gt;snmp-server community private&lt;br/&gt;!&lt;br/&gt;ntp server 11.22.33.44&lt;/pre&gt;&lt;br/&gt;We can use hierarchical_configuration compare the two configurations, make the appropriate configuration tag (NEW_ACL), then spit out a configuration plan based on the NEW_ACL tag.&lt;br/&gt;&lt;br/&gt;Here is a sample output of the configuration comparison:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;$ ./example.py &lt;br/&gt;&lt;br/&gt;{'comment': "new section, didn't exist before", 'text': 'ip access-list extended TESTING', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL']}&lt;br/&gt;{'comment': '', 'text': ' 10 permit ip any host 1.1.1.1', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL']}&lt;br/&gt;{'comment': '', 'text': ' 20 permit ip any host 4.4.4.4', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL']}&lt;br/&gt;{'comment': '', 'text': ' 30 permit ip any host 5.5.5.5', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL']}&lt;br/&gt;{'comment': '', 'text': ' 40 permit ip any host 6.6.6.6', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL']}&lt;br/&gt;{'comment': "new section, didn't exist before", 'text': 'ip access-list extended SOMEACL', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': '', 'text': ' 10 permit ip any host 7.7.7.7', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': '', 'text': 'interface Ethernet0/1', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL', 'unsafe']}&lt;br/&gt;{'comment': '', 'text': ' no ip access-group TEST in', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': '', 'text': ' ip access-group TESTING in', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL', 'unsafe']}&lt;br/&gt;{'comment': '', 'text': 'interface Ethernet0/2', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['unsafe']}&lt;br/&gt;{'comment': '', 'text': ' ip access-group SOMEACL in', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['unsafe']}&lt;br/&gt;{'comment': '', 'text': ' ipv6 enable', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': '', 'text': ' ipv6 filter TEST out', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': "new section, didn't exist before", 'text': 'ipv6 access-list TEST', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': '', 'text': ' permit ipv6 any 2001::1/128', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': 'removes 6 lines', 'text': 'no ip access-list extended TEST', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL']}&lt;/pre&gt;&lt;br/&gt;As you can see, only the parts of the config pertaining to the TESTING access-list are tagged with the NEW_ACL tag. We can now generate a config plan based on that tag.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;$ ./example.py &lt;br/&gt;&lt;br/&gt;Python dictionary of the comparison results&lt;br/&gt;&lt;br/&gt;{'comment': "new section, didn't exist before", 'text': 'ip access-list extended TESTING', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL']}&lt;br/&gt;{'comment': '', 'text': ' 10 permit ip any host 1.1.1.1', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL']}&lt;br/&gt;{'comment': '', 'text': ' 20 permit ip any host 4.4.4.4', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL']}&lt;br/&gt;{'comment': '', 'text': ' 30 permit ip any host 5.5.5.5', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL']}&lt;br/&gt;{'comment': '', 'text': ' 40 permit ip any host 6.6.6.6', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL']}&lt;br/&gt;{'comment': "new section, didn't exist before", 'text': 'ip access-list extended SOMEACL', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': '', 'text': ' 10 permit ip any host 7.7.7.7', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': '', 'text': 'interface Ethernet0/1', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL', 'unsafe']}&lt;br/&gt;{'comment': '', 'text': ' no ip access-group TEST in', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': '', 'text': ' ip access-group TESTING in', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL', 'unsafe']}&lt;br/&gt;{'comment': '', 'text': 'interface Ethernet0/2', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['unsafe']}&lt;br/&gt;{'comment': '', 'text': ' ip access-group SOMEACL in', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['unsafe']}&lt;br/&gt;{'comment': '', 'text': ' ipv6 enable', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': '', 'text': ' ipv6 filter TEST out', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': "new section, didn't exist before", 'text': 'ipv6 access-list TEST', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': '', 'text': ' permit ipv6 any 2001::1/128', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': []}&lt;br/&gt;{'comment': 'removes 6 lines', 'text': 'no ip access-list extended TEST', 'post_exec_sleep': 0, 'post_exec_string': '', 'tags': ['NEW_ACL']}&lt;br/&gt;&lt;br/&gt;Config plan based on NEW_ACL tag&lt;br/&gt;&lt;br/&gt;ip access-list extended TESTING&lt;br/&gt; 10 permit ip any host 1.1.1.1&lt;br/&gt; 20 permit ip any host 4.4.4.4&lt;br/&gt; 30 permit ip any host 5.5.5.5&lt;br/&gt; 40 permit ip any host 6.6.6.6&lt;br/&gt;interface Ethernet0/1&lt;br/&gt; ip access-group TESTING in&lt;br/&gt;no ip access-list extended TEST&lt;/pre&gt;&lt;br/&gt;Here is the script that produced the output:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;#!/usr/bin/env python&lt;br/&gt;&lt;br/&gt;import yaml&lt;br/&gt;&lt;br/&gt;from hierarchical_configuration import HierarchicalConfiguration&lt;br/&gt;&lt;br/&gt;config_options = yaml.load(open('main.yml', 'r'))&lt;br/&gt;hier_tags = config_options['hier_tags']&lt;br/&gt;hier_options = config_options['hier_options']&lt;br/&gt;&lt;br/&gt;running_config_hier = HierarchicalConfiguration(&lt;br/&gt;                          options=hier_options)&lt;br/&gt;running_config_hier.from_file('running.config')&lt;br/&gt;&lt;br/&gt;compiled_config_hier = HierarchicalConfiguration(&lt;br/&gt;                           options=hier_options)&lt;br/&gt;compiled_config_hier.from_file('compiled.config')&lt;br/&gt;&lt;br/&gt;remediation_config_hier = compiled_config_hier.deep_diff_tree_with(&lt;br/&gt;                              running_config_hier)&lt;br/&gt;remediation_config_hier.set_order_weight()&lt;br/&gt;remediation_config_hier.add_sectional_exiting()&lt;br/&gt;remediation_config_hier.add_tags(hier_tags)&lt;br/&gt;&lt;br/&gt;print('\nPython dictionary of the comparison results\n')&lt;br/&gt;for command in remediation_config_hier.to_detailed_ouput():&lt;br/&gt;    print(command)&lt;br/&gt;&lt;br/&gt;print('\nConfig plan based on NEW_ACL tag\n')&lt;br/&gt;for command in remediation_config_hier.to_detailed_ouput():&lt;br/&gt;    if 'NEW_ACL' in command['tags']:&lt;br/&gt;        print(command['text'])&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;Let's break down the script. The very first thing we do is import yaml and hierarchical_configuration:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;import yaml&lt;br/&gt;&lt;br/&gt;from hierarchical_configuration import HierarchicalConfiguration&lt;/pre&gt;&lt;br/&gt;Next, we read the hierarchical_configuration config file and define the options and tags variables:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;config_options = yaml.load(open('main.yml', 'r'))&lt;br/&gt;hier_tags = config_options['hier_tags']&lt;br/&gt;hier_options = config_options['hier_options']&lt;/pre&gt;&lt;br/&gt;Now, we define an instance of hierarchical_configuration for the running config and load the running config from a file:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;running_config_hier = HierarchicalConfiguration(&lt;br/&gt;                          options=hier_options)&lt;br/&gt;running_config_hier.from_file('running.config')&lt;/pre&gt;&lt;br/&gt;Then, we do the same for the intended config:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;compiled_config_hier = HierarchicalConfiguration(&lt;br/&gt;                           options=hier_options)&lt;br/&gt;compiled_config_hier.from_file('compiled.config')&lt;/pre&gt;&lt;br/&gt;Once that is done, we can perform the comparison:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;remediation_config_hier = compiled_config_hier.deep_diff_tree_with(&lt;br/&gt;                              running_config_hier)&lt;/pre&gt;&lt;br/&gt;Now, we load the ordering, sectional exiting, and tags options:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;remediation_config_hier.set_order_weight()&lt;br/&gt;remediation_config_hier.add_sectional_exiting()&lt;br/&gt;remediation_config_hier.add_tags(hier_tags)&lt;/pre&gt;&lt;br/&gt;At this point, everything is loaded into memory. The next two portions of code are simply to have a visual of what is happening. The first portion is a for-loop, which displays the raw list of dictionaries:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;print('\nPython dictionary of the comparison results\n')&lt;br/&gt;for command in remediation_config_hier.to_detailed_ouput():&lt;br/&gt;    print(command)&lt;/pre&gt;&lt;br/&gt;Finally, the finished product. Generating a config plan, based on the NEW_ACL tag.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;print('\nConfig plan based on NEW_ACL tag\n')&lt;br/&gt;for command in remediation_config_hier.to_detailed_ouput():&lt;br/&gt;    if 'NEW_ACL' in command['tags']:&lt;br/&gt;        print(command['text'])&lt;/pre&gt;&lt;br/&gt;As you can see, hierarchical configuration is a very powerful life-cycle management tool for network gear. We've been using it successfully on IOS, IOS-XR, IOS-XE, NX-OS, and EOS devices. It has made our work less risky - from an outage perspective - more consistent, and allows us to automate and move faster than we have in previous years.&lt;br/&gt;&lt;br/&gt;The code is available on Github &lt;a href="https://github.com/jtdub/hierarchical_configuration" target="_blank"&gt;here&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/2970364981213724816/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2016/07/network-lifecycle-management-with_8.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2970364981213724816'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2970364981213724816'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2016/07/network-lifecycle-management-with_8.html' title='Network Lifecycle Management with Hierarchical Configuration'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-3620758291506970900</id><published>2016-06-22T14:10:00.001-05:00</published><updated>2019-04-11T11:10:07.772-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Python Scripting'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><category scheme='http://www.blogger.com/atom/ns#' term='Network Programmability'/><category scheme='http://www.blogger.com/atom/ns#' term='DevOps'/><category scheme='http://www.blogger.com/atom/ns#' term='Network DevOps'/><title type='text'>Multi Change and Netlib Updates</title><content type='html'>I've implemented some new changes to pyMultiChange and netlib. The biggest change affects both netlib and pyMultiChange. In netlib, I ripped out both the 'simple_creds' and 'simple_yaml' methods, as both stored user credentials in plain text on the computer that you used them on.&lt;br/&gt;&lt;br/&gt;Instead, utilizing the 'keyring' python module, I created a new class called 'KeyRing'. Using 'KeyRing' is simple. It implements three methods. These methods are 'get_creds', 'set_creds', and 'del_creds'.&lt;br/&gt;&lt;br/&gt;'get_creds' will attempt to retrieve the credentials for a username, if the credentials exist. If they do not exist, 'get_creds' will automatically call the 'set_creds' method.&lt;br/&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; from netlib.user_keyring import KeyRing&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; creds = KeyRing(username='testuser')&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; creds.get_creds()&lt;br/&gt;No credentials keyring exist. Creating new credentials.&lt;br/&gt;Enter your user password: &lt;br/&gt;Confirm your user password: &lt;br/&gt;Enter your enable password: &lt;br/&gt;Confirm your enable password: &lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; print creds.get_creds()&lt;br/&gt;{'username': 'testuser', 'enable': u'test', 'password': u'testpass'}&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; &lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;'set_creds' does exactly what it sounds like. It allows you to set your credentials. If no user credentials exist, it creates a new keyring. However, if user credentials do exist, it over-writes the credentials.&lt;br/&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; creds.set_creds()&lt;br/&gt;Enter your user password: &lt;br/&gt;Confirm your user password: &lt;br/&gt;Enter your enable password: &lt;br/&gt;Confirm your enable password: &lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; print creds.get_creds()&lt;br/&gt;{'username': 'testuser', 'enable': u'enable123', 'password': u'test123'}&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;Finally, 'del_creds' deletes a user's credentials from an existing keyring.&lt;br/&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; creds.del_creds()&lt;br/&gt;Enter your user password: &lt;br/&gt;Deleting keyring credentials for testuser&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;The '&lt;a href="https://pypi.python.org/pypi/keyring" target="_blank"&gt;keyring&lt;/a&gt;' python library utilizes your operating systems native methods for storing passwords. For Example, in Mac OS X, it will utilize the KeyChain functionality, In Linux, it will use dbus, and in Microsoft Windows, it utilizes the Credential Vault. There are also methods available for you to create your own backend. Much more secure than the ~/.tacacslogin or ~/.tacacs.yml files that used to be created from the old methods.&lt;br/&gt;&lt;br/&gt;As expected, this change was implemented into pyMultiChange. Doing so, required that new command line arguments needed to be implemented. There are actually several new command line arguments, since the last time that I wrote about pyMultiChange. I'll go over them here.&lt;br/&gt;&lt;pre&gt;usage: multi_change.py [-h] -u USERNAME [--delete-creds [DELETE_CREDS]]&lt;br/&gt;                       [--set-creds [SET_CREDS]] [-d DEVICES] [-c COMMANDS]&lt;br/&gt;                       [-s [SSH]] [-t [TELNET]] [-o [OUTPUT]] [-v [VERBOSE]]&lt;br/&gt;                       [--delay DELAY] [--buffer BUFFER]&lt;br/&gt;                       [--threaded [THREADED]] [-m MAXTHREADS]&lt;br/&gt;&lt;br/&gt;Managing network devices with python&lt;br/&gt;&lt;br/&gt;optional arguments:&lt;br/&gt;  -h, --help            show this help message and exit&lt;br/&gt;  -u USERNAME, --username USERNAME&lt;br/&gt;                        Specify your username.&lt;br/&gt;  --delete-creds [DELETE_CREDS]&lt;br/&gt;                        Delete credentials from keyring.&lt;br/&gt;  --set-creds [SET_CREDS]&lt;br/&gt;                        set keyring credentials.&lt;br/&gt;  -d DEVICES, --devices DEVICES&lt;br/&gt;                        Specifies a host file&lt;br/&gt;  -c COMMANDS, --commands COMMANDS&lt;br/&gt;                        Specifies a commands file&lt;br/&gt;  -s [SSH], --ssh [SSH]&lt;br/&gt;                        Default: Use the SSH protocol&lt;br/&gt;  -t [TELNET], --telnet [TELNET]&lt;br/&gt;                        Use the Telnet protocol&lt;br/&gt;  -o [OUTPUT], --output [OUTPUT]&lt;br/&gt;                        Verbose command output&lt;br/&gt;  -v [VERBOSE], --verbose [VERBOSE]&lt;br/&gt;                        Debug script output&lt;br/&gt;  --delay DELAY         Change the default delay exec between commands&lt;br/&gt;  --buffer BUFFER       Change the default SSH output buffer&lt;br/&gt;  --threaded [THREADED]&lt;br/&gt;                        Enable process threading&lt;br/&gt;  -m MAXTHREADS, --maxthreads MAXTHREADS&lt;br/&gt;                        Define the maximum number of threads&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;The first, is that multi_change.py now requires that you specify a username for all actions. This allows multi_change.py to interact with the keyring to set, extract, and delete credentials.&lt;br/&gt;&lt;pre&gt;usage: multi_change.py [-h] -u USERNAME [--delete-creds [DELETE_CREDS]]&lt;br/&gt;                       [--set-creds [SET_CREDS]] [-d DEVICES] [-c COMMANDS]&lt;br/&gt;                       [-s [SSH]] [-t [TELNET]] [-o [OUTPUT]] [-v [VERBOSE]]&lt;br/&gt;                       [--delay DELAY] [--buffer BUFFER]&lt;br/&gt;                       [--threaded [THREADED]] [-m MAXTHREADS]&lt;br/&gt;multi_change.py: error: argument -u/--username is required&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;When you specify a username, multi_change.py immediately attempts to extract the credentials for the user. If they don't exist, multi_change.py will prompt you to set the credentials.&lt;br/&gt;&lt;pre&gt;$ multi_change.py -u testuser&lt;br/&gt;No credentials keyring exist. Creating new credentials.&lt;br/&gt;Enter your user password: &lt;br/&gt;Confirm your user password: &lt;br/&gt;Enter your enable password: &lt;br/&gt;Confirm your enable password:&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;You can also utilize the '--set-creds' command line argument to either set credentials for a new user or over-write the credentials for an existing user.&lt;br/&gt;&lt;pre&gt;$ multi_change.py -u testuser --set-creds&lt;br/&gt;Enter your user password: &lt;br/&gt;Confirm your user password: &lt;br/&gt;Enter your enable password: &lt;br/&gt;Confirm your enable password: &lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;Like wise, you can use the '--delete-creds' to delete existing creds.&lt;br/&gt;&lt;pre&gt;$ multi_change.py -u testuser --delete-creds&lt;br/&gt;Enter your user password: &lt;br/&gt;Deleting keyring credentials for testuser&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;Beyond that, the option to utilize threading was created. With the threading ability, you also get the ability to specify the number of threads and the delay factor between command execution.&lt;br/&gt;&lt;br/&gt;For example, the below series of command line arguments enable threading, utilizing 50 threads, create a delay factor of 5 seconds, and will display the command output.&lt;br/&gt;&lt;pre&gt;$ multi_change.py -u testuser -d hosts.txt -c commands.txt --threaded -m 50 --delay 5 -o&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;This is very handy for running a common command set across a large number of devices very quickly.&lt;br/&gt;&lt;br/&gt;Beyond that, there are a few under the hood enhancements.&lt;br/&gt;&lt;ol&gt;&lt;br/&gt; 	&lt;li&gt;Protocol failover will no longer happen. Meaning that if a device fails to login via SSH, it will no longer failover to attempt to login via telnet and vise versa.&lt;/li&gt;&lt;br/&gt; 	&lt;li&gt;Login failures are logged in a file called 'failure.log'. This file is created in the local folder that you're running 'multi_change.py' in.&lt;/li&gt;&lt;br/&gt; 	&lt;li&gt;multi_change.py will now only read the commands file once, rather than reading it for every device that it attempts to make changes on.&lt;/li&gt;&lt;br/&gt; 	&lt;li&gt;pyMultiChange and netlib are now python installable packages. Meaning that you can run their 'setup.py' files and they will be installed as native python packages, allowing them to be called from anywhere on the OS.&lt;/li&gt;&lt;br/&gt;&lt;/ol&gt;&lt;br/&gt;Both packages are available on github.com:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt; 	&lt;li&gt;&lt;a href="https://github.com/jtdub/netlib" target="_blank"&gt;netlib&lt;/a&gt;&lt;/li&gt;&lt;br/&gt; 	&lt;li&gt;&lt;a href="https://github.com/jtdub/pyMultiChange" target="_blank"&gt;PyMultiChange&lt;/a&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/3620758291506970900/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2016/06/multi-change-and-netlib-updates_22.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3620758291506970900'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3620758291506970900'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2016/06/multi-change-and-netlib-updates_22.html' title='Multi Change and Netlib Updates'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4305012201179656270</id><published>2016-03-01T18:28:00.001-06:00</published><updated>2019-04-11T11:10:07.246-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><category scheme='http://www.blogger.com/atom/ns#' term='Network Programmability'/><category scheme='http://www.blogger.com/atom/ns#' term='DevOps'/><category scheme='http://www.blogger.com/atom/ns#' term='Network DevOps'/><category scheme='http://www.blogger.com/atom/ns#' term='Ansible'/><title type='text'>Kicking the tires on the new Ansible Network Modules, Part 2</title><content type='html'>In the &lt;a href="http://www.packetgeek.net/2016/02/kicking-the-tires-with-the-new-ansible-network-modules/"&gt;previous blog&lt;/a&gt;, I kicked the tires on the ios_command and ios_config Ansible modules. I still had my development environment set up from then, so I decided that I wanted to kick the tires on the ios_template module.&lt;br/&gt;&lt;br/&gt;The &lt;a href="http://docs.ansible.com/ansible/ios_template_module.html" target="_blank"&gt;online documentation&lt;/a&gt; currently has several errors, with the module documentation in the same state, which is undesirable. However, after some experimentation, I feel that I can adequately describe what the module does.&lt;br/&gt;&lt;br/&gt;You feed the module a candidate configuration for a device, the module will then reach out to the device, pull its current running configuration, compare the running configuration to the candidate configuration, determine what configuration needs to be added to the device based upon the comparison, then add the configuration to the device.&lt;br/&gt;&lt;br/&gt;I've noted two caveats with this module. First, it will not negate any commands, so if you update your configuration template to remove a swath of configuration, the module will not make those changes. Second, the module isn't intelligent enough to determine the risk associated with a command, thus it's unable to take preemptive actions, such as bleeding traffic from a link or device.&lt;br/&gt;&lt;br/&gt;With that in mind, let's get to the playbook.&lt;br/&gt;&lt;br/&gt;Here is what my playbook looks like:&lt;br/&gt;&lt;pre class="lang:yaml decode:true "&gt;---&lt;br/&gt;- hosts: ios&lt;br/&gt;  gather_facts: no&lt;br/&gt;  connection: local&lt;br/&gt;&lt;br/&gt;  tasks:&lt;br/&gt;  - name: OBTAIN LOGIN CREDENTIALS&lt;br/&gt;    include_vars: secrets.yaml&lt;br/&gt;&lt;br/&gt;  - name: DEFINE PROVIDER&lt;br/&gt;    set_fact:&lt;br/&gt;      provider:&lt;br/&gt;        host: "{{ inventory_hostname }}"&lt;br/&gt;        username: "{{ creds['username'] }}"&lt;br/&gt;        password: "{{ creds['password'] }}"&lt;br/&gt;        auth_pass: "{{ creds['auth_pass'] }}"&lt;br/&gt;&lt;br/&gt;  - name: TEST IOS_TEMPLATE &lt;br/&gt;    ios_template:&lt;br/&gt;      provider: "{{ provider }}"&lt;br/&gt;      authorize: true&lt;br/&gt;      backup: true&lt;br/&gt;      src: "{{ inventory_hostname }}.candidate_config.txt"&lt;br/&gt;    register: template&lt;br/&gt;&lt;br/&gt;  - debug: var=template&lt;/pre&gt;&lt;br/&gt;In this playbook, the src file - "&lt;em&gt;{{ inventory_hostname }}.candidate_config.txt&lt;/em&gt;", which are referenced, contain the running configuration of each of my devices in inventory, with the exception that I've added an access-list called TEST. Given what we know of the module, it will compare the running config to the candidate config, determine that the access-list called TEST is missing from the running config, and attempt to add the access-list to the device.&lt;br/&gt;&lt;br/&gt;You can see below that there is an access-list at the tail end of both of the configurations.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;(env)jtdub-macbook:ansible2.0 jtdub$ tail edge1.candidate_config.txt &lt;br/&gt;!&lt;br/&gt;ntp source Vlan2&lt;br/&gt;ntp access-group peer NAT kod&lt;br/&gt;ntp master 3&lt;br/&gt;ntp update-calendar&lt;br/&gt;ntp server 17.151.16.21&lt;br/&gt;ntp server 17.151.16.34 prefer&lt;br/&gt;ip access-list standard TEST&lt;br/&gt; permit host 1.1.1.1&lt;br/&gt;end&lt;br/&gt;(env)jtdub-macbook:ansible2.0 jtdub$ tail aggr1a.candidate_config.txt &lt;br/&gt; exec-timeout 15 0&lt;br/&gt; login authentication auth_local&lt;br/&gt; transport input ssh&lt;br/&gt;line vty 5 15&lt;br/&gt;!&lt;br/&gt;ntp source Vlan2&lt;br/&gt;ntp server 172.16.1.1 prefer&lt;br/&gt;ip access-list standard TEST&lt;br/&gt; permit host 1.1.1.1&lt;br/&gt;end&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;Now, if we run the playbook, you can see the results.&lt;br/&gt;&lt;pre class="lang:yaml decode:true"&gt;(env)jtdub-macbook:ansible2.0 jtdub$ ansible-playbook -i hosts ios_template.yaml &lt;br/&gt;&lt;br/&gt;PLAY [ios] *********************************************************************&lt;br/&gt;&lt;br/&gt;TASK [OBTAIN LOGIN CREDENTIALS] ************************************************&lt;br/&gt;ok: [edge1]&lt;br/&gt;ok: [aggr1a]&lt;br/&gt;&lt;br/&gt;TASK [DEFINE PROVIDER] *********************************************************&lt;br/&gt;ok: [aggr1a]&lt;br/&gt;ok: [edge1]&lt;br/&gt;&lt;br/&gt;TASK [TEST IOS_TEMPLATE] *******************************************************&lt;br/&gt;changed: [aggr1a]&lt;br/&gt;changed: [edge1]&lt;br/&gt;&lt;br/&gt;TASK [debug] *******************************************************************&lt;br/&gt;ok: [edge1] =&amp;gt; {&lt;br/&gt;    "template": {&lt;br/&gt;        "changed": true, &lt;br/&gt;        "responses": [&lt;br/&gt;            "", &lt;br/&gt;            "", &lt;br/&gt;            ""&lt;br/&gt;        ], &lt;br/&gt;        "updates": [&lt;br/&gt;            "clock summer-time CST recurring", &lt;br/&gt;            "ip access-list standard TEST", &lt;br/&gt;            "permit host 1.1.1.1"&lt;br/&gt;        ]&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;ok: [aggr1a] =&amp;gt; {&lt;br/&gt;    "template": {&lt;br/&gt;        "changed": true, &lt;br/&gt;        "responses": [&lt;br/&gt;            "", &lt;br/&gt;            ""&lt;br/&gt;        ], &lt;br/&gt;        "updates": [&lt;br/&gt;            "ip access-list standard TEST", &lt;br/&gt;            "permit host 1.1.1.1"&lt;br/&gt;        ]&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;PLAY RECAP *********************************************************************&lt;br/&gt;aggr1a                     : ok=4    changed=1    unreachable=0    failed=0   &lt;br/&gt;edge1                      : ok=4    changed=1    unreachable=0    failed=0   &lt;br/&gt;&lt;br/&gt;(env)jtdub-macbook:ansible2.0 jtdub$ &lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;That is definitely cool! Though, it's also definitely lacking from a configuration intent perspective. I'm sure that it will improve with time.&lt;br/&gt;&lt;br/&gt;Some colleagues and I have been attempting to solve this configuration intent problem. It's a difficult problem to solve for, but we have a working code base. Soon, I'll try to write about configuration intent and how we are approaching the problem.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4305012201179656270/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2016/03/kicking-tires-on-new-ansible-network_1.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4305012201179656270'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4305012201179656270'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2016/03/kicking-tires-on-new-ansible-network_1.html' title='Kicking the tires on the new Ansible Network Modules, Part 2'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-3242076565983677622</id><published>2016-02-29T14:28:00.001-06:00</published><updated>2019-04-11T11:10:06.914-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><category scheme='http://www.blogger.com/atom/ns#' term='Network Programmability'/><category scheme='http://www.blogger.com/atom/ns#' term='DevOps'/><category scheme='http://www.blogger.com/atom/ns#' term='Network DevOps'/><category scheme='http://www.blogger.com/atom/ns#' term='Ansible'/><title type='text'>Kicking the tires with the new Ansible Network Modules</title><content type='html'>Ansible &lt;a href="http://www.redhat.com/en/about/press-releases/red-hat-brings-devops-network-new-ansible-capabilities" target="_blank"&gt;recently announced&lt;/a&gt; support for multi-vendor network modules, natively within Ansible. There are many examples on the Internet where individuals have taken the initiative to create their own modules to work with their favorite vendor. Some of these examples are Arista &lt;a href="https://github.com/arista-eosplus/ansible-eos" target="_blank"&gt;supplied modules&lt;/a&gt;, &lt;a href="https://github.com/jedelman8/nxos-ansible" target="_blank"&gt;NX-OS modules&lt;/a&gt; - created by Jason Edelman, &lt;a href="https://github.com/networktocode/ntc-ansible" target="_blank"&gt;NTC&lt;/a&gt;, and &lt;a href="https://github.com/napalm-automation/napalm-ansible" target="_blank"&gt;NAPALM&lt;/a&gt;. While these are all good, it's nice to see that Ansible is taking some initiative to create some native functionality.&lt;br/&gt;&lt;br/&gt;These modules aren't yet in the stable release of Ansible, but they do make an appearance in the development version, so I decided to kick the tires a bit.&lt;br/&gt;&lt;br/&gt;First thing I did was set up an development environment using python's virtualenv.&lt;br/&gt;&lt;pre class="lang:sh decode:true "&gt;mkdir -p ansible2.0/env&lt;br/&gt;cd ansible2.0&lt;br/&gt;virtualenv env&lt;br/&gt;source env/bin/activate&lt;br/&gt;git clone git@github.com:ansible/ansible.git&lt;br/&gt;cd ansible&lt;br/&gt;git submodule init&lt;br/&gt;git submodule update&lt;br/&gt;python setup.py install&lt;/pre&gt;&lt;br/&gt;Next, I verified the version of Ansible that I'm running in my development environment, as well as verifying that I have the new modules available to me.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;(env)jtdub-macbook:ansible jtdub$ ansible --version&lt;br/&gt;ansible 2.1.0&lt;br/&gt;  config file = &lt;br/&gt;  configured module search path = Default w/o overrides&lt;br/&gt;(env)jtdub-macbook:ansible jtdub$ ansible-doc --list | egrep ^'ios|eos|junos|nxos'&lt;br/&gt;eos_command                     Run arbitrary command on EOS device                                                                    &lt;br/&gt;eos_config                      Manage Arista EOS configuration sections                                                               &lt;br/&gt;eos_eapi                        Manage and configure EAPI. Requires EOS v4.12 or greater.                                              &lt;br/&gt;eos_template                    Manage Arista EOS device configurations                                                                &lt;br/&gt;ios_command                     Run arbitrary commands on ios devices.                                                                 &lt;br/&gt;ios_config                      Manage Cisco IOS configuration sections                                                                &lt;br/&gt;ios_template                    Manage Cisco IOS device configurations over SSH                                                        &lt;br/&gt;iosxr_command                   Run arbitrary commands on ios devices.                                                                 &lt;br/&gt;iosxr_config                    Manage Cisco IOS XR configuration sections                                                             &lt;br/&gt;iosxr_template                  Manage Cisco IOS device configurations over SSH                                                        &lt;br/&gt;junos_command                   Execute arbitrary commands on Juniper JUNOS devices                                                    &lt;br/&gt;junos_config                    Manage Juniper JUNOS configuration sections                                                            &lt;br/&gt;junos_template                  Manage Juniper JUNOS device configurations                                                             &lt;br/&gt;nxos_command                    Run arbitrary command on Cisco NXOS devices                                                            &lt;br/&gt;nxos_config                     Manage Cisco NXOS configuration sections                                                               &lt;br/&gt;nxos_nxapi                      Manage NXAPI configuration on an NXOS device.                                                          &lt;br/&gt;nxos_template                   Manage Cisco NXOS device configurations                                                                &lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;At the time of this writing. It looks like the &lt;a href="http://docs.ansible.com/ansible/list_of_network_modules.html" target="_blank"&gt;online documentation&lt;/a&gt; has been updated, which would infer that the new modules may soon be in the stable release.&lt;br/&gt;&lt;br/&gt;So, let's create a sample playbook!&lt;br/&gt;&lt;br/&gt;The first thing I did was create an inventory file. I kept it simple and created a file called 'hosts'&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;[ios]&lt;br/&gt;edge1&lt;br/&gt;aggr1a&lt;/pre&gt;&lt;br/&gt;Then I created a secrets.yaml file to store my credentials without having to put them in a playbook. While I won't share my credentials here, I will share the format that I used. :)&lt;br/&gt;&lt;pre class="lang:yaml decode:true "&gt;---&lt;br/&gt;creds:&lt;br/&gt;  username: cisco&lt;br/&gt;  password: cisco&lt;br/&gt;  auth_pass: cisco&lt;/pre&gt;&lt;br/&gt;Lastly, I created a sample playbook. I wanted a task that  utilized each module type - (ios|eos|junos|nxos)_(command|template|config). Currently, I have easy access to a couple of IOS devices, so I stuck with using those modules, but I played with each ios_(command|config) module. I plan on spending time and playing with the ios_template module more at a later time.&lt;br/&gt;&lt;br/&gt;Here is my sample playbook:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;---&lt;br/&gt;- hosts: ios&lt;br/&gt;  gather_facts: no&lt;br/&gt;  connection: local&lt;br/&gt;&lt;br/&gt;  tasks:&lt;br/&gt;  - name: OBTAIN LOGIN CREDENTIALS&lt;br/&gt;    include_vars: secrets.yaml&lt;br/&gt;&lt;br/&gt;  - name: DEFINE PROVIDER&lt;br/&gt;    set_fact:&lt;br/&gt;      provider:&lt;br/&gt;        host: "{{ inventory_hostname }}"&lt;br/&gt;        username: "{{ creds['username'] }}"&lt;br/&gt;        password: "{{ creds['password'] }}"&lt;br/&gt;        auth_pass: "{{ creds['auth_pass'] }}"&lt;br/&gt;&lt;br/&gt;  - name: RUN 'SHOW VERSION'&lt;br/&gt;    ios_command:&lt;br/&gt;      provider: "{{ provider }}"&lt;br/&gt;      commands:&lt;br/&gt;        - show version&lt;br/&gt;    register: version&lt;br/&gt;&lt;br/&gt;  - debug: var=version.stdout_lines&lt;br/&gt;&lt;br/&gt;  - name: RUN 'SHOW ACCESS-LIST TEST'&lt;br/&gt;    ios_command:&lt;br/&gt;      provider: "{{ provider }}"&lt;br/&gt;      commands:&lt;br/&gt;        - show access-list TEST &lt;br/&gt;    register: before_acl&lt;br/&gt;&lt;br/&gt;  - debug: var=before_acl.stdout_lines&lt;br/&gt;&lt;br/&gt;  - name: CREATE 'TEST' ACCESS-LIST&lt;br/&gt;    ios_config:&lt;br/&gt;      provider: "{{ provider }}"&lt;br/&gt;      authorize: yes&lt;br/&gt;      lines:&lt;br/&gt;        - 10 permit ip host 1.1.1.1 any&lt;br/&gt;        - 20 deny ip any any&lt;br/&gt;      parents: ['ip access-list extended TEST']&lt;br/&gt;      before: ['no ip access-list extended TEST']&lt;br/&gt;      match: exact&lt;br/&gt;&lt;br/&gt;  - name: RUN 'SHOW ACCESS-LIST TEST'&lt;br/&gt;    ios_command:&lt;br/&gt;      provider: "{{ provider }}"&lt;br/&gt;      commands:&lt;br/&gt;        - show access-list TEST &lt;br/&gt;    register: after_acl&lt;br/&gt;&lt;br/&gt;  - debug: var=after_acl.stdout_lines&lt;/pre&gt;&lt;br/&gt;In this playbook, I first import my secrets.yaml variables, which includes my credentials to log into the devices. I then define the 'provider' variable. The provider variable allows you to create a host, username, password, and auth_pass key value in a single place and call it as a single variable, rather than defining each individually for each task. It's a nice little time saver! Finally, I started doing work on the devices themselves.&lt;br/&gt;&lt;br/&gt;Here is my playbook run:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;(env)jtdub-macbook:ansible2.0 jtdub$ ansible-playbook -i hosts ios.yaml &lt;br/&gt;&lt;br/&gt;PLAY [ios] *********************************************************************&lt;br/&gt;&lt;br/&gt;TASK [OBTAIN LOGIN CREDENTIALS] ************************************************&lt;br/&gt;ok: [edge1]&lt;br/&gt;ok: [aggr1a]&lt;br/&gt;&lt;br/&gt;TASK [DEFINE PROVIDER] *********************************************************&lt;br/&gt;ok: [edge1]&lt;br/&gt;ok: [aggr1a]&lt;br/&gt;&lt;br/&gt;TASK [RUN 'SHOW VERSION'] ******************************************************&lt;br/&gt;ok: [edge1]&lt;br/&gt;ok: [aggr1a]&lt;br/&gt;&lt;br/&gt;TASK [debug] *******************************************************************&lt;br/&gt;ok: [edge1] =&amp;gt; {&lt;br/&gt;    "version.stdout_lines": [&lt;br/&gt;        [&lt;br/&gt;            "Cisco IOS Software, C181X Software (C181X-ADVENTERPRISEK9-M), Version 15.1(4)M8, RELEASE SOFTWARE (fc2)", &lt;br/&gt;            "Technical Support: http://www.cisco.com/techsupport", &lt;br/&gt;            "Copyright (c) 1986-2014 by Cisco Systems, Inc.", &lt;br/&gt;            "Compiled Fri 07-Mar-14 07:42 by prod_rel_team", &lt;br/&gt;            "", &lt;br/&gt;            "ROM: System Bootstrap, Version 12.3(8r)YH13, RELEASE SOFTWARE (fc1)", &lt;br/&gt;            "", &lt;br/&gt;            "edge1.sat uptime is 3 days, 22 hours, 3 minutes", &lt;br/&gt;            "System returned to ROM by reload at 22:18:54 CST Thu Feb 25 2016", &lt;br/&gt;            "System restarted at 22:19:35 CST Thu Feb 25 2016", &lt;br/&gt;            "System image file is \"flash:c181x-adventerprisek9-mz.151-4.M8.bin\"", &lt;br/&gt;            "Last reload type: Normal Reload", &lt;br/&gt;            "", &lt;br/&gt;            "", &lt;br/&gt;            "This product contains cryptographic features and is subject to United", &lt;br/&gt;            "States and local country laws governing import, export, transfer and", &lt;br/&gt;            "use. Delivery of Cisco cryptographic products does not imply", &lt;br/&gt;            "third-party authority to import, export, distribute or use encryption.", &lt;br/&gt;            "Importers, exporters, distributors and users are responsible for", &lt;br/&gt;            "compliance with U.S. and local country laws. By using this product you", &lt;br/&gt;            "agree to comply with applicable laws and regulations. If you are unable", &lt;br/&gt;            "to comply with U.S. and local laws, return this product immediately.", &lt;br/&gt;            "", &lt;br/&gt;            "A summary of U.S. laws governing Cisco cryptographic products may be found at:", &lt;br/&gt;            "http://www.cisco.com/wwl/export/crypto/tool/stqrg.html", &lt;br/&gt;            "", &lt;br/&gt;            "If you require further assistance please contact us by sending email to", &lt;br/&gt;            "export@cisco.com.", &lt;br/&gt;            "", &lt;br/&gt;            "Cisco 1811 (MPC8500) processor (revision 0x400) with 236544K/25600K bytes of memory.", &lt;br/&gt;            "Processor board ID FTX15110094, with hardware revision 0000", &lt;br/&gt;            "", &lt;br/&gt;            "10 FastEthernet interfaces", &lt;br/&gt;            "1 Serial interface", &lt;br/&gt;            "1 terminal line", &lt;br/&gt;            "1 Virtual Private Network (VPN) Module", &lt;br/&gt;            "62720K bytes of ATA CompactFlash (Read/Write)", &lt;br/&gt;            "", &lt;br/&gt;            "", &lt;br/&gt;            "License Info:", &lt;br/&gt;            "", &lt;br/&gt;            "License UDI:", &lt;br/&gt;            "", &lt;br/&gt;            "-------------------------------------------------", &lt;br/&gt;            "Device#\t  PID\t\t\tSN", &lt;br/&gt;            "-------------------------------------------------", &lt;br/&gt;            "*0  \t  CISCO1811/K9          FTX15110094     ", &lt;br/&gt;            "", &lt;br/&gt;            "", &lt;br/&gt;            "", &lt;br/&gt;            "Configuration register is 0x2102", &lt;br/&gt;            ""&lt;br/&gt;        ]&lt;br/&gt;    ]&lt;br/&gt;}&lt;br/&gt;ok: [aggr1a] =&amp;gt; {&lt;br/&gt;    "version.stdout_lines": [&lt;br/&gt;        [&lt;br/&gt;            "Cisco IOS Software, C3750 Software (C3750-IPSERVICESK9-M), Version 12.2(55)SE9, RELEASE SOFTWARE (fc1)", &lt;br/&gt;            "Technical Support: http://www.cisco.com/techsupport", &lt;br/&gt;            "Copyright (c) 1986-2014 by Cisco Systems, Inc.", &lt;br/&gt;            "Compiled Mon 03-Mar-14 22:45 by prod_rel_team", &lt;br/&gt;            "Image text-base: 0x01000000, data-base: 0x02F00000", &lt;br/&gt;            "", &lt;br/&gt;            "ROM: Bootstrap program is C3750 boot loader", &lt;br/&gt;            "BOOTLDR: C3750 Boot Loader (C3750-HBOOT-M) Version 12.2(44)SE5, RELEASE SOFTWARE (fc1)", &lt;br/&gt;            "", &lt;br/&gt;            "aggr1a.sat uptime is 1 week, 3 days, 21 hours, 24 minutes", &lt;br/&gt;            "System returned to ROM by power-on", &lt;br/&gt;            "System restarted at 22:58:01 CST Thu Feb 18 2016", &lt;br/&gt;            "System image file is \"flash:c3750-ipservicesk9-mz.122-55.SE9.bin\"", &lt;br/&gt;            "", &lt;br/&gt;            "", &lt;br/&gt;            "This product contains cryptographic features and is subject to United", &lt;br/&gt;            "States and local country laws governing import, export, transfer and", &lt;br/&gt;            "use. Delivery of Cisco cryptographic products does not imply", &lt;br/&gt;            "third-party authority to import, export, distribute or use encryption.", &lt;br/&gt;            "Importers, exporters, distributors and users are responsible for", &lt;br/&gt;            "compliance with U.S. and local country laws. By using this product you", &lt;br/&gt;            "agree to comply with applicable laws and regulations. If you are unable", &lt;br/&gt;            "to comply with U.S. and local laws, return this product immediately.", &lt;br/&gt;            "", &lt;br/&gt;            "A summary of U.S. laws governing Cisco cryptographic products may be found at:", &lt;br/&gt;            "http://www.cisco.com/wwl/export/crypto/tool/stqrg.html", &lt;br/&gt;            "", &lt;br/&gt;            "If you require further assistance please contact us by sending email to", &lt;br/&gt;            "export@cisco.com.", &lt;br/&gt;            "", &lt;br/&gt;            "cisco WS-C3750-24TS (PowerPC405) processor (revision L0) with 131072K bytes of memory.", &lt;br/&gt;            "Processor board ID CAT1042ZGKL", &lt;br/&gt;            "Last reset from power-on", &lt;br/&gt;            "2 Virtual Ethernet interfaces", &lt;br/&gt;            "24 FastEthernet interfaces", &lt;br/&gt;            "2 Gigabit Ethernet interfaces", &lt;br/&gt;            "The password-recovery mechanism is enabled.", &lt;br/&gt;            "", &lt;br/&gt;            "512K bytes of flash-simulated non-volatile configuration memory.", &lt;br/&gt;            "Base ethernet MAC Address       : 00:19:E7:5F:8F:80", &lt;br/&gt;            "Motherboard assembly number     : 73-9677-10", &lt;br/&gt;            "Power supply part number        : 341-0034-01", &lt;br/&gt;            "Motherboard serial number       : CAT10415NLR", &lt;br/&gt;            "Power supply serial number      : DTH1037117A", &lt;br/&gt;            "Model revision number           : L0", &lt;br/&gt;            "Motherboard revision number     : A0", &lt;br/&gt;            "Model number                    : WS-C3750-24TS-S", &lt;br/&gt;            "System serial number            : CAT1042ZGKL", &lt;br/&gt;            "Top Assembly Part Number        : 800-25857-02", &lt;br/&gt;            "Top Assembly Revision Number    : D0", &lt;br/&gt;            "Version ID                      : V05", &lt;br/&gt;            "CLEI Code Number                : CNMV100CRE", &lt;br/&gt;            "Hardware Board Revision Number  : 0x01", &lt;br/&gt;            "", &lt;br/&gt;            "", &lt;br/&gt;            "Switch Ports Model              SW Version            SW Image                 ", &lt;br/&gt;            "------ ----- -----              ----------            ----------               ", &lt;br/&gt;            "*    1 26    WS-C3750-24TS      12.2(55)SE9           C3750-IPSERVICESK9-M     ", &lt;br/&gt;            "", &lt;br/&gt;            "", &lt;br/&gt;            "Configuration register is 0xF", &lt;br/&gt;            ""&lt;br/&gt;        ]&lt;br/&gt;    ]&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;TASK [RUN 'SHOW ACCESS-LIST TEST'] *********************************************&lt;br/&gt;ok: [edge1]&lt;br/&gt;ok: [aggr1a]&lt;br/&gt;&lt;br/&gt;TASK [debug] *******************************************************************&lt;br/&gt;ok: [edge1] =&amp;gt; {&lt;br/&gt;    "before_acl.stdout_lines": [&lt;br/&gt;        [&lt;br/&gt;            ""&lt;br/&gt;        ]&lt;br/&gt;    ]&lt;br/&gt;}&lt;br/&gt;ok: [aggr1a] =&amp;gt; {&lt;br/&gt;    "before_acl.stdout_lines": [&lt;br/&gt;        [&lt;br/&gt;            ""&lt;br/&gt;        ]&lt;br/&gt;    ]&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;TASK [CREATE 'TEST' ACCESS-LIST] ***********************************************&lt;br/&gt;changed: [edge1]&lt;br/&gt;changed: [aggr1a]&lt;br/&gt;&lt;br/&gt;TASK [RUN 'SHOW ACCESS-LIST TEST'] *********************************************&lt;br/&gt;ok: [edge1]&lt;br/&gt;ok: [aggr1a]&lt;br/&gt;&lt;br/&gt;TASK [debug] *******************************************************************&lt;br/&gt;ok: [edge1] =&amp;gt; {&lt;br/&gt;    "after_acl.stdout_lines": [&lt;br/&gt;        [&lt;br/&gt;            "Extended IP access list TEST", &lt;br/&gt;            "    10 permit ip host 1.1.1.1 any", &lt;br/&gt;            "    20 deny ip any any"&lt;br/&gt;        ]&lt;br/&gt;    ]&lt;br/&gt;}&lt;br/&gt;ok: [aggr1a] =&amp;gt; {&lt;br/&gt;    "after_acl.stdout_lines": [&lt;br/&gt;        [&lt;br/&gt;            "Extended IP access list TEST", &lt;br/&gt;            "    10 permit ip host 1.1.1.1 any", &lt;br/&gt;            "    20 deny ip any any"&lt;br/&gt;        ]&lt;br/&gt;    ]&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;PLAY RECAP *********************************************************************&lt;br/&gt;aggr1a                     : ok=9    changed=1    unreachable=0    failed=0   &lt;br/&gt;edge1                      : ok=9    changed=1    unreachable=0    failed=0&lt;/pre&gt;&lt;br/&gt;As you can see, I was able to successfully execute a 'show version', verify that I had no access-list called TEST, create it, then verify that it was indeed created.&lt;br/&gt;&lt;br/&gt;I'm thrilled that Ansible is finally getting around to recognizing the benefit of supporting the networking community. It's a basic start and it will only get better from here! Soon, I'll post a blog walking through the ios_template module. The documentation on that one looks interesting!</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/3242076565983677622/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2016/02/kicking-tires-with-new-ansible-network_29.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3242076565983677622'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3242076565983677622'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2016/02/kicking-tires-with-new-ansible-network_29.html' title='Kicking the tires with the new Ansible Network Modules'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-924198607569623516</id><published>2016-02-15T18:12:00.001-06:00</published><updated>2019-04-11T11:10:06.653-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Serial'/><category scheme='http://www.blogger.com/atom/ns#' term='Console'/><category scheme='http://www.blogger.com/atom/ns#' term='Mac OS X'/><title type='text'>Using a serial console on Mac OS X</title><content type='html'>As a network engineer, a fundamental task is putting a base configuration onto a device via a serial console. In Windows, there are several applications from Hyper Terminal to Putty. In Linux, there is minicom. I've never been a Microsoft fan, but have been a Linux user for many years. Over the last few years have been using Mac OS X full time for work and personal. Given this, I need the ability to access a network device via a serial connection. A quick Google was &lt;a href="https://supportforums.cisco.com/discussion/12071321/how-use-mac-connecting-through-console-port" target="_blank"&gt;fruitful&lt;/a&gt;.&lt;br/&gt;&lt;ol&gt;&lt;br/&gt;	&lt;li&gt;Plug your USB to Serial device into the USB port.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Open a command termal and execute: &lt;strong&gt;ls /dev/*usb*&lt;/strong&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ol&gt;&lt;br/&gt;If your Mac recognizes the USB device, it will display a USB device in &lt;strong&gt;/dev&lt;/strong&gt;. If not, you may need to download and install a USB driver for your device. I used &lt;a href="http://plugable.com/2011/07/12/installing-a-usb-serial-adapter-on-mac-os-x" target="_blank"&gt;this article&lt;/a&gt; to assist me in determining which USB driver to download and install.&lt;br/&gt;&lt;ol&gt;&lt;br/&gt;	&lt;li&gt;My USB device showed up as &lt;strong&gt;/dev/tty.usbserial&lt;/strong&gt;, thus I'll use that for the remainder of this example.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Connect the other end of your USB to Serial cable into your network device's serial port.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Execute: &lt;strong&gt;screen /dev/tty.usbserial 9600&lt;/strong&gt;&lt;br/&gt;&lt;ol&gt;&lt;br/&gt;	&lt;li&gt;&lt;strong&gt;&lt;a href="https://kb.iu.edu/d/acuy" target="_blank"&gt;Screen&lt;/a&gt;&lt;/strong&gt; is a UNIX utility that allows you to access your local computers VT100 terminal.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;&lt;strong&gt;/dev/tty.usbserial&lt;/strong&gt; is the driver to access your USB serial device.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;&lt;strong&gt;9600&lt;/strong&gt; is the baud rate.&lt;/li&gt;&lt;br/&gt;&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Press enter and you should be prompted with your network device prompt.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;To disconnect use the following key sequence: &lt;strong&gt;CTRL+A&lt;/strong&gt; followed by &lt;strong&gt;CTRL+\&lt;/strong&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ol&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/924198607569623516/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2016/02/using-serial-console-on-mac-os-x_15.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/924198607569623516'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/924198607569623516'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2016/02/using-serial-console-on-mac-os-x_15.html' title='Using a serial console on Mac OS X'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-9111906033065775220</id><published>2016-02-15T11:38:00.001-06:00</published><updated>2019-04-11T11:10:06.394-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Data Center'/><category scheme='http://www.blogger.com/atom/ns#' term='Network Programmability'/><category scheme='http://www.blogger.com/atom/ns#' term='DevOps'/><category scheme='http://www.blogger.com/atom/ns#' term='NANOG'/><category scheme='http://www.blogger.com/atom/ns#' term='BGP'/><category scheme='http://www.blogger.com/atom/ns#' term='Network DevOps'/><title type='text'>NANOG 66</title><content type='html'>&lt;a href="http://nanog.org/meetings/NANOG66/home" target="_blank"&gt;NANOG 66&lt;/a&gt; took place a couple weeks ago. Video's and presentations are trickling on the Internet. Here are the list of video's and presentations that I found particularly interesting:&lt;br/&gt;&lt;ol&gt;&lt;br/&gt;	&lt;li&gt;Is IPv6 Really Faster? (&lt;a href="https://youtu.be/Lt-Xx2CmuQE" target="_blank"&gt;Video&lt;/a&gt;)|(&lt;a href="https://www.nanog.org/sites/default/files/Huston_Is_Ipv6.pdf" target="_blank"&gt;Presentation PDF&lt;/a&gt;)&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Move Fast, Unbreak Things! (&lt;a href="https://youtu.be/N0lZrJVdI9A" target="_blank"&gt;Video&lt;/a&gt;)|(&lt;a href="https://www.nanog.org/sites/default/files/Lapukhov_Move_Fast_Unbreak.pdf" target="_blank"&gt;Presentation PDF&lt;/a&gt;)&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;NetOps Coding 101 - Python Intro and Regular Expression Deep Dive (&lt;a href="https://youtu.be/dv328WQlUQg" target="_blank"&gt;Video&lt;/a&gt;)|(&lt;a href="https://www.nanog.org/sites/default/files/Swafford_Netops_Coding_101.pdf" target="_blank"&gt;Presentation PDF&lt;/a&gt;)|(&lt;a href="http://netengcode.com" target="_blank"&gt;Presentation Files&lt;/a&gt;)&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;NetOps Coding 101 - Python Intro and Regular Expression Deep Dive (Part 2 of 2) (&lt;a href="https://youtu.be/sFe4c6KBn9s" target="_blank"&gt;Video&lt;/a&gt;)|(&lt;a href="http://netengcode.com" target="_blank"&gt;Presentation Files&lt;/a&gt;)&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;BGP EVPN in Datacenter and Layer-3 Data Center Interconnect (&lt;a href="https://youtu.be/nPKLe0M5yJU" target="_blank"&gt;Video&lt;/a&gt;)|(&lt;a href="https://www.nanog.org/sites/default/files/Shetty_Bgp_Evpn.pdf" target="_blank"&gt;Presentation PDF&lt;/a&gt;)&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Segment Routing in the Datacenter (&lt;a href="https://youtu.be/l08U9sNoWXA" target="_blank"&gt;Video&lt;/a&gt;)|(&lt;a href="https://www.nanog.org/sites/default/files/Bhattacharya_Segment.pdf" target="_blank"&gt;Presentation PDF&lt;/a&gt;)&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;NetOps Coding 201 - Building Facebook's FBAR for Network Devices (&lt;a href="https://youtu.be/3P3x09ZrT0E" target="_blank"&gt;Video&lt;/a&gt;)|(&lt;a href="https://www.nanog.org/sites/default/files/Swafford_Netops_Coding_201.pdf" target="_blank"&gt;Presentation PDF&lt;/a&gt;)|(&lt;a href="http://netengcode.com" target="_blank"&gt;Presentation Files&lt;/a&gt;)&lt;/li&gt;&lt;br/&gt;&lt;/ol&gt;&lt;br/&gt;You can see the full list of talks and presentations &lt;a href="http://nanog.org/meetings/nanog66/agenda" target="_blank"&gt;here&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/9111906033065775220/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2016/02/nanog-66_15.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/9111906033065775220'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/9111906033065775220'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2016/02/nanog-66_15.html' title='NANOG 66'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4589862192386248542</id><published>2016-01-29T13:44:00.001-06:00</published><updated>2019-04-11T11:10:06.138-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='DevOps'/><category scheme='http://www.blogger.com/atom/ns#' term='Ansible'/><title type='text'>Using Ansible to update your Home Dynamic DNS via Rackspace Cloud DNS</title><content type='html'>Like most home Internet users, my home Internet has a dynamic IP Address. For many years, I used DynDNS to keep a hostname associated to my home Internet, so that I could access my home resources remotely. After DynDNS started charging for the service, I just created a sub-domain off one of the domains that I own. The problem has always been that I would only find out about my IP Address changing after a failed login attempt. Since then, I have created a couple scripts. However, as I go down the Ansible journey, I try to apply the same problems to Ansible to see how it can solve problems. So, I decided to write a playbook to have Ansible automatically update my DNS record as needed.&lt;br/&gt;&lt;br/&gt;Here is the playbook:&lt;br/&gt;&lt;pre class="lang:yaml decode:true "&gt;---&lt;br/&gt;- hosts: localhost&lt;br/&gt;  connection: local&lt;br/&gt;  gather_facts: false&lt;br/&gt;&lt;br/&gt;  tasks:&lt;br/&gt;  - set_fact:&lt;br/&gt;      domainname: example.com&lt;br/&gt;      hostname: dynamichost.example.com&lt;br/&gt;      rax_username: rackspace_username&lt;br/&gt;      rax_apikey: rackspace_apikey&lt;br/&gt;      update_dns: False&lt;br/&gt;&lt;br/&gt;  - name: Identify current public IPv4 address of network&lt;br/&gt;    command: curl -4 icanhazip.com&lt;br/&gt;    register: ipv4_address&lt;br/&gt;&lt;br/&gt;  - name: Identify current DNS A record of Dynamic DNS host&lt;br/&gt;    command: dig +short {{ hostname }}&lt;br/&gt;    register: dyndns_host&lt;br/&gt;&lt;br/&gt;  - name: Determine if DNS A record needs to be updated &lt;br/&gt;    set_fact:&lt;br/&gt;      update_dns: True &lt;br/&gt;    when: ipv4_address.stdout != dyndns_host.stdout&lt;br/&gt;&lt;br/&gt;  - name: Update DNS A record&lt;br/&gt;    local_action:&lt;br/&gt;      module: rax_dns_record&lt;br/&gt;      username: "{{ rax_username }}"  &lt;br/&gt;      api_key: "{{ rax_apikey }}" &lt;br/&gt;      domain: "{{ domainname }}"&lt;br/&gt;      name: "{{ hostname }}"&lt;br/&gt;      data: "{{ ipv4_address.stdout }}"&lt;br/&gt;      type: A&lt;br/&gt;    register: a_record&lt;br/&gt;    when: update_dns == True&lt;/pre&gt;&lt;br/&gt;As you can see it's pretty straight forward. I define several facts up front, mostly dealing with the Rackspace Cloud DNS Authentication, domain, and hostname settings. Then I run plays to determine what my current IP Address is, what the DNS A record is, comparing the two, then updating the DNS as needed.&lt;br/&gt;&lt;br/&gt;It should be simple enough to run the playbook as a cron-job. So far, it works great!&lt;br/&gt;&lt;br/&gt;The playbook is available via my &lt;a href="https://github.com/jtdub/ansible-rax-dyndns" target="_blank"&gt;github&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4589862192386248542/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2016/01/using-ansible-to-update-your-home_29.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4589862192386248542'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4589862192386248542'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2016/01/using-ansible-to-update-your-home_29.html' title='Using Ansible to update your Home Dynamic DNS via Rackspace Cloud DNS'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5294505561141099555</id><published>2015-08-29T11:16:00.001-05:00</published><updated>2019-04-11T11:10:05.879-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Python Scripting'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><category scheme='http://www.blogger.com/atom/ns#' term='Network Programmability'/><category scheme='http://www.blogger.com/atom/ns#' term='DevOps'/><category scheme='http://www.blogger.com/atom/ns#' term='Network DevOps'/><category scheme='http://www.blogger.com/atom/ns#' term='Ansible'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS-XE'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS-XR'/><title type='text'>Using Ansible to PUSH Cisco IOS Configurations</title><content type='html'>There are a lot of very good articles on the Internet about how Network Engineers can use Ansible to create standardized network device configurations or use Ansible with existing network vendor API's to make changes to network devices. Some of my favorites can be found on the &lt;a href="https://pynet.twb-tech.com/blog/" target="_blank"&gt;Python for Network Engineers&lt;/a&gt; and &lt;a href="http://jedelman.com/" target="_blank"&gt;Jason Edelman's&lt;/a&gt; sites.&lt;br/&gt;&lt;br/&gt;However, what if you have [older, legacy] network devices or are running on software revisions that don't support the newer vendor API's? What if you need to push a common configuration among a multi-vendor or multi-platform of devices quickly? Pushing configurations quickly is easy with my &lt;a href="https://github.com/jtdub/pyMultiChange" target="_blank"&gt;PyMultiChange&lt;/a&gt; tool, but one of its biggest limitations is a multi-[vendor, platform] support - where common configurations may have differing syntax, by [vendor, platform] to accomplish the same task. I have yet to find any blogs on Google that share ideas of this category.&lt;br/&gt;&lt;br/&gt;For a while, this led me to believe that it it just wasn't possible, unless you invested the time in developing the appropriate Ansible modules.  However, I had an idea the other day, which proved that it is possible to push configurations to this category of network devices.&lt;br/&gt;&lt;br/&gt;Here is my example playbook:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;---&lt;br/&gt;- hosts: netdevices&lt;br/&gt;  connection: local&lt;br/&gt;  gather_facts: no&lt;br/&gt;  &lt;br/&gt;  tasks:&lt;br/&gt;  - name: Create SNMP Configuration&lt;br/&gt;    template:&lt;br/&gt;      src=templates/snmp-contact.j2&lt;br/&gt;      dest=input/{{ hostname }}.conf&lt;br/&gt;    delegate_to: 127.0.0.1&lt;br/&gt;&lt;br/&gt;  - name: Configure SNMP Contact on network device&lt;br/&gt;    command: scripts/netsible.py {{ hostname }} input/{{ hostname }}.conf &lt;br/&gt;    delegate_to: 127.0.0.1&lt;/pre&gt;&lt;br/&gt;In this playbook, you can see that I call a group of devices call 'netdevices'. The first play is to generate the configuration. In this case, I am modifying the snmp-server contact information. It calls a source template called snmp-contact.j2. Here is what the template looks like:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;config t&lt;br/&gt;snmp-server contact {{ contact_name }}&lt;br/&gt;end&lt;br/&gt;copy run start&lt;br/&gt;&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;The template calls the 'contact_name' variable and destination of the template is in the input directory and named using the 'hostname' variable.&lt;br/&gt;&lt;br/&gt;The hostname variable is called from host_vars. Here is the host_var for a test device, called core1a:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;hostname: core1a&lt;/pre&gt;&lt;br/&gt;The contact_name variable is called from group_vars/all. Here is what my group_var/all looks like:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;contact_name: netdude@packetgeek.net&lt;/pre&gt;&lt;br/&gt;The result is a file in the input directory called core1a.conf, with the following configuration:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;config t&lt;br/&gt;snmp-server contact netdude@packetgeek.net&lt;br/&gt;end&lt;br/&gt;copy run start&lt;br/&gt;&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;Once the configuration file has been created, the next play is called. This play is responsible for pushing the configuration to each device. It runs a local script called netsible.py. The script takes two arguments. The first is the hostname of the device to access. The second is the location of the configuration file that was created.&lt;br/&gt;&lt;br/&gt;In the background, the script connects to the network device, via SSH, accesses enable mode, reads the configuration file, then executes each command on the router. The script utilizes my netlib library, to make this process simple. Here is the code for the netsible.py script:&lt;br/&gt;&lt;pre class="lang:python decode:true"&gt;#!/usr/bin/env python&lt;br/&gt;&lt;br/&gt;from netlib.netlib.user_creds import simple_yaml&lt;br/&gt;from netlib.netlib.conn_type import SSH&lt;br/&gt;&lt;br/&gt;from os.path import expanduser&lt;br/&gt;import sys&lt;br/&gt;&lt;br/&gt;creds = simple_yaml()&lt;br/&gt;base_dir = expanduser("~/net-ansible")&lt;br/&gt;hostname = sys.argv[1]&lt;br/&gt;command_file = sys.argv[2]&lt;br/&gt;ssh = SSH(hostname, creds['username'], creds['password'])&lt;br/&gt;&lt;br/&gt;ssh.connect()&lt;br/&gt;ssh.set_enable(creds['enable'])&lt;br/&gt;&lt;br/&gt;with open(base_dir + "/" + command_file) as f:&lt;br/&gt;    for line in f.readlines():&lt;br/&gt;        line = line.strip()&lt;br/&gt;        ssh.command(line)&lt;br/&gt;f.close()&lt;br/&gt;&lt;br/&gt;ssh.close()&lt;/pre&gt;&lt;br/&gt;If your device is running on a version of code that doesn't support ssh, it would be easy, with the netlib library, to utilize telnet. All you would have to do is import the Telnet library via:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;from netlib.netlib.conn_type import Telnet&lt;/pre&gt;&lt;br/&gt;Then replace the ssh variable with the Telnet Library.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;ssh = Telnet(hostname, creds['username'], creds['password'])&lt;/pre&gt;&lt;br/&gt;In the playbook, the 'delegate_to' call tells Ansible to run the command locally on the Ansible master, rather than Ansible connecting to the remote devices directly.&lt;br/&gt;&lt;br/&gt;Here is what it looks like when I run the playbook:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;net-ansible]$ ansible-playbook -i hosts push.yml &lt;br/&gt;&lt;br/&gt;PLAY [netdevices] ************************************************************* &lt;br/&gt;&lt;br/&gt;TASK: [Create SNMP Configuration] ********************************************* &lt;br/&gt;ok: [darkstar -&amp;gt; 127.0.0.1]&lt;br/&gt;ok: [core1a -&amp;gt; 127.0.0.1]&lt;br/&gt;&lt;br/&gt;TASK: [Configure SNMP Contact on network device] ****************************** &lt;br/&gt;changed: [darkstar -&amp;gt; 127.0.0.1]&lt;br/&gt;changed: [core1a -&amp;gt; 127.0.0.1]&lt;br/&gt;&lt;br/&gt;PLAY RECAP ******************************************************************** &lt;br/&gt;core1a                     : ok=2    changed=1    unreachable=0    failed=0   &lt;br/&gt;darkstar                   : ok=2    changed=1    unreachable=0    failed=0   &lt;br/&gt;&lt;br/&gt;net-ansible]$&lt;/pre&gt;&lt;br/&gt;This obviously works, but it does have a couple limitations, currently the playbook is not multi-[vendor, platform] ready. To do this, I would need to specify host_vars that define each device by vendor or platoform.&lt;br/&gt;&lt;br/&gt;For example, I could define a variable called 'network_platform' in the host_vars and define each host by platform. I could use the values of IOS, NX-OS, IOS-XR, EOS, or JUN-OS defined as the 'network_platform' in the host_vars. Then when I called my playbooks, it could look like:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;---&lt;br/&gt;- hosts: netdevices&lt;br/&gt;  connection: local&lt;br/&gt;  gather_facts: no&lt;br/&gt;  &lt;br/&gt;  tasks:&lt;br/&gt;  - name: IOS | Create SNMP Configuration&lt;br/&gt;    template:&lt;br/&gt;      src=templates/ios/snmp-contact.j2&lt;br/&gt;      dest=input/{{ hostname }}.conf&lt;br/&gt;    delegate_to: 127.0.0.1&lt;br/&gt;    when: network_platform == IOS&lt;br/&gt;&lt;br/&gt;  - name: NX-OS | Create SNMP Configuration&lt;br/&gt;    template:&lt;br/&gt;      src=templates/nx-os/snmp-contact.j2&lt;br/&gt;      dest=input/{{ hostname }}.conf&lt;br/&gt;    delegate_to: 127.0.0.1&lt;br/&gt;    when: network_platform == NX-OS&lt;br/&gt;&lt;br/&gt;  - name: IOS-XR | Create SNMP Configuration&lt;br/&gt;    template:&lt;br/&gt;      src=templates/ios-xr/snmp-contact.j2&lt;br/&gt;      dest=input/{{ hostname }}.conf&lt;br/&gt;    delegate_to: 127.0.0.1&lt;br/&gt;    when: network_platform == IOS-XR&lt;br/&gt;&lt;br/&gt;  - name: EOS | Create SNMP Configuration&lt;br/&gt;    template:&lt;br/&gt;      src=templates/eos/snmp-contact.j2&lt;br/&gt;      dest=input/{{ hostname }}.conf&lt;br/&gt;    delegate_to: 127.0.0.1&lt;br/&gt;    when: network_platform == EOS&lt;br/&gt;&lt;br/&gt;  - name: JUN-OS | Create SNMP Configuration&lt;br/&gt;    template:&lt;br/&gt;      src=templates/jun-os/snmp-contact.j2&lt;br/&gt;      dest=input/{{ hostname }}.conf&lt;br/&gt;    delegate_to: 127.0.0.1&lt;br/&gt;    when: network_platform == JUN-OS&lt;br/&gt;&lt;br/&gt;  - name: Configure SNMP Contact on network device&lt;br/&gt;    command: scripts/netsible.py {{ hostname }} input/{{ hostname }}.conf &lt;br/&gt;    delegate_to: 127.0.0.1&lt;/pre&gt;&lt;br/&gt;The other limitation that is that the script writes the configuration to the network devices every time that the playbook is ran, regardless of whether it's needed or not. For creating an snmp contact, this isn't a huge deal, with the exception of taking extra CPU cycles. However, what if you ran a playbook that was entirely roll based, and it called a role to define BGP route reflectors. Obviously, this would bounce BGP neighbors every time that you ran the playbook. Basically, it boils down to needing a method of checking whether the configuration is actually needed before the script applies it. This is something that I hope to be able to work on. In the mean time, I hope that you've enjoyed this. If you have any ideas, please feel free to share them with me!&lt;br/&gt;&lt;br/&gt;I have a generic Github repository that I've been using to play with &lt;a href="https://github.com/jtdub/net-ansible" target="_blank"&gt;Ansible Network Engineering&lt;/a&gt; functionality. Feel free to play with it and contribute to it! Note that '&lt;a href="https://github.com/jtdub/netlib" target="_blank"&gt;netlib&lt;/a&gt;' is called as a submodule. :) Enjoy!</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5294505561141099555/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2015/08/using-ansible-to-push-cisco-ios_29.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5294505561141099555'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5294505561141099555'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2015/08/using-ansible-to-push-cisco-ios_29.html' title='Using Ansible to PUSH Cisco IOS Configurations'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-646963068037883618</id><published>2015-08-26T17:56:00.001-05:00</published><updated>2019-04-11T11:10:05.620-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Python Scripting'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><title type='text'>pyMultiChange rewrite and Netlib</title><content type='html'>I re-wrote '&lt;a href="https://github.com/jtdub/pyMultiChange" target="_blank"&gt;pyMultiChange&lt;/a&gt;' around my new library for connecting and managing devices. Before I was using 'pyRouterLib', but now I've deprecated that library with the creation of my new library '&lt;a href="https://github.com/jtdub/netlib" target="_blank"&gt;netlib&lt;/a&gt;'.&lt;br/&gt;&lt;br/&gt;Netlib is super easy to use and is more complete than &lt;a href="https://github.com/jtdub/pyRouterLib" target="_blank"&gt;pyRouterLib&lt;/a&gt; was. Utilizing Netlib, allowed me to cut the code in pyMultiChange by almost half and netlib is more flexible and user friendly.&lt;br/&gt;&lt;br/&gt;To use netlib, first clone the git repo and install the necessary python libraries:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;git clone https://github.com/jtdub/netlib.git&lt;br/&gt;cd netlib&lt;br/&gt;sudo pip install -r requirements.txt&lt;br/&gt;sudo python setup.py install&lt;/pre&gt;&lt;br/&gt;After that, you're ready to go. Accessing network devices via telnet and ssh are currently supported. Both have a very similar API syntax, that is layed out in the README on github.&lt;br/&gt;&lt;br/&gt;Here is an example of how to use the ssh module:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;$ python&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; from netlib.conn_type import SSH&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; conn = SSH('core1a', username='******', password='******')&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; conn.connect()&lt;br/&gt;'\r\ncore1a.sat&amp;gt;'&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; conn.set_enable(enable_password='******')&lt;br/&gt;'\r\ncore1a.sat#'&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; conn.disable_paging()&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; print(conn.command('show version'))&lt;br/&gt;show version&lt;br/&gt;Cisco IOS Software, C3750 Software (C3750-IPSERVICESK9-M), Version 12.2(55)SE9, RELEASE SOFTWARE (fc1)&lt;br/&gt;Technical Support: http://www.cisco.com/techsupport&lt;br/&gt;Copyright (c) 1986-2014 by Cisco Systems, Inc.&lt;br/&gt;Compiled Mon 03-Mar-14 22:45 by prod_rel_team&lt;br/&gt;Image text-base: 0x01000000, data-base: 0x02F00000&lt;br/&gt;&lt;br/&gt;ROM: Bootstrap program is C3750 boot loader&lt;br/&gt;BOOTLDR: C3750 Boot Loader (C3750-HBOOT-M) Version 12.2(44)SE5, RELEASE SOFTWARE (fc1)&lt;br/&gt;&lt;br/&gt;core1a.sat uptime is 9 weeks, 5 days, 2 hours, 17 minutes&lt;br/&gt;System returned to ROM by power-on&lt;br/&gt;System restarted at 20:25:45 CST Fri Jun 19 2015&lt;br/&gt;System image file is "flash:c3750-ipservicesk9-mz.122-55.SE9.bin"&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;This product contains cryptographic features and is subject to United&lt;br/&gt;States and local country laws governing import, export, transfer and&lt;br/&gt;use. Delivery of Cisco cryptographic products does not imply&lt;br/&gt;third-party authority to import, export, distribute or use encryption.&lt;br/&gt;Importers, exporters, distributors and users are responsible for&lt;br/&gt;compliance with U.S. and local country laws. By using this product you&lt;br/&gt;agree to comply with applicable laws and regulations. If you are unable&lt;br/&gt;to comply with U.S. and local laws, return this product immediately.&lt;br/&gt;&lt;br/&gt;A summary of U.S. laws governing Cisco cryptographic products may be found at:&lt;br/&gt;http://www.cisco.com/wwl/export/crypto/tool/stqrg.html&lt;br/&gt;&lt;br/&gt;If you require further assistance please contact us by sending email to&lt;br/&gt;export@cisco.com.&lt;br/&gt;&lt;br/&gt;cisco WS-C3750-24TS (PowerPC405) processor (revision L0) with 131072K bytes of memory.&lt;br/&gt;Processor board ID CAT1042ZGKL&lt;br/&gt;Last reset from power-on&lt;br/&gt;6 Virtual Ethernet interfaces&lt;br/&gt;24 FastEthernet interfaces&lt;br/&gt;2 Gigabit Ethernet interfaces&lt;br/&gt;The password-recovery mechanism is enabled.&lt;br/&gt;&lt;br/&gt;512K bytes of flash-simulated non-volatile configuration memory.&lt;br/&gt;Base ethernet MAC Address       : 00:19:E7:5F:8F:80&lt;br/&gt;Motherboard assembly number     : 73-9677-10&lt;br/&gt;Power supply part number        : 341-0034-01&lt;br/&gt;Motherboard serial number       : CAT10415NLR&lt;br/&gt;Power supply serial number      : DTH1037117A&lt;br/&gt;Model revision number           : L0&lt;br/&gt;Motherboard revision number     : A0&lt;br/&gt;Model number                    : WS-C3750-24TS-S&lt;br/&gt;System serial number            : CAT1042ZGKL&lt;br/&gt;Top Assembly Part Number        : 800-25857-02&lt;br/&gt;Top Assembly Revision Number    : D0&lt;br/&gt;Version ID                      : V05&lt;br/&gt;CLEI Code Number                : CNMV100CRE&lt;br/&gt;Hardware Board Revision Number  : 0x01&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Switch Ports Model              SW Version            SW Image                 &lt;br/&gt;------ ----- -----              ----------            ----------               &lt;br/&gt;*    1 26    WS-C3750-24TS      12.2(55)SE9           C3750-IPSERVICESK9-M     &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Configuration register is 0xF&lt;br/&gt;&lt;br/&gt;core1a.sat#&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; conn.close()&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;How easy is that? I'm stoked about netlib. It should make rapidly creating code for interact with network devices pretty trivial. I'm experimenting with SNMP functionality, though it's not ready for prime time.&lt;br/&gt;&lt;br/&gt;I also have a method for storing and reading user credentials, so that they don't have to be stored in the script, called every time a script is run, or entered manually for every device that is accessed.&lt;br/&gt;&lt;br/&gt;Let me know what you think, add feature requests, or do a pull request. :)</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/646963068037883618/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2015/08/pymultichange-rewrite-and-netlib_26.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/646963068037883618'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/646963068037883618'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2015/08/pymultichange-rewrite-and-netlib_26.html' title='pyMultiChange rewrite and Netlib'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-2822328316840464426</id><published>2015-04-05T09:26:00.001-05:00</published><updated>2019-04-11T11:10:05.363-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='Software Defined Networking'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Miscellaneous Hacking'/><category scheme='http://www.blogger.com/atom/ns#' term='SDN'/><category scheme='http://www.blogger.com/atom/ns#' term='NFV'/><category scheme='http://www.blogger.com/atom/ns#' term='Cisco VIRL'/><category scheme='http://www.blogger.com/atom/ns#' term='Docker'/><category scheme='http://www.blogger.com/atom/ns#' term='KVM'/><category scheme='http://www.blogger.com/atom/ns#' term='openvswitch'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS-XR'/><title type='text'>Dockerizing IOS-XRv</title><content type='html'>I've been playing with docker off and on for about a year or so now. One of my ideas, with Docker, is to use it for my network lab. These days, I've mostly virtualized my lab. Lately, been doing a lot of it in VIRL, but this hasn't stopped me from tinkering.&lt;br/&gt;&lt;br/&gt;For a while, I've had a base docker container that sets up Open vSwitch and KVM. Once the docker container is started, you can access the container and spin up VM's or play with Open vSwitch. The Dockerfile to set this container up can be found on my &lt;a title="Docker, CentOS, KVM, OVS" href="https://github.com/jtdub/docker-centos-kvm-ovs" target="_blank"&gt;github&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;The next iteration of this was to actually have the VM in the container and have it boot up directly. I did this with IOS-XRv. It's a pretty straight forward set up. The Dockerfile uses centos:6 as its base, installs a couple yum repositories, installs needed packages, and adds the associated files. When it's all done, you have a docker container that will run the IOS-XRv. You can spin this container up and down at will. It's pretty nifty.&lt;br/&gt;&lt;br/&gt;My next goal in this set up is to have the container generate dynamic mac addresses for IOS-XRv when it boots up. Currently the mac addresses are hard coded. The reasoning for this is that I eventually want Open vSwitch to connect to a 'controller' Open vSwitch via VXLAN or GRE. The purpose of this is to spin up multiple containers and have them all connect to each other. This will make the lab environment much more flexible and scalable.&lt;br/&gt;&lt;br/&gt;Anyways, check out the &lt;a title="CentOS, KVM, OVS, and IOS-XRv!" href="https://github.com/jtdub/docker-ios-xrv/blob/master/Dockerfile" target="_blank"&gt;docker-ios-xrv github&lt;/a&gt; for the README, Dockerfile, and associated files. I'll post more when I have updates.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/2822328316840464426/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2015/04/dockerizing-ios-xrv_5.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2822328316840464426'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2822328316840464426'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2015/04/dockerizing-ios-xrv_5.html' title='Dockerizing IOS-XRv'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-2350179924749584665</id><published>2015-03-12T21:39:00.001-05:00</published><updated>2019-04-11T13:55:16.289-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='troubleshooting'/><category scheme='http://www.blogger.com/atom/ns#' term='Network Connectivity'/><category scheme='http://www.blogger.com/atom/ns#' term='Rackspace'/><title type='text'>Troubleshooting Internet Connectivity</title><content type='html'>This evening, I noticed that I was having some horrible Internet&amp;nbsp;connectivity issues, from home. Trying to stream anything online? Forget it. Frustrated, I started troubleshooting the issue, fully expecting that I would end up opening up a trouble ticket with my ISP, sending them all my available troubleshooting information, and asking&amp;nbsp;them to resolve their issue.&lt;br /&gt;&lt;br /&gt;Turns out, the issue was a simple fix - on my side, but I figured that I would provide my troubleshooting steps as a learning experience for anybody whom runs across this page.&lt;br /&gt;&lt;br /&gt;Background information: My home Internet connectivity is provided by Cable Internet with a 30Mbps downstream / 5Mbps upstream.&lt;br /&gt;&lt;br /&gt;The first thing that I did was go to http://speedtest.rackspace.com. From this page, you can run the OOKLA speedtest application from any of their data centers. This provides excellent information on download &amp;amp; upload speeds, latency, and jitter. I ran the test from the Dallas and Chicago data centers. Right off the bat, I noticed that I was getting a fraction of the download speed that my Internet service is configured for. This can be seen below:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-99H5Bo19SqA/XK-NPuQeQtI/AAAAAAAA2HM/oTf0hA4HAIYZlI7C373yfEwyohYRcJ03QCLcBGAs/s1600/Screen-Shot-2015-03-13-at-1.44.38-AM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="630" data-original-width="712" height="283" src="https://4.bp.blogspot.com/-99H5Bo19SqA/XK-NPuQeQtI/AAAAAAAA2HM/oTf0hA4HAIYZlI7C373yfEwyohYRcJ03QCLcBGAs/s320/Screen-Shot-2015-03-13-at-1.44.38-AM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-yowlxCi5Gz8/XK-NP5aYE9I/AAAAAAAA2HQ/bsAWGLHyE_kaY85BaVXT7wKkkS9s7PNMQCLcBGAs/s1600/Screen-Shot-2015-03-13-at-1.47.58-AM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="628" data-original-width="710" height="283" src="https://3.bp.blogspot.com/-yowlxCi5Gz8/XK-NP5aYE9I/AAAAAAAA2HQ/bsAWGLHyE_kaY85BaVXT7wKkkS9s7PNMQCLcBGAs/s320/Screen-Shot-2015-03-13-at-1.47.58-AM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;This immediately pointed to a real issue, but I didn't yet have all the information that I needed to take to my ISP. Next, I used an application called MTR. MTR is a traceroute application, that when ran correctly makes it visually easy to spot potential network issues. I ran an MTR report destined to one of my cloud servers at Rackspace.&lt;br /&gt;&lt;pre class="lang:default decode:true "&gt;~]# mtr --report --mpls --show-ips --report-cycles=100 xxxxxxxxxxxxxxxxxxxxxxxxx&lt;br /&gt;Start: Fri Mar 13 01:50:12 2015&lt;br /&gt;HOST: xxxxxxxxxxxxxxxxxxxx        Loss%   Snt   Last   Avg  Best  Wrst StDev&lt;br /&gt;  1.|-- 172.16.1.1                 0.0%   100    2.3   2.1   0.8  10.7   1.1&lt;br /&gt;  2.|-- 172.16.0.34                0.0%   100    0.9   1.1   0.7  15.9   1.4&lt;br /&gt;  3.|-- 192.168.0.1                0.0%   100    1.8   2.2   1.5  20.9   2.3&lt;br /&gt;  4.|-- cpe-24-160-128-1.satx.res  9.0%   100   14.1  19.1   9.6  37.9   7.6&lt;br /&gt;  5.|-- 24.28.133.9                4.0%   100   30.6  33.3  17.1  64.2   8.1&lt;br /&gt;  6.|-- be12.lvoktxad01r.texas.rr  7.0%   100   17.5  18.2   9.5  44.7   6.4&lt;br /&gt;  7.|-- agg21.snavtxuu02r.texas.r 21.0%   100   36.8  19.2  10.1  46.2   8.2&lt;br /&gt;  8.|-- agg23.hstqtxl301r.texas.r 21.0%   100   18.4  26.0  14.9  45.3   7.9&lt;br /&gt;  9.|-- bu-ether46.hstqtx0209w-bc 20.0%   100   20.8  26.3  15.3  46.1   9.1&lt;br /&gt; 10.|-- bu-ether12.dllstx976iw-bc  2.0%   100   22.6  29.9  18.6  53.7   8.0&lt;br /&gt; 11.|-- 0.ae4.pr1.dfw10.tbone.rr.  9.0%   100   23.5  25.2  17.5  50.6   6.9&lt;br /&gt; 12.|-- 66.109.11.22               5.0%   100   28.1  25.1  17.4  44.7   6.1&lt;br /&gt; 13.|-- ae8.er1.dfw2.us.zip.zayo.  5.0%   100   23.3  26.0  18.3  66.5   8.3&lt;br /&gt; 14.|-- 128.177.70.86.IPYX-076520 12.0%   100   24.0  26.7  18.4  47.3   6.8&lt;br /&gt; 15.|-- 10.25.1.71                18.0%   100   36.5  26.7  18.1  49.8   7.0&lt;br /&gt; 16.|-- be42.coreb.dfw1.rackspace 21.0%   100   26.4  30.0  19.5  50.4   8.4&lt;br /&gt; 17.|-- po2.coreb-core9.core9.dfw 17.0%   100   27.2  31.9  21.7  64.5   9.4&lt;br /&gt; 18.|-- core9.aggr160b-3.dfw2.rac  5.0%   100   22.4  30.2  21.2  50.7   7.9&lt;br /&gt; 19.|-- xxxxxxxxxxxxxxxxxxxxxxxxx  7.0%   100   26.0  26.9  20.2  47.6   5.5&lt;/pre&gt;&lt;br /&gt;You look at the 'loss%' column, you will notice that the MTR reports packet loss, starting at hop 4. This packet loss continues at every hop in the path. Hop 4 is the gateway of my Cable Internet. This suggests that the actual network issue exists between my cable modem and my providers router. To further solidify this finding, I ran a 100 count ping to that same server, hosted at Rackspace.&lt;br /&gt;&lt;pre class="lang:default decode:true "&gt;--- xxxxxxxxxxxxxxxxxxxxxxxxx ping statistics ---&lt;br /&gt;100 packets transmitted, 91 packets received, 9.0% packet loss&lt;br /&gt;round-trip min/avg/max/stddev = 19.296/31.589/49.183/7.557 ms&lt;br /&gt;Fri Mar 13 01:53:43 CDT 2015&lt;/pre&gt;&lt;br /&gt;Indeed, the ping saw the same packet loss. Before opening a ticket with my Internet provider, I decided to power cycle my cable modem. After my cable modem was back online, I ran the same tests.&lt;br /&gt;&lt;br /&gt;First with the speed tests.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-ekCp5VqTCBM/XK-NcVXm2GI/AAAAAAAA2Hc/jgkSbfTaWPAmyIfq-TamSlOSF_epLFuTQCLcBGAs/s1600/Screen-Shot-2015-03-13-at-2.03.07-AM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="630" data-original-width="708" height="284" src="https://1.bp.blogspot.com/-ekCp5VqTCBM/XK-NcVXm2GI/AAAAAAAA2Hc/jgkSbfTaWPAmyIfq-TamSlOSF_epLFuTQCLcBGAs/s320/Screen-Shot-2015-03-13-at-2.03.07-AM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-21ASuYsev0I/XK-NcekoSaI/AAAAAAAA2HY/vEmDHdUmBjITH2ONJWEa8aHr-Ss7ZgObACLcBGAs/s1600/Screen-Shot-2015-03-13-at-2.04.27-AM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="630" data-original-width="710" height="283" src="https://3.bp.blogspot.com/-21ASuYsev0I/XK-NcekoSaI/AAAAAAAA2HY/vEmDHdUmBjITH2ONJWEa8aHr-Ss7ZgObACLcBGAs/s320/Screen-Shot-2015-03-13-at-2.04.27-AM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Huge difference! Next, I ran the same MTR report.&lt;br /&gt;&lt;pre class="lang:default decode:true "&gt;~]# mtr --report --mpls --show-ips --report-cycles=100 xxxxxxxxxxxxxxxxxxxxxxxxx&lt;br /&gt;Start: Fri Mar 13 01:59:19 2015&lt;br /&gt;HOST: xxxxxxxxxxxxxxxxxxxx        Loss%   Snt   Last   Avg  Best  Wrst StDev&lt;br /&gt;  1.|-- 172.16.1.1                 0.0%   100    2.4   2.1   0.9   7.5   0.8&lt;br /&gt;  2.|-- 172.16.0.34                0.0%   100    0.8   0.9   0.7   2.2   0.1&lt;br /&gt;  3.|-- 192.168.0.1                0.0%   100    2.5   2.3   1.5  13.9   1.6&lt;br /&gt;  4.|-- cpe-24-160-128-1.satx.res  0.0%   100   13.0  15.0   9.4  24.2   2.8&lt;br /&gt;  5.|-- 24.28.133.9                0.0%   100   22.7  30.3  15.1  66.2   6.6&lt;br /&gt;  6.|-- be12.lvoktxad01r.texas.rr  0.0%   100   17.6  14.5   9.1  26.4   3.0&lt;br /&gt;  7.|-- agg21.snavtxuu02r.texas.r  0.0%   100   19.8  16.0   9.7  31.6   4.2&lt;br /&gt;  8.|-- agg23.hstqtxl301r.texas.r  0.0%   100   17.3  20.9  13.2  40.8   4.5&lt;br /&gt;  9.|-- bu-ether46.hstqtx0209w-bc  0.0%   100   25.9  22.5  14.3  52.4   5.5&lt;br /&gt; 10.|-- bu-ether12.dllstx976iw-bc  0.0%   100   22.9  24.8  18.2  42.0   3.8&lt;br /&gt; 11.|-- 0.ae4.pr1.dfw10.tbone.rr.  0.0%   100   26.2  24.2  17.2  75.7   7.1&lt;br /&gt; 12.|-- 66.109.11.22               0.0%   100   18.4  23.7  16.9  42.8   4.3&lt;br /&gt; 13.|-- ae8.er1.dfw2.us.zip.zayo.  0.0%   100   25.5  23.8  16.8  61.7   6.4&lt;br /&gt; 14.|-- 128.177.70.86.IPYX-076520  0.0%   100   29.6  24.7  19.1  37.5   3.0&lt;br /&gt; 15.|-- 10.25.1.71                 0.0%   100   29.1  24.3  17.6  47.0   4.6&lt;br /&gt; 16.|-- be42.coreb.dfw1.rackspace  0.0%   100   22.6  24.6  19.1  45.2   3.7&lt;br /&gt; 17.|-- po2.coreb-core9.core9.dfw  0.0%   100   26.6  26.5  19.9  37.2   3.5&lt;br /&gt; 18.|-- core9.aggr160b-3.dfw2.rac  0.0%   100   23.9  26.9  19.9  41.7   3.7&lt;br /&gt; 19.|-- xxxxxxxxxxxxxxxxxxxxxxxxx  0.0%   100   39.6  25.4  19.1  39.6   3.1&lt;/pre&gt;&lt;br /&gt;Notice how the packet loss is completely gone now? Finally, I ran the same 100 count ping.&lt;br /&gt;&lt;pre class="lang:default decode:true "&gt; --- xxxxxxxxxxxxxxxxxxxxxxxxx ping statistics ---&lt;br /&gt;100 packets transmitted, 100 packets received, 0.0% packet loss&lt;br /&gt;round-trip min/avg/max/stddev = 20.903/29.353/62.735/4.888 ms&lt;br /&gt;Fri Mar 13 02:00:56 CDT 2015&lt;/pre&gt;&lt;br /&gt;Confirmed. No packet loss. As you can see, the issue ended up being that my cable modem needed to be power cycled. No&amp;nbsp;inundating my Internet provider with a trouble ticket tonight.&lt;br /&gt;&lt;br /&gt;Simple tools, such as MTR, traceroute, and ping can provide a lot of information about network connectivity problems. At the very least, they can assist you in narrowing down where to look.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/2350179924749584665/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2015/03/troubleshooting-internet-connectivity_12.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2350179924749584665'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2350179924749584665'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2015/03/troubleshooting-internet-connectivity_12.html' title='Troubleshooting Internet Connectivity'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://4.bp.blogspot.com/-99H5Bo19SqA/XK-NPuQeQtI/AAAAAAAA2HM/oTf0hA4HAIYZlI7C373yfEwyohYRcJ03QCLcBGAs/s72-c/Screen-Shot-2015-03-13-at-1.44.38-AM.png' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1972795778286217311</id><published>2015-02-02T17:48:00.001-06:00</published><updated>2019-04-11T11:10:04.842-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Python Scripting'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><title type='text'>pyMultiChange and pyRouterLib Updates</title><content type='html'>I recently had a request to combine the SSH and TELNET functionality on my &lt;a href="https://github.com/jtdub/pyMultiChange" target="_blank"&gt;pyMultiChange&lt;/a&gt; scripts, as they share a lot of code. I thought that this was a reasonable request, so I started that process today.&lt;br/&gt;&lt;br/&gt;First off, I updated the &lt;a href="https://github.com/jtdub/pyRouterLib" target="_blank"&gt;pyRouterLib&lt;/a&gt; to be more pep8 complaint. Once that was updated, I tossed the library into the pyMultiChange project, for consumption.&lt;br/&gt;&lt;br/&gt;Currently, 'telnet-multi.py' and 'ssh-multi.py' are still available, but I plan on phasing them out, after I test 'multi.py' more.&lt;br/&gt;&lt;br/&gt;Here is the code of the new 'args' library:&lt;br/&gt;&lt;pre class="lang:python decode:true "&gt;import argparse&lt;br/&gt;&lt;br/&gt;hosts_file = ''&lt;br/&gt;command_file = ''&lt;br/&gt;protocol = 'ssh'&lt;br/&gt;command_output = False&lt;br/&gt;verbose = False&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;def default_args(hosts_file, command_file, protocol, command_output, verbose):&lt;br/&gt;    parser = argparse.ArgumentParser(description='Managing Cisco routers/switches with Python')&lt;br/&gt;    parser.add_argument('-d', '--hosts', help='Specifies a host file')&lt;br/&gt;    parser.add_argument('-c', '--commands',  help='Specifies a commands file', required=True)&lt;br/&gt;    parser.add_argument('-s', '--ssh', help='Default: Use the SSH protocol', nargs='?', const='ssh')&lt;br/&gt;    parser.add_argument('-t', '--telnet', help='Use the Telnet protocol', nargs='?', const='telnet')&lt;br/&gt;    parser.add_argument('-o', '--output', help='Be verbose with command output', nargs='?', const=True)&lt;br/&gt;    parser.add_argument('-v', '--verbose', help='Debug script output', nargs='?', const=True)&lt;br/&gt;&lt;br/&gt;    args = vars(parser.parse_args())&lt;br/&gt;&lt;br/&gt;    if args['hosts']:&lt;br/&gt;        hosts_file = args['hosts']&lt;br/&gt;    if args['commands']:&lt;br/&gt;        command_file = args['commands']&lt;br/&gt;    if args['telnet']:&lt;br/&gt;        protocol = 'telnet'&lt;br/&gt;    if args['ssh']:&lt;br/&gt;        protocol = 'ssh'&lt;br/&gt;    if args['output']:&lt;br/&gt;        command_output = args['output']&lt;br/&gt;    if args['verbose']:&lt;br/&gt;        verbose = args['verbose']&lt;br/&gt;&lt;br/&gt;    return hosts_file, command_file, protocol, command_output, verbose&lt;/pre&gt;&lt;br/&gt;Next, Here is the combined functionality of the multi change script, called multi.py:&lt;br/&gt;&lt;pre class="lang:python decode:true "&gt;#!/usr/bin/env python&lt;br/&gt;&lt;br/&gt;from lib.new_args import default_args&lt;br/&gt;from lib.new_args import hosts_file&lt;br/&gt;from lib.new_args import command_file&lt;br/&gt;from lib.new_args import protocol&lt;br/&gt;from lib.new_args import command_output&lt;br/&gt;from lib.new_args import verbose&lt;br/&gt;from lib.pyRouterLib import RouterLib&lt;br/&gt;&lt;br/&gt;import os&lt;br/&gt;import time&lt;br/&gt;import sys&lt;br/&gt;&lt;br/&gt;access_params = ''&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;def access(method):&lt;br/&gt;    global access_params&lt;br/&gt;    if method == 'ssh':&lt;br/&gt;        access_params = access_method.use_ssh(host, RouterLib.username,&lt;br/&gt;                                              RouterLib.password)&lt;br/&gt;    elif method == 'telnet':&lt;br/&gt;        access_params = access_method.use_telnet(host, RouterLib.username,&lt;br/&gt;                                                 RouterLib.password)&lt;br/&gt;    else:&lt;br/&gt;        access_paams = ''&lt;br/&gt;        return """&lt;br/&gt;        You must use a proper connection method.&lt;br/&gt;        Currently telnet and ssh are supported.&lt;br/&gt;        """&lt;br/&gt;&lt;br/&gt;    return method, access_params&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;if __name__ == '__main__':&lt;br/&gt;    args = default_args(hosts_file, command_file, protocol, command_output,&lt;br/&gt;                        verbose)&lt;br/&gt;    hosts_file = args[0]&lt;br/&gt;    command_file = args[1]&lt;br/&gt;    protocol = args[2].lower()&lt;br/&gt;    command_output = args[3]&lt;br/&gt;    verbose = args[4]&lt;br/&gt;&lt;br/&gt;    if not os.path.isfile(hosts_file):&lt;br/&gt;        print "Error: Invalid Hosts File"&lt;br/&gt;        exit(1)&lt;br/&gt;    if not os.path.isfile(command_file):&lt;br/&gt;        print "Error: Invalid Commands File"&lt;br/&gt;        exit(1)&lt;br/&gt;    if verbose is True:&lt;br/&gt;        import logging&lt;br/&gt;        logging.basicConfig(level=logging.DEBUG)&lt;br/&gt;    access_method = RouterLib()&lt;br/&gt;    hosts = open(hosts_file, 'r')&lt;br/&gt;    if verbose is True:&lt;br/&gt;        logging.debug(' Reading hosts file.')&lt;br/&gt;    for host in hosts:&lt;br/&gt;        host = host.strip()&lt;br/&gt;        if verbose is True:&lt;br/&gt;            logging.debug(' Reading %s from the hosts file.' % host)&lt;br/&gt;        """&lt;br/&gt;        Set up the connection using SSH (default) or Telnet.&lt;br/&gt;        """&lt;br/&gt;        if protocol == 'ssh':&lt;br/&gt;            if verbose is True:&lt;br/&gt;                logging.debug(' Attempting to access %s via SSH.' % host)&lt;br/&gt;            try:&lt;br/&gt;                if verbose is True:&lt;br/&gt;                    logging.debug(' Establishing ssh connection to %s.' % host)&lt;br/&gt;                access(method='ssh')&lt;br/&gt;                access_cmd = access_params[-1]&lt;br/&gt;                access_shell = access_cmd.invoke_shell()&lt;br/&gt;                shell_output = access_shell.recv(1000)&lt;br/&gt;                if '&amp;gt;' in shell_output:&lt;br/&gt;                    if verbose is True:&lt;br/&gt;                        logging.debug(' Entering enable credentials')&lt;br/&gt;                    access_shell.send('enable\n')&lt;br/&gt;                    time.sleep(1)&lt;br/&gt;                    shell_output = access_shell.recv(1000)&lt;br/&gt;                    if 'Password:' in shell_output:&lt;br/&gt;                        access_shell.send(RouterLib.enable + '\n')&lt;br/&gt;                        time.sleep(1)&lt;br/&gt;                        shell_output = access_shell.recv(1000)&lt;br/&gt;                        if '#' in shell_output:&lt;br/&gt;                            if verbose is True:&lt;br/&gt;                                logging.debug(' Successfully entered enable mode.')&lt;br/&gt;                            access_shell.send('terminal length 0\n')&lt;br/&gt;                            shell_output = access_shell.recv(1000)&lt;br/&gt;                            if verbose is True:&lt;br/&gt;                                logging.debug(' Setting an unlimited terminal buffer.')&lt;br/&gt;                    else:&lt;br/&gt;                        if verbose is True:&lt;br/&gt;                            logging.debug(' Unable to enter enable mode.')&lt;br/&gt;                elif '#' in shell_output:&lt;br/&gt;                    access_shell.send('terminal length 0\n')&lt;br/&gt;                    shell_output = access_shell.recv(1000)&lt;br/&gt;                    if verbose is True:&lt;br/&gt;                        logging.debug(' Setting an unlimited terminal buffer.')&lt;br/&gt;            except:&lt;br/&gt;                logging.debug(' SKIPPING: %s doesn\'t support SSH.' % host)&lt;br/&gt;                exit(1)&lt;br/&gt;        elif protocol == 'telnet':&lt;br/&gt;            if verbose is True:&lt;br/&gt;                logging.debug(' Attempting to access %s via Telnet.' % host)&lt;br/&gt;            try:&lt;br/&gt;                if verbose is True:&lt;br/&gt;                    logging.debug(' Establishing telnet connection to %s.' % host)&lt;br/&gt;                access(method='telnet')&lt;br/&gt;                access_cmd = access_params[-1]&lt;br/&gt;            except:&lt;br/&gt;                logging.debug(' SKIPPING: %s doesn\'t support Telnet.' % host)&lt;br/&gt;                exit(1)&lt;br/&gt;        else:&lt;br/&gt;            access(method='none')&lt;br/&gt;        """&lt;br/&gt;        Run through the commands in the commands files.&lt;br/&gt;        """&lt;br/&gt;        cmds = open(command_file, 'r')&lt;br/&gt;        if verbose is True:&lt;br/&gt;            logging.debug(' Reading the commands file.')&lt;br/&gt;        for command in cmds:&lt;br/&gt;            command = command.strip()&lt;br/&gt;            if verbose is True:&lt;br/&gt;                logging.debug(' Executing: %s' % command)&lt;br/&gt;            if protocol == 'ssh':&lt;br/&gt;                access_shell.send(command + '\n')&lt;br/&gt;                time.sleep(2)&lt;br/&gt;                shell_output = access_shell.recv(1000000)&lt;br/&gt;                if command_output is True:&lt;br/&gt;                    print shell_output&lt;br/&gt;            if protocol == 'telnet':&lt;br/&gt;                access_cmd.write(command + '\n')&lt;br/&gt;                shell_output = access_cmd.read_until('#', 2)&lt;br/&gt;                if verbose is True:&lt;br/&gt;                    logging.debug(' Executing: %s' % command)&lt;br/&gt;                if command_output is True:&lt;br/&gt;                    print shell_output&lt;br/&gt;        """&lt;br/&gt;        Close the sessions and files.&lt;br/&gt;        """&lt;br/&gt;        access_cmd.close()&lt;br/&gt;        if verbose is True:&lt;br/&gt;            logging.debug(' Closing connection to %s.' % host)&lt;br/&gt;        cmds.close()&lt;br/&gt;        if verbose is True:&lt;br/&gt;            logging.debug(' Closing commands file.')&lt;br/&gt;    hosts.close()&lt;br/&gt;    if verbose is True:&lt;br/&gt;        logging.debug(' Closing hosts file.')&lt;/pre&gt;&lt;br/&gt;Feel free to fork it, make changes, and submit pull requests to either project. I welcome any feedback!&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;&lt;a href="https://github.com/jtdub/pyRouterLib" target="_blank"&gt;pyRouterLib&lt;/a&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;&lt;a href="https://github.com/jtdub/pyMultiChange" target="_blank"&gt;pyMultiChange&lt;/a&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/1972795778286217311/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2015/02/pymultichange-and-pyrouterlib-updates_2.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1972795778286217311'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1972795778286217311'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2015/02/pymultichange-and-pyrouterlib-updates_2.html' title='pyMultiChange and pyRouterLib Updates'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-72330186343249663</id><published>2014-12-08T16:22:00.001-06:00</published><updated>2019-04-11T13:53:08.118-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='MPLS'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNP SP Study Notes'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS-XE'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS-XR'/><title type='text'>MPLS Control and Data Plane Cheat Sheet</title><content type='html'>&lt;br /&gt;&lt;br /&gt;I made this image to help me wrap my head around the control and data plane flow in regards to MPLS.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-Giy9aXMjFfk/XK-NCQJ4JcI/AAAAAAAA2HE/LvrTtq9D6p8UDAROwVt4qFBnCH3Wy_DSACLcBGAs/s1600/MPLS-Control-and-Data-Planes.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="720" data-original-width="960" height="240" src="https://3.bp.blogspot.com/-Giy9aXMjFfk/XK-NCQJ4JcI/AAAAAAAA2HE/LvrTtq9D6p8UDAROwVt4qFBnCH3Wy_DSACLcBGAs/s320/MPLS-Control-and-Data-Planes.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/72330186343249663/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/12/mpls-control-and-data-plane-cheat-sheet_8.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/72330186343249663'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/72330186343249663'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/12/mpls-control-and-data-plane-cheat-sheet_8.html' title='MPLS Control and Data Plane Cheat Sheet'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://3.bp.blogspot.com/-Giy9aXMjFfk/XK-NCQJ4JcI/AAAAAAAA2HE/LvrTtq9D6p8UDAROwVt4qFBnCH3Wy_DSACLcBGAs/s72-c/MPLS-Control-and-Data-Planes.png' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4158117098008478048</id><published>2014-12-03T18:40:00.001-06:00</published><updated>2019-04-11T11:10:04.225-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Miscellaneous Hacking'/><category scheme='http://www.blogger.com/atom/ns#' term='Cisco VIRL'/><category scheme='http://www.blogger.com/atom/ns#' term='Misc.'/><title type='text'>Cisco VIRL - Bare Metal Install Tips and Lessons Learned</title><content type='html'>In my first post on VIRL -  "&lt;a href="http://www.packetgeek.net/2014/12/cisco-virl-status-digital-paper-weight/" target="_blank"&gt;Cisco VIRL Status? Digital Paper Weight&lt;/a&gt;", I shared my frustration with not being able to get my system to activate with Cisco. Come to find out, I'm a dim wit. That is, in the 'Salt ID and domain' section, I mistakenly left the &lt;em&gt;.pem&lt;/em&gt; suffix in the name. Ironically, I blurred out that section, in an attempt to retain some privacy. However, if I hadn't somebody may have rightly pointed out my error.&lt;br/&gt;&lt;br/&gt;Given that, The VIRL install isn't a point and click and all is good in router land. There are some details here and there, that should be ironed out. In this post, I'll list some of the items that stood out, as I installed, found a quirk, and re-installed.&lt;br/&gt;&lt;br/&gt;I did a bare-metal install. That is, I installed it on a physical computer, rather than a VM. The first quirk that I noticed is that udev immediately renamed eth0 to p3p1. Not a huge deal, however, the install requires that you have Internet access. By default, eth0 is set to DHCP an address, for Internet connectivity. After booting into the LiveCD environment, I needed to get network connectivity. To do this, I needed to get p3p1 and address. You can verify that eth0 has been renamed and what it's been renamed to by executing &lt;em&gt;dmesg | grep eth0&lt;/em&gt; from a terminal prompt.&lt;br/&gt;&lt;br/&gt;&lt;em&gt; &lt;/em&gt;Here's my steps:&lt;br/&gt;&lt;br/&gt;&lt;em&gt;Note: I make some assumptions:&lt;/em&gt;&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;172.16.1.1 is the default gateway&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;An address will be obtained via DHCP&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;p3p1 is the name of the renamed ethernet interface&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Open xterm&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Sudo to root&lt;br/&gt;&lt;ol&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;sudo su -&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Use sed to rename eth0 to p3p1 in /etc/network/interfaces&lt;br/&gt;&lt;ol&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;sed -i 's/eth0/p3p1/g' /etc/network/interfaces&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Restart the network stack&lt;br/&gt;&lt;ol&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;service networking restart&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Verify that you have an IP Address&lt;br/&gt;&lt;ol&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;ip addr show dev p3p1&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Verify network connectivity&lt;br/&gt;&lt;ol&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;ping -c 1 172.16.1.1&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;ping -c 1 4.2.2.2&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;ping -c 1 google.com&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;If you need to assign a static IP Address, you'll need to manually edit the /etc/network/interfaces file.&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;Using your favorite text editor, open /etc/network/interfaces&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;In the p3p1 section, replace dhcp with static&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;Modify the config so that it resembles the below example:&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;auto p3p1&lt;br/&gt;iface p3p1 inet static&lt;br/&gt;     address 172.16.1.51&lt;br/&gt;     netmask 255.255.255.192&lt;br/&gt;     gateway 172.16.1.1&lt;/pre&gt;&lt;br/&gt;Remember to substitute the 172.16.x.x addresses and netmask for your specific network. Also, leave the dns-nameservers section in, but change the name servers to suite your network.&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;After the necessary changes have been made, save the changes and exit the file.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Restart the network stack.&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;service network restart&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;After doing this, it may be necessary to restart the individual network interface, so that it pulls its current settings&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;ifdown p3p1&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;ifup p3p1&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;From here, the install should be ready to go. After the install is complete and the computer has been rebooted. Here are some of the notes that I made.&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Cisco mistakenly left Cisco internal network specific name servers in the /etc/ntp.conf. This needs to be changed. It can be quickly done via sed.&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;sudo sed -i 's/ntp.esl.cisco.com/pool.ntp.org/g' /etc/ntp.conf&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;After the change has been made, stop the NTP service&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;sudo service ntp stop&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;SYNC the system clock&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;&lt;em&gt;sudo ntpd -gq pool.ntp.org&lt;/em&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Start NTP&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;&lt;i&gt;sudo service ntp start&lt;/i&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;From here, the activation should work properly. Don't be a dim wit, like myself, and leave the &lt;em&gt;.pem&lt;/em&gt; suffix on the Salt ID and domain.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;After that, It's a mater of editing the /etc/virl.ini file. Take note that all the variables are lower case with under scores ("_") between words in a variable. There are at least two variables that mistakenly have upper case letters, thus won't be recognized by the automation and skipped - forcing you to either re-install or hack your way through the remainder of the install. Here are the variables that I noticed:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;&lt;strong&gt;&lt;em&gt;Static_IP &lt;/em&gt;&lt;/strong&gt;should be&lt;strong&gt;&lt;em&gt; static_ip&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;&lt;strong&gt;&lt;em&gt;internalnet_IP&lt;/em&gt;&lt;/strong&gt; should be &lt;strong&gt;&lt;em&gt;internalnet_ip&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;I also noticed that the 'dummy' interfaces don't work above the number 4 - I attempted to create a dummy interface scheme that matched my ip prefixes. That didn't work out to well. I'm also noticed that the &lt;em&gt;internalnet&lt;/em&gt; section changes itself to 172.16.10.0/24 - according to /etc/network/interfaces and MySQL, but it's completely different in my /etc/virl.ini and I'm not certain where it's getting that prefix from, yet.&lt;br/&gt;&lt;br/&gt;Once you get VIRL up and working, copy your /etc/virl.ini file off to another computer. That way, if you have to re-install, you can make quick work of the re-install.&lt;br/&gt;&lt;br/&gt;I'm sure that I'll find more things. As I do, I'll take notes of them and post updates.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4158117098008478048/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/12/cisco-virl-bare-metal-install-tips-and_3.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4158117098008478048'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4158117098008478048'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/12/cisco-virl-bare-metal-install-tips-and_3.html' title='Cisco VIRL - Bare Metal Install Tips and Lessons Learned'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-8867379985183785104</id><published>2014-12-03T06:56:00.001-06:00</published><updated>2019-04-11T13:52:05.231-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Miscellaneous Hacking'/><category scheme='http://www.blogger.com/atom/ns#' term='Cisco VIRL'/><category scheme='http://www.blogger.com/atom/ns#' term='Misc.'/><title type='text'>Cisco VIRL Status? Digital Paper Weight</title><content type='html'>&lt;i&gt;&lt;b&gt;Update:&amp;nbsp;&lt;/b&gt;&lt;/i&gt; I fixed the issue. Turns out, I'm a dim wit. There is an updated post, with tips and lessons learned, &lt;a href="http://www.packetgeek.net/2014/12/cisco-virl-bare-metal-install-tips-and-lessons-learned/"&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;I was excited that VIRL was finally released. On impulse, I went ahead and bought it, even though I thought it was a little pricey. So far, I haven't had any luck with it. It appears that I'm not the only one.&lt;br /&gt;&lt;br /&gt;For my install, I chose bare-metal, as I had the computer to spare. The install is a little clunky, but I worked my way through it. Udev changed the designated eth0 device to p3p1, which I'm used to and made the necessary changes in /etc/network/interfaces. After the install, you're supposed to configure NTP and activate the VIRL instance with Cisco's salt infrastructure. This is where the rub comes in. No matter what I do or try, I can't get it to register.&lt;br /&gt;&lt;br /&gt;I've configured NTP - and verified that I had a proper NTP association per these two support threads:&lt;br /&gt;&lt;br /&gt;&lt;a href="http://community.dev-innovate.com/t/activation-error/743" target="_blank"&gt;Activation Error&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://community.dev-innovate.com/t/virl-time-and-ntp-requirements/783" target="_blank"&gt;VIRL Time and NTP Requirements&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;I've verified that my VIRL instance can ping the Cisco salt infrastructure. I can also telnet to their service ports. From my view. It should be working, but no matter what I do, I get this screen:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-ir_hHARbfuc/XK-MzH_hgvI/AAAAAAAA2HA/t9FIgvon1kcv2cAS7Sp3BSTF5uwT6UvwQCLcBGAs/s1600/Screen-Shot-2014-12-03-at-3.57.52-AM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="594" data-original-width="906" height="209" src="https://1.bp.blogspot.com/-ir_hHARbfuc/XK-MzH_hgvI/AAAAAAAA2HA/t9FIgvon1kcv2cAS7Sp3BSTF5uwT6UvwQCLcBGAs/s320/Screen-Shot-2014-12-03-at-3.57.52-AM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;I'm also a little irritated with the VIRL support forums, as I can't post this screen shot, because I'm a 'new users'. The best that I can do is link to it.&lt;br /&gt;&lt;br /&gt;If you know what I may be doing wrong - or if you know of a fix, shoot me a DM on &lt;a href="http://twitter.com/packetgeeknet" target="_blank"&gt;twitter&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/8867379985183785104/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/12/cisco-virl-status-digital-paper-weight_3.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8867379985183785104'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8867379985183785104'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/12/cisco-virl-status-digital-paper-weight_3.html' title='Cisco VIRL Status? Digital Paper Weight'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://1.bp.blogspot.com/-ir_hHARbfuc/XK-MzH_hgvI/AAAAAAAA2HA/t9FIgvon1kcv2cAS7Sp3BSTF5uwT6UvwQCLcBGAs/s72-c/Screen-Shot-2014-12-03-at-3.57.52-AM.png' height='72' width='72'/><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5487577948001201739</id><published>2014-11-30T19:34:00.001-06:00</published><updated>2019-04-11T11:10:03.605-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>The Irony of Using SDN and NFV to Study Legacy Network Technologies</title><content type='html'>I was recently asked to present at a local Network Engineering Meetup. The topic that I'm going to speak about is how I'm using KVM, OpenFlow, Network Overlays, and OVS to integrate my physical network lab and virtual network lab. The presentation can be found &lt;a title="Physical and Virtual Network Lab Integration" href="http://f7038d968011578bff10-fe2c6ed9702abafda5370834b677ff92.r10.cf1.rackcdn.com/Physical-and-Virtual-Network-Lab-Integration.pdf" target="_blank"&gt;here&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5487577948001201739/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/11/the-irony-of-using-sdn-and-nfv-to-study_30.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5487577948001201739'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5487577948001201739'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/11/the-irony-of-using-sdn-and-nfv-to-study_30.html' title='The Irony of Using SDN and NFV to Study Legacy Network Technologies'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-3428957941700446309</id><published>2014-11-28T14:22:00.001-06:00</published><updated>2019-04-11T11:10:03.346-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='network security'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS'/><category scheme='http://www.blogger.com/atom/ns#' term='Routing Protocols'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='L3 glean'/><category scheme='http://www.blogger.com/atom/ns#' term='cisco'/><category scheme='http://www.blogger.com/atom/ns#' term='Layer 3 Switching'/><title type='text'>Mental Note: Tracking L3 Glean Attacks</title><content type='html'>Here's a handy debug command for tracking L3 Glean attacks on IOS based Cisco routers / L3 switches.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;debug platform packet all receive buffer&lt;/pre&gt;&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;show platform cpu packet buffered | i src|dst&lt;/pre&gt;&lt;br/&gt;From there, you can take the output, paste the contents into a file, then use some Linux foo to determine the attacker.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;cat file.txt | awk '{print $2}' | sort | uniq -c | sort&lt;/pre&gt;&lt;br/&gt;Supporting documentation: &lt;a href="http://www.cisco.com/c/en/us/support/docs/switches/catalyst-4000-series-switches/65591-cat4500-high-cpu.html#tool2" target="_blank"&gt;Built-in CPU Sniffer&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/3428957941700446309/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/11/mental-note-tracking-l3-glean-attacks_28.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3428957941700446309'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3428957941700446309'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/11/mental-note-tracking-l3-glean-attacks_28.html' title='Mental Note: Tracking L3 Glean Attacks'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-472659137309378065</id><published>2014-11-25T20:34:00.001-06:00</published><updated>2019-04-11T13:51:08.752-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Python Scripting'/><category scheme='http://www.blogger.com/atom/ns#' term='Software Defined Networking'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><title type='text'>pyMultiChange - SSH Script Update</title><content type='html'>I updated the ssh-multi.py script from my pyMultiChange repository. It's now fully functional and allows you to enter 'enable' mode on Cisco routers and switches. As I'm using the paramiko library to interact with routers and switches via SSH, I had to switch from using the 'exec_command' API to invoke_shell, send, and recv API's. It took a little more work - and I'm not completely thrilled with how the 'recv' API is implemented in paramiko, but it's what we have to work with for now.&lt;br /&gt;&lt;br /&gt;The pyMuliChange repository is available on my &lt;a href="https://github.com/jtdub/pyMultiChange" target="_blank"&gt;github&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-97ncQS9AbB0/XK-MlEGuXqI/AAAAAAAA2G8/g7VEqtihdCshc49iXTsg_w2r60picIxNACLcBGAs/s1600/Screen-Shot-2014-11-26-at-2.49.55-AM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="245" data-original-width="512" height="153" src="https://4.bp.blogspot.com/-97ncQS9AbB0/XK-MlEGuXqI/AAAAAAAA2G8/g7VEqtihdCshc49iXTsg_w2r60picIxNACLcBGAs/s320/Screen-Shot-2014-11-26-at-2.49.55-AM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/472659137309378065/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/11/pymultichange-ssh-script-update_25.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/472659137309378065'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/472659137309378065'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/11/pymultichange-ssh-script-update_25.html' title='pyMultiChange - SSH Script Update'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://4.bp.blogspot.com/-97ncQS9AbB0/XK-MlEGuXqI/AAAAAAAA2G8/g7VEqtihdCshc49iXTsg_w2r60picIxNACLcBGAs/s72-c/Screen-Shot-2014-11-26-at-2.49.55-AM.png' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5394321901604721784</id><published>2014-11-24T07:26:00.001-06:00</published><updated>2019-04-11T11:10:02.833-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Python Scripting'/><category scheme='http://www.blogger.com/atom/ns#' term='Software Defined Networking'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><title type='text'>Updated pyRouterLib and pyMultiChange</title><content type='html'>I've updated a two pieces of software that I've been writing and maintaining. The first is pyRouterLib. pyRouterLib is a library, written in Python, that takes the common functionality of managing a Cisco router or switch, via Python and makes it easy to implement.&lt;br/&gt;&lt;br/&gt;Here is a list of it's functionality and a brief description:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;User Credential Storage - This functionality is useful when scripting a task to run multiple commands on multiple devices. It will create and store your credentials in ~/.tacacslogin - which is admittedly insecure. I'll be working on something with a little more security when I have time.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Telnet Module - This module allows you to quickly define the telnet method as a means of logging in and managing a device. It should be fully functional, but hasn't been tested thoroughly, yet.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;SSH Module - This module allows you to quickly define the ssh method as a means of logging in and managing a device. Currently it has a limitation of not being able to execute the 'enable' command and enter your enable credentials. I'm still working on this functionality. This module should suite you fine if you don't need to enter enable mode or if you automatically login as a privileged user.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;SNMP Module - This module is a work in progress and doesn't have any functionality, yet.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;In addition to updating its functionality, I updated the documentation, that explains how to use it. I also have a test script with both telnet and ssh functionality enabled - for demo purposes.&lt;br/&gt;&lt;br/&gt;The second package that I updated with my pyMultiChange script. It's been updated to be fully integrated with the pyRouterLib library. I've also created two versions of the script. One for telnet and the second for ssh.&lt;br/&gt;&lt;br/&gt;Both can be downloaded from my Github account.&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;&lt;a title="pyRouterLib" href="https://github.com/jtdub/pyRouterLib" target="_blank"&gt;pyRouterLib&lt;/a&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;&lt;a title="pyMultiChange" href="https://github.com/jtdub/pyMultiChange" target="_blank"&gt;pyMultiChange&lt;/a&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5394321901604721784/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/11/updated-pyrouterlib-and-pymultichange_24.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5394321901604721784'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5394321901604721784'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/11/updated-pyrouterlib-and-pymultichange_24.html' title='Updated pyRouterLib and pyMultiChange'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-8392807734016848945</id><published>2014-11-20T20:38:00.001-06:00</published><updated>2019-04-11T11:10:02.578-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><title type='text'>Python with Multiple Threads</title><content type='html'>I have a need to have a script to execute the same task, among many devices, as close to the same time as possible. As a non-programmer, whom happens to write code in an effort to make my job easier, I thought the task would be easier than it actually is. Spawning multiple threads is pretty easy. However, hitting resource limits is a limiting factor - as is how you output your data.&lt;br/&gt;&lt;br/&gt;Here is an example of how I'm using BoundedSemaphores, within Python to limit the number of threads that I spawn.&lt;br/&gt;&lt;pre class="show-plain-default:true lang:python decode:true "&gt;#!/usr/bin/env python&lt;br/&gt;&lt;br/&gt;from threading import Thread&lt;br/&gt;from threading import BoundedSemaphore&lt;br/&gt;from os import system&lt;br/&gt;import time&lt;br/&gt;&lt;br/&gt;threads = []&lt;br/&gt;max_threads = 1&lt;br/&gt;sema = BoundedSemaphore(value=max_threads)&lt;br/&gt;hosts = ['host1', 'host2', 'host3', 'host4', 'host5', 'host6']&lt;br/&gt;&lt;br/&gt;def ping_pong(host, sema):&lt;br/&gt;	ping_pong_host = system('ping -c 100 -t 1 -m 1 %s &amp;gt; /dev/null 2&amp;gt;&amp;amp;1' % host)&lt;br/&gt;	sema.release()&lt;br/&gt;	&lt;br/&gt;	return ping_pong_host&lt;br/&gt;	&lt;br/&gt;if __name__ == '__main__':&lt;br/&gt;	print "Start: %s" % time.time()&lt;br/&gt;	print "Max Threads: %s" % max_threads&lt;br/&gt;	tr = 1&lt;br/&gt;	for host in hosts:&lt;br/&gt;		print "Thread: %s - %s" % (tr, time.time())&lt;br/&gt;		sema.acquire()&lt;br/&gt;		t = Thread(target=ping_pong, args=[host, sema])&lt;br/&gt;		t.start()&lt;br/&gt;		threads.append(t)&lt;br/&gt;		tr += 1&lt;br/&gt;	for t in threads:&lt;br/&gt;		t.join()&lt;br/&gt;	print "End: %s" % time.time()&lt;/pre&gt;&lt;br/&gt;With the 'max_threads' variable set to '1', here is the output:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;Start: 1416558663.05&lt;br/&gt;Max Threads: 1&lt;br/&gt;Thread: 1 - 1416558663.05&lt;br/&gt;Thread: 2 - 1416558663.05&lt;br/&gt;Thread: 3 - 1416558664.07&lt;br/&gt;Thread: 4 - 1416558665.08&lt;br/&gt;Thread: 5 - 1416558666.1&lt;br/&gt;Thread: 6 - 1416558667.12&lt;br/&gt;End: 1416558669.15&lt;/pre&gt;&lt;br/&gt;With the 'max_threads' variable set to '6', here is the output:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;Start: 1416558829.13&lt;br/&gt;Max Threads: 6&lt;br/&gt;Thread: 1 - 1416558829.13&lt;br/&gt;Thread: 2 - 1416558829.13&lt;br/&gt;Thread: 3 - 1416558829.13&lt;br/&gt;Thread: 4 - 1416558829.13&lt;br/&gt;Thread: 5 - 1416558829.13&lt;br/&gt;Thread: 6 - 1416558829.13&lt;br/&gt;End: 1416558835.23&lt;/pre&gt;&lt;br/&gt;With the max_threads set to one, it essentially disable's threading - in that it doesn't spawn multiple threads to complete a task. You can see that it took approximately five seconds to spawn all threads and another two seconds to complete the tasks.&lt;br/&gt;&lt;br/&gt;With the max_threads set to six, it spawned all threads in less than a millisecond and took approximately six seconds to complete the tasks.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/8392807734016848945/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/11/python-with-multiple-threads_20.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8392807734016848945'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8392807734016848945'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/11/python-with-multiple-threads_20.html' title='Python with Multiple Threads'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4197343610469312669</id><published>2014-10-01T07:09:00.001-05:00</published><updated>2019-04-11T11:10:02.322-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='IOS'/><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='Software Defined Networking'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Virtualization'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNP SP Study Notes'/><category scheme='http://www.blogger.com/atom/ns#' term='KVM'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS-XE'/><category scheme='http://www.blogger.com/atom/ns#' term='openvswitch'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS-XR'/><title type='text'>Connecting Your Virtual IOS-XE and IOX-XR Lab To Your Physical Lab</title><content type='html'>I've been building and using virtual IOS images, such as IOS-XE (CSR1000v) and IOS-XRv for a while now. It's been great to just spin up a lab, based upon what ever topology that I want, not have to worry about a mess of cables, or hear the mildly annoying hum of a rack of routers and switches running up my electric bill.&lt;br/&gt;&lt;br/&gt;However, there are instances where running a physical lab makes sense. For example, the Cisco Switching images aren't where they need to be to be able to simulate live environments. There are a host of quirks, from creating bridging loops easily and crashing the images to FHRP's not having the desired functionality. Then there's the aspect of only being able to run so many virtual images on a single computer. Every now and then, I want to create a larger topology. I already have four switches and ten routers, so why not integrate my virtual lab environment and physical lab environment?&lt;br/&gt;&lt;br/&gt;Recently, that's what I set out to do. I'm a Linux guy, so I've been using KVM as my hypervisor, for running my IOS images. I intended to continue doing that. The Linux computer that I'm currently running is Fedora 19. I know, I need to update it, but I've been too lazy to rebuild it lately. So, my examples are based on Fedora 19. If you're running a newer version of Fedora (20, soon to be 21), CentOS 7, or even Ubuntu, you'll need to modify your KVM configuration slightly. Ultimately, it should be compatible.&lt;br/&gt;&lt;br/&gt;On my Fedora 19 computer, I'm using the qemu-kvm and openvswitch packages.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;[root@sgnhv ~]# rpm -qa | egrep 'openvswitch|qemu-kvm'&lt;br/&gt;openvswitch-test-2.0.1-1.fc19.noarch&lt;br/&gt;openvswitch-controller-2.0.1-1.fc19.x86_64&lt;br/&gt;python-openvswitch-2.0.1-1.fc19.noarch&lt;br/&gt;openvswitch-2.0.1-1.fc19.x86_64&lt;br/&gt;qemu-kvm-1.4.2-15.fc19.x86_64&lt;/pre&gt;&lt;br/&gt;The first thing that you want to do is create a couple of init script for openvswitch. These scripts will allow you to create and tear down tap (virtual nics) interfaces, which your virtual IOS images will attach to on boot up.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;[root@sgnhv ~]# cat /usr/local/sbin/ovs-ifup &lt;br/&gt;#!/bin/sh&lt;br/&gt;&lt;br/&gt;switch='ovs-br0'&lt;br/&gt;/sbin/ifconfig $1 0.0.0.0 up&lt;br/&gt;ovs-vsctl add-port ${switch} $1&lt;br/&gt;[root@sgnhv ~]# cat /usr/local/sbin/ovs-ifdown&lt;br/&gt;#!/bin/sh&lt;br/&gt;&lt;br/&gt;switch='ovs-br0'&lt;br/&gt;/sbin/ifconfig $1 0.0.0.0 down&lt;br/&gt;ovs-vsctl del-port ${switch} $1&lt;/pre&gt;&lt;br/&gt;Next, you need to create a bridge within openvswitch, and attach it to an unused physical nic. In my Fedora computer, I have my primary nic (p3p1), which is has the main IP Address that I use to access the computer remotely, then I have a secondary nic (enps4s0u1) that I'm allocating to openvswitch.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;** Physical NIC's on my Fedora Computer&lt;br/&gt;[root@sgnhv ~]# ip addr show p3p1&lt;br/&gt;2: p3p1: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000&lt;br/&gt;    link/ether 80:ee:73:53:f5:47 brd ff:ff:ff:ff:ff:ff&lt;br/&gt;    inet6 fe80::82ee:73ff:fe53:f547/64 scope link &lt;br/&gt;       valid_lft forever preferred_lft forever&lt;br/&gt;[root@sgnhv ~]# ip addr show enp4s0u1&lt;br/&gt;3: enp4s0u1: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000&lt;br/&gt;    link/ether 00:0a:cd:20:5f:be brd ff:ff:ff:ff:ff:ff&lt;br/&gt;    inet6 fe80::20a:cdff:fe20:5fbe/64 scope link &lt;br/&gt;       valid_lft forever preferred_lft forever&lt;br/&gt;&lt;br/&gt;** Creating a bridge and allocating a physical NIC to the bridge&lt;br/&gt;[root@sgnhv ~]# ovs-vsctl show&lt;br/&gt;a8b9ccc7-fa12-46a1-a6c0-acd6dddf49e3&lt;br/&gt;    ovs_version: "2.0.1"&lt;br/&gt;[root@sgnhv ~]# ovs-vsctl add-br ovs-br0&lt;br/&gt;[root@sgnhv ~]# ovs-vsctl add-port ovs-br0 enp4s0u1&lt;br/&gt;[root@sgnhv ~]# ovs-vsctl show&lt;br/&gt;a8b9ccc7-fa12-46a1-a6c0-acd6dddf49e3&lt;br/&gt;    Bridge "ovs-br0"&lt;br/&gt;        Port "enp4s0u1"&lt;br/&gt;            Interface "enp4s0u1"&lt;br/&gt;        Port "ovs-br0"&lt;br/&gt;            Interface "ovs-br0"&lt;br/&gt;                type: internal&lt;br/&gt;    ovs_version: "2.0.1"&lt;/pre&gt;&lt;br/&gt;At this point, my physical nic, enp4s0u1, is already attached to a switch port on my physical lab. The switch port on the physical lab is in a trunking state. This is all you have to do for openvswitch, as it will automatically trunk the interface to the physical nic.&lt;br/&gt;&lt;br/&gt;Next, It's time to spin up my virtual IOS image. Here is my configuration:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/ios-xrv-test.img \&lt;br/&gt;-serial telnet::8001,server,nowait \&lt;br/&gt;-net nic,model=virtio,vlan=2,macaddr=80:02:00:00:80:01 \&lt;br/&gt;-net tap,ifname=tap8001,vlan=2,script=/usr/local/sbin/ovs-ifup,downscript=/usr/local/sbin/ovs-ifdown \&lt;br/&gt;-net nic,model=virtio,macaddr=80:01:00:00:11:00 \&lt;br/&gt;-net tap,ifname=1g000,script=/usr/local/sbin/ovs-ifup,downscript=/usr/local/sbin/ovs-ifdown &lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;On the first line, I simply tell KVM to create an instance with 2.5 GB of RAM and pointed to the image:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/ios-xrv-test.img&lt;/pre&gt;&lt;br/&gt;On the second line, I told KVM to create a serial connection and attach it to TCP port 8001 on the hypervisor. You can think of this as a console port on your physical gear.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;-serial telnet::8001,server,nowait&lt;/pre&gt;&lt;br/&gt;The third and fourth line belong together. These two lines specify my MGMT interface on the IOS-XRv device, I'm attaching it to vlan 2, as my current lab Layer 2 management is on vlan 2. I'm also creating a tap interface called 'tap8001'. Notice that the ovs-ifup and ovs-ifdown scripts are called to create and tear down the interface.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;-net nic,model=virtio,vlan=2,macaddr=80:02:00:00:80:01 \&lt;br/&gt;-net tap,ifname=tap8001,vlan=2,script=/usr/local/sbin/ovs-ifup,downscript=/usr/local/sbin/ovs-ifdown&lt;/pre&gt;&lt;br/&gt;Finally, the last two lines create interface gig0/0/0/0 on the IOS-XRv image. On these two lines, I don't specify to attach to any specific vlans, as I'll be creating sub interfaces and creating a router on a stick. It also calls the ovs-ifup and ovs-ifdown scripts to create and tear down the tap interface '1g000'.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;-net nic,model=virtio,macaddr=80:01:00:00:11:00 \&lt;br/&gt;-net tap,ifname=1g000,script=/usr/local/sbin/ovs-ifup,downscript=/usr/local/sbin/ovs-ifdown&lt;/pre&gt;&lt;br/&gt;The config executes without any errors.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;[root@sgnhv ~]# qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/ios-xrv-test.img \&lt;br/&gt;&amp;gt; -serial telnet::8001,server,nowait \&lt;br/&gt;&amp;gt; -net nic,model=virtio,vlan=2,macaddr=80:02:00:00:80:01 \&lt;br/&gt;&amp;gt; -net tap,ifname=tap8001,vlan=2,script=/usr/local/sbin/ovs-ifup,downscript=/usr/local/sbin/ovs-ifdown \&lt;br/&gt;&amp;gt; -net nic,model=virtio,macaddr=80:01:00:00:11:00 \&lt;br/&gt;&amp;gt; -net tap,ifname=1g000,script=/usr/local/sbin/ovs-ifup,downscript=/usr/local/sbin/ovs-ifdown &lt;br/&gt;QEMU 1.4.2 monitor - type 'help' for more information&lt;br/&gt;(qemu) &lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;You can see that the ovs-ifup and ovs-ifdown scripts work as intended.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;[root@sgnhv ~]# ovs-vsctl show&lt;br/&gt;a8b9ccc7-fa12-46a1-a6c0-acd6dddf49e3&lt;br/&gt;    Bridge "ovs-br0"&lt;br/&gt;        Port "1g000"&lt;br/&gt;            Interface "1g000"&lt;br/&gt;        Port "tap8001"&lt;br/&gt;            Interface "tap8001"&lt;br/&gt;        Port "enp4s0u1"&lt;br/&gt;            Interface "enp4s0u1"&lt;br/&gt;        Port "ovs-br0"&lt;br/&gt;            Interface "ovs-br0"&lt;br/&gt;                type: internal&lt;br/&gt;    ovs_version: "2.0.1"&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;I'm also able to telnet to TCP port 8001 and gain access to the device.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;[root@sgnhv ~]# telnet localhost 8001&lt;br/&gt;Trying ::1...&lt;br/&gt;telnet: connect to address ::1: Connection refused&lt;br/&gt;Trying 127.0.0.1...&lt;br/&gt;Connected to localhost.&lt;br/&gt;Escape character is '^]'.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;User Access Verification&lt;br/&gt;&lt;br/&gt;Username: admin&lt;br/&gt;Password: &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;RP/0/0/CPU0:ios#&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;From here, I can configure the device to participate in my existing physical lab. In this simple test, I'll configure gig0/0/0/0.100 to connect to a physical router with the IP Address of 10.0.100.2, join OSPF, and MPLS LDP.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;RP/0/0/CPU0:ios#config t&lt;br/&gt;Wed Oct  1 17:05:46.748 UTC&lt;br/&gt;RP/0/0/CPU0:ios(config)#hostname xr1&lt;br/&gt;RP/0/0/CPU0:ios(config)#commit&lt;br/&gt;Wed Oct  1 17:06:02.507 UTC&lt;br/&gt;RP/0/0/CPU0:Oct  1 17:06:02.537 : ike[225]: %SECURITY-IKE-4-WARNING : You may want to configure a domain-name &lt;br/&gt;RP/0/0/CPU0:xr1(config)#int lo0&lt;br/&gt;RP/0/0/CPU0:xr1(config-if)#ipv4 address 10.10.100.1/32&lt;br/&gt;RP/0/0/CPU0:xr1(config-if)#commit&lt;br/&gt;Wed Oct  1 17:06:14.466 UTC&lt;br/&gt;RP/0/0/CPU0:xr1(config-if)#no shut&lt;br/&gt;RP/0/0/CPU0:xr1(config-if)#&lt;br/&gt;RP/0/0/CPU0:xr1(config-if)#&lt;br/&gt;RP/0/0/CPU0:xr1(config-if)#exit   &lt;br/&gt;RP/0/0/CPU0:xr1(config)#int gigabitEthernet 0/0/0/0 &lt;br/&gt;RP/0/0/CPU0:xr1(config-if)#no shut&lt;br/&gt;RP/0/0/CPU0:xr1(config-if)#exit&lt;br/&gt;RP/0/0/CPU0:xr1(config)#int gigabitEthernet 0/0/0/0.100&lt;br/&gt;RP/0/0/CPU0:xr1(config-subif)#dot1q vlan 100&lt;br/&gt;RP/0/0/CPU0:xr1(config-subif)#ipv4 address 10.0.100.1/30&lt;br/&gt;RP/0/0/CPU0:xr1(config-subif)#no shut&lt;br/&gt;RP/0/0/CPU0:xr1(config-subif)#commit&lt;br/&gt;Wed Oct  1 17:06:48.313 UTC&lt;br/&gt;RP/0/0/CPU0:Oct  1 17:06:48.323 : ifmgr[223]: %PKT_INFRA-LINK-3-UPDOWN : Interface GigabitEthernet0/0/0/0, changed state to Down &lt;br/&gt;RP/0/0/CPU0:Oct  1 17:06:48.353 : ifmgr[223]: %PKT_INFRA-LINK-3-UPDOWN : Interface GigabitEthernet0/0/0/0, changed state to Up &lt;br/&gt;RP/0/0/CPU0:xr1(config-subif)#end&lt;br/&gt;RP/0/0/CPU0:xr1#ping 10.0.100.1&lt;br/&gt;Wed Oct  1 17:06:59.503 UTC&lt;br/&gt;Type escape sequence to abort.&lt;br/&gt;Sending 5, 100-byte ICMP Echos to 10.0.100.1, timeout is 2 seconds:&lt;br/&gt;!!!!!&lt;br/&gt;Success rate is 100 percent (5/5), round-trip min/avg/max = 1/1/1 ms&lt;br/&gt;RP/0/0/CPU0:xr1#ping 10.0.100.2&lt;br/&gt;Wed Oct  1 17:07:01.923 UTC&lt;br/&gt;Type escape sequence to abort.&lt;br/&gt;Sending 5, 100-byte ICMP Echos to 10.0.100.2, timeout is 2 seconds:&lt;br/&gt;!!!!!&lt;br/&gt;Success rate is 100 percent (5/5), round-trip min/avg/max = 1/1/1 ms&lt;br/&gt;RP/0/0/CPU0:xr1#config t&lt;br/&gt;Wed Oct  1 17:07:06.132 UTC&lt;br/&gt;RP/0/0/CPU0:xr1(config)#router ospf 64512&lt;br/&gt;RP/0/0/CPU0:xr1(config-ospf)#auto-cost reference-bandwidth 100&lt;br/&gt;RP/0/0/CPU0:xr1(config-ospf)#area 0&lt;br/&gt;RP/0/0/CPU0:xr1(config-ospf-ar)#interface gigabitEthernet 0/0/0/0.100&lt;br/&gt;RP/0/0/CPU0:xr1(config-ospf-ar-if)#ne&lt;br/&gt;neighbor  network  &lt;br/&gt;RP/0/0/CPU0:xr1(config-ospf-ar-if)#network point-to-point &lt;br/&gt;RP/0/0/CPU0:xr1(config-ospf-ar-if)#exit&lt;br/&gt;RP/0/0/CPU0:xr1(config-ospf-ar)#interface lo0&lt;br/&gt;RP/0/0/CPU0:xr1(config-ospf-ar-if)#passive &lt;br/&gt;RP/0/0/CPU0:xr1(config-ospf-ar-if)#commit&lt;br/&gt;Wed Oct  1 17:07:44.640 UTC&lt;br/&gt;RP/0/0/CPU0:xr1(config-ospf-ar-if)#end&lt;br/&gt;RP/0/0/CPU0:xr1#sh ospf neighbor &lt;br/&gt;Wed Oct  1 17:07:50.749 UTC&lt;br/&gt;&lt;br/&gt;* Indicates MADJ interface&lt;br/&gt;&lt;br/&gt;Neighbors for OSPF 64512&lt;br/&gt;&lt;br/&gt;Neighbor ID     Pri   State           Dead Time   Address         Interface&lt;br/&gt;10.10.10.1      1     FULL/  -        00:00:39    10.0.100.2      GigabitEthernet0/0/0/0.100&lt;br/&gt;    Neighbor is up for 00:00:03&lt;br/&gt;&lt;br/&gt;Total neighbor count: 1&lt;br/&gt;RP/0/0/CPU0:xr1#config t&lt;br/&gt;Wed Oct  1 17:07:53.169 UTC&lt;br/&gt;RP/0/0/CPU0:xr1(config)#mpls ldp&lt;br/&gt;RP/0/0/CPU0:xr1(config-ldp)#interface gigabitEthernet 0/0/0/0.100&lt;br/&gt;RP/0/0/CPU0:xr1(config-ldp-if)#commit&lt;br/&gt;Wed Oct  1 17:08:06.268 UTC&lt;br/&gt;RP/0/0/CPU0:xr1(config-ldp-if)#end&lt;br/&gt;RP/0/0/CPU0:xr1#sh mpls ldp neighbor &lt;br/&gt;Wed Oct  1 17:08:17.277 UTC&lt;br/&gt;&lt;br/&gt;Peer LDP Identifier: 10.10.10.1:0&lt;br/&gt;  TCP connection: 10.10.10.1:646 - 10.10.100.1:44516&lt;br/&gt;  Graceful Restart: No&lt;br/&gt;  Session Holdtime: 180 sec&lt;br/&gt;  State: Oper; Msgs sent/rcvd: 15/15; Downstream-Unsolicited&lt;br/&gt;  Up time: 00:00:08&lt;br/&gt;  LDP Discovery Sources:&lt;br/&gt;    GigabitEthernet0/0/0/0.100&lt;br/&gt;  Addresses bound to this peer:&lt;br/&gt;    10.0.10.1        10.0.10.5        10.0.10.9        10.0.100.2       &lt;br/&gt;    10.0.101.2       10.10.10.1       &lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;And there you have it. My virtual lab has successfully been integrated to my physical lab.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4197343610469312669/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/10/connecting-your-virtual-ios-xe-and-iox_1.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4197343610469312669'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4197343610469312669'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/10/connecting-your-virtual-ios-xe-and-iox_1.html' title='Connecting Your Virtual IOS-XE and IOX-XR Lab To Your Physical Lab'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1410589305390219975</id><published>2014-07-27T18:34:00.001-05:00</published><updated>2019-04-11T11:10:02.067-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Python Scripting'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='System Administration'/><category scheme='http://www.blogger.com/atom/ns#' term='Miscellaneous Hacking'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><title type='text'>Working with Cisco Routers and Switches with Python</title><content type='html'>I've updated the pyMultiChange.py script. It now is fully functional, with the addition of enable mode functionality. With this script, you can take a list of routers and switches from a text file and execute a series of commands, from a text file, all from SSH. For example:&lt;br/&gt;&lt;br/&gt;Here is the usage output, if you don't select the required arguments:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;$ ./pyMultiChange.py&lt;br/&gt;usage: pyMultiChange.py [-h] -d HOSTS -c COMMANDS [-v [VERBOSE]]&lt;br/&gt;pyMultiChange.py: error: argument -d/--hosts is required&lt;/pre&gt;&lt;br/&gt;Here is the usage output, without verbose / debugging mode:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;$ ./pyMultiChange.py -d hosts.txt -c commands.txt&lt;br/&gt;Using existing credentials file.&lt;br/&gt;*** SSH connection established to 172.16.1.1&lt;br/&gt;*** Executing Command: sh ver&lt;br/&gt;*** Closing Connection to 172.16.1.1&lt;br/&gt;Using existing credentials file.&lt;br/&gt;*** SSH connection established to 172.16.1.6&lt;br/&gt;*** Executing Command: sh ver&lt;br/&gt;*** Closing Connection to 172.16.1.6&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;Here is the usage output, with verbose / debugging mode:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;$ ./pyMultiChange.py -d hosts.txt -c commands.txt -v&lt;br/&gt;Using existing credentials file.&lt;br/&gt;DEBUG:paramiko.transport:starting thread (client mode): 0x78b9510L&lt;br/&gt;INFO:paramiko.transport:Connected (version 2.0, client Cisco-1.25)&lt;br/&gt;DEBUG:paramiko.transport:kex algos:[u'diffie-hellman-group-exchange-sha1', u'diffie-hellman-group14-sha1', u'diffie-hellman-group1-sha1'] server key:[u'ssh-rsa'] client encrypt:[u'aes128-cbc', u'3des-cbc', u'aes192-cbc', u'aes256-cbc'] server encrypt:[u'aes128-cbc', u'3des-cbc', u'aes192-cbc', u'aes256-cbc'] client mac:[u'hmac-sha1', u'hmac-sha1-96', u'hmac-md5', u'hmac-md5-96'] server mac:[u'hmac-sha1', u'hmac-sha1-96', u'hmac-md5', u'hmac-md5-96'] client compress:[u'none'] server compress:[u'none'] client lang:[u''] server lang:[u''] kex follows?False&lt;br/&gt;DEBUG:paramiko.transport:Ciphers agreed: local=aes128-cbc, remote=aes128-cbc&lt;br/&gt;DEBUG:paramiko.transport:using kex diffie-hellman-group1-sha1; server key type ssh-rsa; cipher: local aes128-cbc, remote aes128-cbc; mac: local hmac-sha1, remote hmac-sha1; compression: local none, remote none&lt;br/&gt;DEBUG:paramiko.transport:Switch to new keys ...&lt;br/&gt;DEBUG:paramiko.transport:Adding ssh-rsa host key for 172.16.1.1: d9df7efac164fbf7828fa284d5a31e63&lt;br/&gt;DEBUG:paramiko.transport:userauth is OK&lt;br/&gt;INFO:paramiko.transport:Authentication (password) successful!&lt;br/&gt;*** SSH connection established to 172.16.1.1&lt;br/&gt;DEBUG:paramiko.transport:[chan 1] Max packet in: 34816 bytes&lt;br/&gt;DEBUG:paramiko.transport:[chan 1] Max packet out: 4096 bytes&lt;br/&gt;INFO:paramiko.transport:Secsh channel 1 opened.&lt;br/&gt;DEBUG:paramiko.transport:[chan 1] Sesch channel 1 request ok&lt;br/&gt;DEBUG:paramiko.transport:[chan 1] Sesch channel 1 request ok&lt;br/&gt;*** Interactive SSH session established&lt;br/&gt;*** Sending enable password&lt;br/&gt;*** Successfully entered enable mode&lt;br/&gt;*** Executing Command: sh ver&lt;br/&gt;terminal length 0&lt;br/&gt;darkstar#sh ver&lt;br/&gt;Cisco IOS Software, C880 Software (C880DATA-UNIVERSALK9-M), Version 15.0(1)M7, RELEASE SOFTWARE (fc2)&lt;br/&gt;Technical Support: http://www.cisco.com/techsupport&lt;br/&gt;Copyright (c) 1986-2011 by Cisco Systems, Inc.&lt;br/&gt;Compiled Fri 05-Aug-11 02:01 by prod_rel_team&lt;br/&gt;&lt;br/&gt;ROM: System Bootstrap, Version 12.4(22r)YB5, RELEASE SOFTWARE (fc1)&lt;br/&gt;&lt;br/&gt;darkstar uptime is 10 weeks, 6 days, 12 minutes&lt;br/&gt;System returned to ROM by power-on&lt;br/&gt;System restarted at 23:21:02 CST Mon May 12 2014&lt;br/&gt;System image file is "flash:c880data-universalk9-mz.150-1.M7.bin"&lt;br/&gt;Last reload type: Normal Reload&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;This product contains cryptographic features and is subject to United&lt;br/&gt;States and local country laws governing import, export, transfer and&lt;br/&gt;use. Delivery of Cisco cryptographic products does not imply&lt;br/&gt;third-party authority to import, export, distribute or use encryption.&lt;br/&gt;Importers, exporters, distributors and users are responsible for&lt;br/&gt;compliance with U.S. and local country laws. By using this product you&lt;br/&gt;agree to comply with applicable laws and regulations. If you are unable&lt;br/&gt;to comply with U.S. and local laws, return this product immediately.&lt;br/&gt;&lt;br/&gt;A summary of U.S. laws governing Cisco cryptographic products may be found at:&lt;br/&gt;http://www.cisco.com/wwl/export/crypto/tool/stqrg.html&lt;br/&gt;&lt;br/&gt;If you require further assistance please contact us by sending email to&lt;br/&gt;export@cisco.com.&lt;br/&gt;&lt;br/&gt;Cisco 881 (MPC8300) processor (revision 1.0) with 236544K/25600K bytes of memory.&lt;br/&gt;Processor board ID FTX16038388&lt;br/&gt;&lt;br/&gt;5 FastEthernet interfaces&lt;br/&gt;1 Gigabit Ethernet interface&lt;br/&gt;1 terminal line&lt;br/&gt;1 Virtual Private Network (VPN) Module&lt;br/&gt;1 cisco Embedded AP (s)&lt;br/&gt;256K bytes of non-volatile configuration memory.&lt;br/&gt;126000K bytes of ATA CompactFlash (Read/Write)&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;License Info:&lt;br/&gt;&lt;br/&gt;License UDI:&lt;br/&gt;&lt;br/&gt;-------------------------------------------------&lt;br/&gt;Device#	  PID			SN&lt;br/&gt;-------------------------------------------------&lt;br/&gt;*0  	  CISCO881W-GN-A-K9     FTX16038388     &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;License Information for 'c880-data'&lt;br/&gt;    License Level: advsecurity   Type: Permanent&lt;br/&gt;    Next reboot license Level: advsecurity&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Configuration register is 0x2102&lt;br/&gt;&lt;br/&gt;darkstar#&lt;br/&gt;*** Closing Connection to 172.16.1.1&lt;br/&gt;Using existing credentials file.&lt;br/&gt;DEBUG:paramiko.transport:EOF in transport thread&lt;br/&gt;DEBUG:paramiko.transport:starting thread (client mode): 0x78b9250L&lt;br/&gt;INFO:paramiko.transport:Connected (version 2.0, client Cisco-1.25)&lt;br/&gt;DEBUG:paramiko.transport:kex algos:[u'diffie-hellman-group1-sha1'] server key:[u'ssh-rsa'] client encrypt:[u'aes128-cbc', u'3des-cbc', u'aes192-cbc', u'aes256-cbc'] server encrypt:[u'aes128-cbc', u'3des-cbc', u'aes192-cbc', u'aes256-cbc'] client mac:[u'hmac-sha1', u'hmac-sha1-96', u'hmac-md5', u'hmac-md5-96'] server mac:[u'hmac-sha1', u'hmac-sha1-96', u'hmac-md5', u'hmac-md5-96'] client compress:[u'none'] server compress:[u'none'] client lang:[u''] server lang:[u''] kex follows?False&lt;br/&gt;DEBUG:paramiko.transport:Ciphers agreed: local=aes128-cbc, remote=aes128-cbc&lt;br/&gt;DEBUG:paramiko.transport:using kex diffie-hellman-group1-sha1; server key type ssh-rsa; cipher: local aes128-cbc, remote aes128-cbc; mac: local hmac-sha1, remote hmac-sha1; compression: local none, remote none&lt;br/&gt;DEBUG:paramiko.transport:Switch to new keys ...&lt;br/&gt;DEBUG:paramiko.transport:Adding ssh-rsa host key for 172.16.1.6: 917d0abc26c16df9860f57e3a248db1c&lt;br/&gt;DEBUG:paramiko.transport:userauth is OK&lt;br/&gt;INFO:paramiko.transport:Authentication (password) successful!&lt;br/&gt;*** SSH connection established to 172.16.1.6&lt;br/&gt;DEBUG:paramiko.transport:[chan 1] Max packet in: 34816 bytes&lt;br/&gt;DEBUG:paramiko.transport:[chan 1] Max packet out: 4096 bytes&lt;br/&gt;INFO:paramiko.transport:Secsh channel 1 opened.&lt;br/&gt;DEBUG:paramiko.transport:[chan 1] Sesch channel 1 request ok&lt;br/&gt;DEBUG:paramiko.transport:[chan 1] Sesch channel 1 request ok&lt;br/&gt;*** Interactive SSH session established&lt;br/&gt;*** Sending enable password&lt;br/&gt;*** Successfully entered enable mode&lt;br/&gt;*** Executing Command: sh ver&lt;br/&gt;terminal length 0&lt;br/&gt;sgncs1#sh ver&lt;br/&gt;Cisco IOS Software, C3550 Software (C3550-IPSERVICESK9-M), Version 12.2(44)SE6, RELEASE SOFTWARE (fc1)&lt;br/&gt;Copyright (c) 1986-2009 by Cisco Systems, Inc.&lt;br/&gt;Compiled Mon 09-Mar-09 20:28 by gereddy&lt;br/&gt;Image text-base: 0x00003000, data-base: 0x012A99FC&lt;br/&gt;&lt;br/&gt;ROM: Bootstrap program is C3550 boot loader&lt;br/&gt;&lt;br/&gt;sgncs1 uptime is 5 weeks, 2 days, 20 hours, 12 minutes&lt;br/&gt;System returned to ROM by power-on&lt;br/&gt;System restarted at 03:21:32 CST Fri Jun 20 2014&lt;br/&gt;System image file is "flash:c3550-ipservicesk9-mz.122-44.SE6.bin"&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;This product contains cryptographic features and is subject to United&lt;br/&gt;States and local country laws governing import, export, transfer and&lt;br/&gt;use. Delivery of Cisco cryptographic products does not imply&lt;br/&gt;third-party authority to import, export, distribute or use encryption.&lt;br/&gt;Importers, exporters, distributors and users are responsible for&lt;br/&gt;compliance with U.S. and local country laws. By using this product you&lt;br/&gt;agree to comply with applicable laws and regulations. If you are unable&lt;br/&gt;to comply with U.S. and local laws, return this product immediately.&lt;br/&gt;&lt;br/&gt;A summary of U.S. laws governing Cisco cryptographic products may be found at:&lt;br/&gt;http://www.cisco.com/wwl/export/crypto/tool/stqrg.html&lt;br/&gt;&lt;br/&gt;If you require further assistance please contact us by sending email to&lt;br/&gt;export@cisco.com.&lt;br/&gt;&lt;br/&gt;Cisco WS-C3550-24 (PowerPC) processor (revision G0) with 65526K/8192K bytes of memory.&lt;br/&gt;Processor board ID CHK0644W0KC&lt;br/&gt;Last reset from warm-reset&lt;br/&gt;Running Layer2/3 Switching Image&lt;br/&gt;&lt;br/&gt;Ethernet-controller 1 has 12 Fast Ethernet/IEEE 802.3 interfaces&lt;br/&gt;&lt;br/&gt;Ethernet-controller 2 has 12 Fast Ethernet/IEEE 802.3 interfaces&lt;br/&gt;&lt;br/&gt;Ethernet-controller 3 has 1 Gigabit Ethernet/IEEE 802.3 interface&lt;br/&gt;&lt;br/&gt;Ethernet-controller 4 has 1 Gigabit Ethernet/IEEE 802.3 interface&lt;br/&gt;&lt;br/&gt;24 FastEthernet interfaces&lt;br/&gt;2 Gigabit Ethernet interfaces&lt;br/&gt;&lt;br/&gt;The password-recovery mechanism is enabled.&lt;br/&gt;384K bytes of flash-simulated NVRAM.&lt;br/&gt;Base ethernet MAC Address: 00:0B:46:FE:D5:80&lt;br/&gt;Motherboard assembly number: 73-5700-09&lt;br/&gt;Power supply part number: 34-0966-02&lt;br/&gt;Motherboard serial number: CAT064307TM&lt;br/&gt;Power supply serial number: LIT063501PN&lt;br/&gt;Model revision number: G0&lt;br/&gt;Motherboard revision number: A0&lt;br/&gt;Model number: WS-C3550-24-SMI&lt;br/&gt;System serial number: CHK0644W0KC&lt;br/&gt;Configuration register is 0x10F&lt;br/&gt;&lt;br/&gt;sgncs1#&lt;br/&gt;*** Closing Connection to 172.16.1.6&lt;br/&gt;DEBUG:paramiko.transport:EOF in transport thread&lt;/pre&gt;&lt;br/&gt;Finally, here is the code:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;#!/usr/bin/env python&lt;br/&gt;&lt;br/&gt;from pyRouterLib import *&lt;br/&gt;import os, argparse, paramiko, time&lt;br/&gt;&lt;br/&gt;''' Define hosts file, command file, verbose variables '''&lt;br/&gt;hosts_file = ''&lt;br/&gt;cmd_file = ''&lt;br/&gt;verbose = False&lt;br/&gt;&lt;br/&gt;def arguments():&lt;br/&gt;	''' Function to define the script command line arguments '''&lt;br/&gt;	global hosts_file, cmd_file, verbose&lt;br/&gt;	&lt;br/&gt;	parser = argparse.ArgumentParser(description='A Python implementation of MultiChange, which allows you to make mass changes to routers and switches via SSH.')&lt;br/&gt;	parser.add_argument('-d', '--hosts', help='Specify a host file', required=True)&lt;br/&gt;	parser.add_argument('-c', '--commands', help='Specify a commands file', required=True)&lt;br/&gt;	parser.add_argument('-v', '--verbose', nargs='?', default=False, help='Enables a verbose debugging mode')&lt;br/&gt;&lt;br/&gt;	args = vars(parser.parse_args())&lt;br/&gt;&lt;br/&gt;	if args['hosts']:&lt;br/&gt;		hosts_file = args['hosts']&lt;br/&gt;	if args['commands']:&lt;br/&gt;		cmd_file = args['commands']&lt;br/&gt;	if args['verbose'] == None:&lt;br/&gt;		verbose = True&lt;br/&gt;	&lt;br/&gt;	return hosts_file, cmd_file, verbose&lt;br/&gt;&lt;br/&gt;arguments()&lt;br/&gt;&lt;br/&gt;''' open the hosts file and commands file and execute each command on every host '''&lt;br/&gt;if os.path.isfile(hosts_file):&lt;br/&gt;	hosts = open(hosts_file, 'r')&lt;br/&gt;	for host in hosts:&lt;br/&gt;		host = host.strip("\n")&lt;br/&gt;		&lt;br/&gt;		''' use pyRouterLib to grab the user authentication credentials '''&lt;br/&gt;		rlib = pyRouterLib(host)&lt;br/&gt;		creds = rlib.get_creds()&lt;br/&gt;		username = creds[0]&lt;br/&gt;		password = creds[1]&lt;br/&gt;		enable = creds[2]&lt;br/&gt;		&lt;br/&gt;		''' Enable verbose debugging '''&lt;br/&gt;		if verbose:&lt;br/&gt;			rlib.debug()&lt;br/&gt;			&lt;br/&gt;		remoteConnectionSetup = paramiko.SSHClient()&lt;br/&gt;		remoteConnectionSetup.set_missing_host_key_policy(paramiko.AutoAddPolicy())&lt;br/&gt;		remoteConnectionSetup.connect(host, username=username, password=password, allow_agent=False, look_for_keys=False)&lt;br/&gt;		print "*** SSH connection established to %s" % host&lt;br/&gt;		remoteConnection = remoteConnectionSetup.invoke_shell()&lt;br/&gt;		if verbose:&lt;br/&gt;			print "*** Interactive SSH session established"&lt;br/&gt;		&lt;br/&gt;		time.sleep(1)&lt;br/&gt;		is_enable = remoteConnection.recv(1000)&lt;br/&gt;		if "#" not in is_enable:&lt;br/&gt;			remoteConnection.send("enable\n")&lt;br/&gt;			time.sleep(1)&lt;br/&gt;			if_enable = remoteConnection.recv(1000)&lt;br/&gt;			if "Password:" in if_enable:&lt;br/&gt;				if verbose:&lt;br/&gt;					print "*** Sending enable password"&lt;br/&gt;				remoteConnection.send(enable)&lt;br/&gt;				remoteConnection.send("\n")&lt;br/&gt;		&lt;br/&gt;			time.sleep(2)&lt;br/&gt;			is_enable = remoteConnection.recv(1000)&lt;br/&gt;		&lt;br/&gt;			if "#" in is_enable:&lt;br/&gt;				if verbose:&lt;br/&gt;					print "*** Successfully entered enable mode"&lt;br/&gt;			&lt;br/&gt;				remoteConnection.send("terminal length 0\n")&lt;br/&gt;			else:&lt;br/&gt;				if verbose:&lt;br/&gt;					print "*** Entering enable mode was unsuccessful"&lt;br/&gt;		else:&lt;br/&gt;			remoteConnection.send("terminal length 0\n")&lt;br/&gt;			if verbose:&lt;br/&gt;				print "*** User: %s already has enable privileges" % username&lt;br/&gt;		&lt;br/&gt;		cmds = open(cmd_file, 'r')&lt;br/&gt;		for command in cmds:&lt;br/&gt;			command = command.strip()&lt;br/&gt;			remoteConnection.send(command)&lt;br/&gt;			remoteConnection.send("\n")&lt;br/&gt;			print "*** Executing Command: %s" % command&lt;br/&gt;			if verbose:&lt;br/&gt;				time.sleep(2)&lt;br/&gt;				output = remoteConnection.recv(10000)&lt;br/&gt;				print output&lt;br/&gt;		cmds.close()&lt;br/&gt;		print "*** Closing Connection to %s" % host&lt;br/&gt;	hosts.close()&lt;/pre&gt;&lt;br/&gt;I'm going to continue working on building out the pyRouterLib module, as there is so much functionality that could be added to that. I'll keep you updated on the progress. As always, updates will be posted to my &lt;a href="https://github.com/jtdub/pyRouterLib" target="_blank"&gt;github&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/1410589305390219975/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/07/working-with-cisco-routers-and-switches_27.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1410589305390219975'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1410589305390219975'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/07/working-with-cisco-routers-and-switches_27.html' title='Working with Cisco Routers and Switches with Python'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1424584288481517983</id><published>2014-07-26T14:18:00.001-05:00</published><updated>2019-04-11T11:10:01.783-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Python Scripting'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><title type='text'>Updating my Python Scripts to access Cisco Devices</title><content type='html'>I've been working to migrate my python scripts, that access Cisco routers and switches to utilize SSH. I'm building out a 'pyRouterLib' class, that currently doesn't have much functionality, but I'm going to be building it out a lot more in the coming months. I'm also working on my pyMultiChange script, so that it utilizes SSH as well. Currently, the work is going well, although, there is still more work to go.&lt;br/&gt;&lt;br/&gt;Here is the pyRouterLib library:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;#!/usr/bin/env python&lt;br/&gt;&lt;br/&gt;class pyRouterLib:&lt;br/&gt;	'''&lt;br/&gt;	Requirments:&lt;br/&gt;	*** Modules:&lt;br/&gt;		os, getpass, paramiko, logging&lt;br/&gt;	'''&lt;br/&gt;	&lt;br/&gt;	def __init__(self, host):&lt;br/&gt;		self.host = host&lt;br/&gt;	&lt;br/&gt;	''' Granular debugging that assists in trouble shooting issues '''&lt;br/&gt;	def debug(self):&lt;br/&gt;		import logging&lt;br/&gt;		logging.basicConfig(level=logging.DEBUG)&lt;br/&gt;	&lt;br/&gt;	''' Define where to get user credentials '''&lt;br/&gt;	def get_creds(self):&lt;br/&gt;		from os.path import expanduser&lt;br/&gt;		import os.path&lt;br/&gt;		homeDir = expanduser("~")&lt;br/&gt;		credsFile = ".tacacslogin"&lt;br/&gt;		credsFile = homeDir + "/" + credsFile&lt;br/&gt;		&lt;br/&gt;		if os.path.isfile(credsFile):&lt;br/&gt;			print "Using existing credentials file."&lt;br/&gt;			credsFileLocation = open(credsFile)&lt;br/&gt;			self.username = credsFileLocation.readline()&lt;br/&gt;			self.username = self.username.strip('\n')&lt;br/&gt;			self.password = credsFileLocation.readline()&lt;br/&gt;			self.password = self.password.strip('\n')&lt;br/&gt;			self.enable = credsFileLocation.readline()&lt;br/&gt;			self.enable = self.enable.strip('\n')&lt;br/&gt;			credsFileLocation.close()&lt;br/&gt;		else:&lt;br/&gt;			import getpass&lt;br/&gt;			print "You have not created a credentials file. Lets create one..."&lt;br/&gt;			self.username = raw_input("Username: ")&lt;br/&gt;			self.password = getpass.getpass("User Password: ")&lt;br/&gt;			self.enable = getpass.getpass("Enable Password: ")&lt;br/&gt;			&lt;br/&gt;			authFile = open(credsFile, 'w+')&lt;br/&gt;			authFile.write(self.username + "\n")&lt;br/&gt;			authFile.write(self.password + "\n")&lt;br/&gt;			authFile.write(self.enable + "\n")&lt;br/&gt;			authFile.close()&lt;br/&gt;				&lt;br/&gt;			print "Your credentials file has been created and is located at: "&lt;br/&gt;			print credsFile + "\n"&lt;br/&gt;&lt;br/&gt;		username = self.username&lt;br/&gt;		password = self.password&lt;br/&gt;		enable = self.enable&lt;br/&gt;		&lt;br/&gt;		return username, password, enable&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;Here is the pyMultiShow.py script, which utilizes the pyRouterLib to obtain user credentials:&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;#!/usr/bin/env python&lt;br/&gt;&lt;br/&gt;from pyRouterLib import *&lt;br/&gt;import os, argparse, paramiko, time&lt;br/&gt;&lt;br/&gt;''' Define hosts file, command file, verbose variables '''&lt;br/&gt;hosts_file = ''&lt;br/&gt;cmd_file = ''&lt;br/&gt;verbose = False&lt;br/&gt;&lt;br/&gt;def arguments():&lt;br/&gt;	''' Function to define the script command line arguments '''&lt;br/&gt;	global hosts_file, cmd_file, verbose&lt;br/&gt;	&lt;br/&gt;	parser = argparse.ArgumentParser(description='A Python implementation of MultiChange, which allows you to make mass changes to routers and switches via SSH.')&lt;br/&gt;	parser.add_argument('-d', '--hosts', help='Specify a host file', required=True)&lt;br/&gt;	parser.add_argument('-c', '--commands', help='Specify a commands file', required=True)&lt;br/&gt;	parser.add_argument('-v', '--verbose', nargs='?', default=False, help='Enables a verbose debugging mode')&lt;br/&gt;&lt;br/&gt;	args = vars(parser.parse_args())&lt;br/&gt;&lt;br/&gt;	if args['hosts']:&lt;br/&gt;		hosts_file = args['hosts']&lt;br/&gt;	if args['commands']:&lt;br/&gt;		cmd_file = args['commands']&lt;br/&gt;	if args['verbose'] == None:&lt;br/&gt;		verbose = True&lt;br/&gt;	&lt;br/&gt;	return hosts_file, cmd_file, verbose&lt;br/&gt;&lt;br/&gt;arguments()&lt;br/&gt;&lt;br/&gt;''' open the hosts file and commands file and execute each command on every host '''&lt;br/&gt;if os.path.isfile(hosts_file):&lt;br/&gt;	hosts = open(hosts_file, 'r')&lt;br/&gt;	for host in hosts:&lt;br/&gt;		host = host.strip("\n")&lt;br/&gt;		&lt;br/&gt;		''' use pyRouterLib to grab the user authentication credentials '''&lt;br/&gt;		rlib = pyRouterLib(host)&lt;br/&gt;		creds = rlib.get_creds()&lt;br/&gt;		username = creds[0]&lt;br/&gt;		password = creds[1]&lt;br/&gt;		enable = creds[2]&lt;br/&gt;		&lt;br/&gt;		''' Enable verbose debugging '''&lt;br/&gt;		if verbose:&lt;br/&gt;			rlib.debug()&lt;br/&gt;		&lt;br/&gt;		remoteConnectionSetup = paramiko.SSHClient()&lt;br/&gt;		remoteConnectionSetup.set_missing_host_key_policy(paramiko.AutoAddPolicy())&lt;br/&gt;		remoteConnectionSetup.connect(host, username=username, password=password, allow_agent=False, look_for_keys=False)&lt;br/&gt;		print "*** SSH connection established to %s" % host&lt;br/&gt;		remoteConnection = remoteConnectionSetup.invoke_shell()&lt;br/&gt;		print "*** Interactive SSH session established"&lt;br/&gt;		cmds = open(cmd_file, 'r')&lt;br/&gt;		for command in cmds:&lt;br/&gt;			remoteConnection.send(command)&lt;br/&gt;			print "*** Executing Command: %s" % command&lt;br/&gt;			if verbose:&lt;br/&gt;				time.sleep(2)&lt;br/&gt;				output = remoteConnection.recv(10000)&lt;br/&gt;				print output&lt;br/&gt;		cmds.close()&lt;br/&gt;		print "*** Closing Connection to %s" % host&lt;br/&gt;	hosts.close()&lt;/pre&gt;&lt;br/&gt;Both can be accessed from my &lt;a href="https://github.com/jtdub/pyRouterLib" target="_blank"&gt;github&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/1424584288481517983/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/07/updating-my-python-scripts-to-access_26.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1424584288481517983'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1424584288481517983'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/07/updating-my-python-scripts-to-access_26.html' title='Updating my Python Scripts to access Cisco Devices'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-8594869568112068510</id><published>2014-07-26T12:22:00.001-05:00</published><updated>2019-04-11T11:10:01.519-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='DNS'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><category scheme='http://www.blogger.com/atom/ns#' term='Bind'/><category scheme='http://www.blogger.com/atom/ns#' term='Rackspace'/><title type='text'>Dynamic DNS Updates via the Rackspace Cloud DNS</title><content type='html'>Do you remember the old days when dyndns.org offered free sub domains, that pointed to your home internet connection? This service allowed you to access your home computer remotely, by hostname, without the need of remembering your IP Address.&lt;br/&gt;&lt;br/&gt;I wrote a python script that does something similar. It uses the Rackspace Cloud API to manage an DNS A record of a domain that you own and is hosted with Rackspace.&lt;br/&gt;&lt;br/&gt;Below is the code:&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;#!/usr/bin/env python&lt;br/&gt;import pyrax, urllib, socket&lt;br/&gt;&lt;br/&gt;'''Variables'''&lt;br/&gt;username = '{USERNAME}'&lt;br/&gt;api_key = '{API_KEY}'&lt;br/&gt;domain_name = '{DOMAIN.COM}'&lt;br/&gt;record_id = '{RECORD_ID}'&lt;br/&gt;dyn_domain = '{DYNDNS_HOSTNAME}'&lt;br/&gt;debug = True&lt;br/&gt;&lt;br/&gt;'''Do not change these variables'''&lt;br/&gt;ip = ''&lt;br/&gt;domain = ''&lt;br/&gt;record = ''&lt;br/&gt;&lt;br/&gt;'''Functions'''&lt;br/&gt;def get_ip():&lt;br/&gt;	global ip, debug&lt;br/&gt;	ip = urllib.urlopen('http://icanhazip.com')&lt;br/&gt;	ip = ip.read()&lt;br/&gt;	ip = ip.strip("\n")&lt;br/&gt;	&lt;br/&gt;	if debug:&lt;br/&gt;		print "*** Current IP Address: %s" % ip&lt;br/&gt;	&lt;br/&gt;	return ip&lt;br/&gt;	&lt;br/&gt;def get_dyn_ip():&lt;br/&gt;	global ip, debug, dyn_domain&lt;br/&gt;	dyn_domain_ip = socket.gethostbyname(dyn_domain)&lt;br/&gt;	&lt;br/&gt;	if debug:&lt;br/&gt;		print "*** Current IP Address: %s" % ip&lt;br/&gt;		print "*** DNS A Record of %s: %s" % (dyn_domain, dyn_domain_ip)&lt;br/&gt;	&lt;br/&gt;	if ip == dyn_domain_ip:&lt;br/&gt;		if debug:&lt;br/&gt;			print "*** %s is already current for %s. Nothing to do." % (dyn_domain_ip, dyn_domain)&lt;br/&gt;		exit(1)&lt;br/&gt;	else:&lt;br/&gt;		update_domain(ip)&lt;br/&gt;	&lt;br/&gt;	return ip&lt;br/&gt;&lt;br/&gt;def rax_auth(user, api):&lt;br/&gt;	global debug&lt;br/&gt;	&lt;br/&gt;	if debug:&lt;br/&gt;		print "*** Username: %s, API_Key: %s" % (user, api)&lt;br/&gt;&lt;br/&gt;	pyrax.set_setting('identity_type', 'rackspace')&lt;br/&gt;	pyrax.set_credentials(user, api)&lt;br/&gt;&lt;br/&gt;def get_domain(dns_domain, dns_record_id):&lt;br/&gt;	global debug, domain, record&lt;br/&gt;&lt;br/&gt;	if debug:&lt;br/&gt;		print "*** Domain Name: %s, Record Id: %s" % (dns_domain, dns_record_id)&lt;br/&gt;&lt;br/&gt;	domain = pyrax.cloud_dns.find(name=dns_domain)&lt;br/&gt;	record = domain.get_record(dns_record_id)&lt;br/&gt;	&lt;br/&gt;	return domain, record&lt;br/&gt;&lt;br/&gt;def update_domain(ip):&lt;br/&gt;	global debug, username, api_key, domain_name, record_id&lt;br/&gt;	&lt;br/&gt;	rax_auth(username, api_key)&lt;br/&gt;	get_domain(domain_name, record_id)&lt;br/&gt;	if debug:&lt;br/&gt;		print "*** Updated IP Address: %s" % ip&lt;br/&gt;	record.update(data=ip)&lt;br/&gt;&lt;br/&gt;'''Executing Functions'''&lt;br/&gt;get_ip()&lt;br/&gt;get_dyn_ip()&lt;/pre&gt;&lt;br/&gt;There are a couple things that still need to be added:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Check to see if {dyn_domain} exists, if it doesn't, create it.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Obtain the {record_id} automatically.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;Given that, the current limitations are:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Your hostname, needs to already exist. The script will only update the hostname, not create it. Example: thisismyhomepc.example.com&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;You have to obain the record ID by hand.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;In the examples, I'm going to be using CentOS 7. The first thing that I'm going to do is install EPEL, which will allow me to install the package 'pip'.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;[jtdub@pyrax-test ~]$ sudo rpm -ivh http://dl.fedoraproject.org/pub/epel/beta/7/x86_64/epel-release-7-0.2.noarch.rpm&lt;br/&gt;Retrieving http://dl.fedoraproject.org/pub/epel/beta/7/x86_64/epel-release-7-0.2.noarch.rpm&lt;br/&gt;warning: /var/tmp/rpm-tmp.tb0sU3: Header V3 RSA/SHA256 Signature, key ID 352c64e5: NOKEY&lt;br/&gt;Preparing...                          ################################# [100%]&lt;br/&gt;Updating / installing...&lt;br/&gt;   1:epel-release-7-0.2               ################################# [100%]&lt;br/&gt;[jtdub@pyrax-test ~]$ sudo yum -y install python-pip&lt;br/&gt;Loaded plugins: fastestmirror&lt;br/&gt;epel/x86_64/metalink                                                                                                                                              |  11 kB  00:00:00     &lt;br/&gt;epel                                                                                                                                                              | 3.7 kB  00:00:00     &lt;br/&gt;(1/2): epel/x86_64/group_gz                                                                                                                                       | 163 kB  00:00:00     &lt;br/&gt;(2/2): epel/x86_64/primary_db                                                                                                                                     | 2.1 MB  00:00:00     &lt;br/&gt;Loading mirror speeds from cached hostfile&lt;br/&gt; * base: centos.someimage.com&lt;br/&gt; * epel: mirrors.mit.edu&lt;br/&gt; * extras: mirrors.einstein.yu.edu&lt;br/&gt; * updates: centos.hostingxtreme.com&lt;br/&gt;Resolving Dependencies&lt;br/&gt;--&amp;gt; Running transaction check&lt;br/&gt;---&amp;gt; Package python-pip.noarch 0:1.3.1-4.el7 will be installed&lt;br/&gt;--&amp;gt; Finished Dependency Resolution&lt;br/&gt;&lt;br/&gt;Dependencies Resolved&lt;br/&gt;&lt;br/&gt;=========================================================================================================================================================================================&lt;br/&gt; Package                                       Arch                                      Version                                           Repository                               Size&lt;br/&gt;=========================================================================================================================================================================================&lt;br/&gt;Installing:&lt;br/&gt; python-pip                                    noarch                                    1.3.1-4.el7                                       epel                                    315 k&lt;br/&gt;&lt;br/&gt;Transaction Summary&lt;br/&gt;=========================================================================================================================================================================================&lt;br/&gt;Install  1 Package&lt;br/&gt;&lt;br/&gt;Total download size: 315 k&lt;br/&gt;Installed size: 1.0 M&lt;br/&gt;Downloading packages:&lt;br/&gt;python-pip-1.3.1-4.el7.noarch.rpm                                                                                                                                 | 315 kB  00:00:00     &lt;br/&gt;Running transaction check&lt;br/&gt;Running transaction test&lt;br/&gt;Transaction test succeeded&lt;br/&gt;Running transaction&lt;br/&gt;Warning: RPMDB altered outside of yum.&lt;br/&gt;  Installing : python-pip-1.3.1-4.el7.noarch                                                                                                                                         1/1 &lt;br/&gt;  Verifying  : python-pip-1.3.1-4.el7.noarch                                                                                                                                         1/1 &lt;br/&gt;&lt;br/&gt;Installed:&lt;br/&gt;  python-pip.noarch 0:1.3.1-4.el7                                                                                                                                                        &lt;br/&gt;&lt;br/&gt;Complete!&lt;br/&gt;[jtdub@pyrax-test ~]$&lt;/pre&gt;&lt;br/&gt;Once that is installed, we can install the python module that we'll need, which is pyrax - which is the Rackspace Python SDK for their Cloud.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;[jtdub@pyrax-test ~]$ sudo pip install pyrax&lt;br/&gt;Downloading/unpacking pyrax&lt;br/&gt;  Downloading pyrax-1.9.0.tar.gz (308kB): 308kB downloaded&lt;br/&gt;  Running setup.py egg_info for package pyrax&lt;br/&gt;    &lt;br/&gt;Downloading/unpacking python-novaclient&amp;gt;=2.13.0 (from pyrax)&lt;br/&gt;  Downloading python-novaclient-2.18.1.tar.gz (254kB): 254kB downloaded&lt;br/&gt;  Running setup.py egg_info for package python-novaclient&lt;br/&gt;    &lt;br/&gt;    Installed /tmp/pip-build-root/python-novaclient/pbr-0.10.0-py2.7.egg&lt;br/&gt;    [pbr] Processing SOURCES.txt&lt;br/&gt;    warning: LocalManifestMaker: standard file '-c' not found&lt;br/&gt;    &lt;br/&gt;    warning: no previously-included files found matching '.gitignore'&lt;br/&gt;    warning: no previously-included files found matching '.gitreview'&lt;br/&gt;    warning: no previously-included files matching '*.pyc' found anywhere in distribution&lt;br/&gt;    warning: no previously-included files found matching '.gitignore'&lt;br/&gt;    warning: no previously-included files found matching '.gitreview'&lt;br/&gt;Downloading/unpacking rackspace-novaclient (from pyrax)&lt;br/&gt;  Downloading rackspace-novaclient-1.4.tar.gz&lt;br/&gt;  Running setup.py egg_info for package rackspace-novaclient&lt;br/&gt;    &lt;br/&gt;Downloading/unpacking keyring (from pyrax)&lt;br/&gt;  Downloading keyring-3.8.zip (84kB): 84kB downloaded&lt;br/&gt;  Running setup.py egg_info for package keyring&lt;br/&gt;    &lt;br/&gt;    warning: no previously-included files found matching '.hg/last-message.txt'&lt;br/&gt;Downloading/unpacking requests&amp;gt;=2.2.1 (from pyrax)&lt;br/&gt;  Downloading requests-2.3.0.tar.gz (429kB): 429kB downloaded&lt;br/&gt;  Running setup.py egg_info for package requests&lt;br/&gt;    &lt;br/&gt;Downloading/unpacking six&amp;gt;=1.5.2 (from pyrax)&lt;br/&gt;  Downloading six-1.7.3.tar.gz&lt;br/&gt;  Running setup.py egg_info for package six&lt;br/&gt;    &lt;br/&gt;    no previously-included directories found matching 'documentation/_build'&lt;br/&gt;Downloading/unpacking mock (from pyrax)&lt;br/&gt;  Downloading mock-1.0.1.tar.gz (818kB): 818kB downloaded&lt;br/&gt;  Running setup.py egg_info for package mock&lt;br/&gt;    &lt;br/&gt;    warning: no files found matching '*.png' under directory 'docs'&lt;br/&gt;    warning: no files found matching '*.css' under directory 'docs'&lt;br/&gt;    warning: no files found matching '*.html' under directory 'docs'&lt;br/&gt;    warning: no files found matching '*.js' under directory 'docs'&lt;br/&gt;Downloading/unpacking pbr&amp;gt;=0.6,!=0.7,&amp;lt;1.0 (from python-novaclient&amp;gt;=2.13.0-&amp;gt;pyrax)&lt;br/&gt;  Downloading pbr-0.10.0.tar.gz (77kB): 77kB downloaded&lt;br/&gt;  Running setup.py egg_info for package pbr&lt;br/&gt;    [pbr] Processing SOURCES.txt&lt;br/&gt;    warning: LocalManifestMaker: standard file '-c' not found&lt;br/&gt;    &lt;br/&gt;    warning: no previously-included files found matching '.gitignore'&lt;br/&gt;    warning: no previously-included files found matching '.gitreview'&lt;br/&gt;    warning: no previously-included files matching '*.pyc' found anywhere in distribution&lt;br/&gt;    warning: no previously-included files found matching '.gitignore'&lt;br/&gt;    warning: no previously-included files found matching '.gitreview'&lt;br/&gt;    warning: no previously-included files matching '*.pyc' found anywhere in distribution&lt;br/&gt;Downloading/unpacking argparse (from python-novaclient&amp;gt;=2.13.0-&amp;gt;pyrax)&lt;br/&gt;  Downloading argparse-1.2.1.tar.gz (69kB): 69kB downloaded&lt;br/&gt;  Running setup.py egg_info for package argparse&lt;br/&gt;    &lt;br/&gt;    warning: no previously-included files matching '*.pyc' found anywhere in distribution&lt;br/&gt;    warning: no previously-included files matching '*.pyo' found anywhere in distribution&lt;br/&gt;    warning: no previously-included files matching '*.orig' found anywhere in distribution&lt;br/&gt;    warning: no previously-included files matching '*.rej' found anywhere in distribution&lt;br/&gt;    no previously-included directories found matching 'doc/_build'&lt;br/&gt;    no previously-included directories found matching 'env24'&lt;br/&gt;    no previously-included directories found matching 'env25'&lt;br/&gt;    no previously-included directories found matching 'env26'&lt;br/&gt;    no previously-included directories found matching 'env27'&lt;br/&gt;Downloading/unpacking iso8601&amp;gt;=0.1.9 (from python-novaclient&amp;gt;=2.13.0-&amp;gt;pyrax)&lt;br/&gt;  Downloading iso8601-0.1.10.tar.gz&lt;br/&gt;  Running setup.py egg_info for package iso8601&lt;br/&gt;    &lt;br/&gt;Downloading/unpacking PrettyTable&amp;gt;=0.7,&amp;lt;0.8 (from python-novaclient&amp;gt;=2.13.0-&amp;gt;pyrax)&lt;br/&gt;  Downloading prettytable-0.7.2.tar.bz2&lt;br/&gt;  Running setup.py egg_info for package PrettyTable&lt;br/&gt;    &lt;br/&gt;Downloading/unpacking simplejson&amp;gt;=2.0.9 (from python-novaclient&amp;gt;=2.13.0-&amp;gt;pyrax)&lt;br/&gt;  Downloading simplejson-3.6.0.tar.gz (70kB): 70kB downloaded&lt;br/&gt;  Running setup.py egg_info for package simplejson&lt;br/&gt;    &lt;br/&gt;Downloading/unpacking Babel&amp;gt;=1.3 (from python-novaclient&amp;gt;=2.13.0-&amp;gt;pyrax)&lt;br/&gt;  Downloading Babel-1.3.tar.gz (3.4MB): 3.4MB downloaded&lt;br/&gt;  Running setup.py egg_info for package Babel&lt;br/&gt;    &lt;br/&gt;    warning: no previously-included files matching '*' found under directory 'docs/_build'&lt;br/&gt;    warning: no previously-included files matching '*.pyc' found under directory 'tests'&lt;br/&gt;    warning: no previously-included files matching '*.pyo' found under directory 'tests'&lt;br/&gt;Downloading/unpacking rackspace-auth-openstack (from rackspace-novaclient-&amp;gt;pyrax)&lt;br/&gt;  Downloading rackspace-auth-openstack-1.3.tar.gz&lt;br/&gt;  Running setup.py egg_info for package rackspace-auth-openstack&lt;br/&gt;    &lt;br/&gt;Downloading/unpacking os-diskconfig-python-novaclient-ext (from rackspace-novaclient-&amp;gt;pyrax)&lt;br/&gt;  Downloading os_diskconfig_python_novaclient_ext-0.1.2.tar.gz&lt;br/&gt;  Running setup.py egg_info for package os-diskconfig-python-novaclient-ext&lt;br/&gt;    &lt;br/&gt;Downloading/unpacking rax-scheduled-images-python-novaclient-ext (from rackspace-novaclient-&amp;gt;pyrax)&lt;br/&gt;  Downloading rax_scheduled_images_python_novaclient_ext-0.2.2.tar.gz&lt;br/&gt;  Running setup.py egg_info for package rax-scheduled-images-python-novaclient-ext&lt;br/&gt;    &lt;br/&gt;Downloading/unpacking os-networksv2-python-novaclient-ext (from rackspace-novaclient-&amp;gt;pyrax)&lt;br/&gt;  Downloading os_networksv2_python_novaclient_ext-0.21.tar.gz&lt;br/&gt;  Running setup.py egg_info for package os-networksv2-python-novaclient-ext&lt;br/&gt;    &lt;br/&gt;Downloading/unpacking os-virtual-interfacesv2-python-novaclient-ext (from rackspace-novaclient-&amp;gt;pyrax)&lt;br/&gt;  Downloading os_virtual_interfacesv2_python_novaclient_ext-0.15.tar.gz&lt;br/&gt;  Running setup.py egg_info for package os-virtual-interfacesv2-python-novaclient-ext&lt;br/&gt;    &lt;br/&gt;Downloading/unpacking rax-default-network-flags-python-novaclient-ext (from rackspace-novaclient-&amp;gt;pyrax)&lt;br/&gt;  Downloading rax_default_network_flags_python_novaclient_ext-0.2.4.tar.gz&lt;br/&gt;  Running setup.py egg_info for package rax-default-network-flags-python-novaclient-ext&lt;br/&gt;    &lt;br/&gt;Requirement already satisfied (use --upgrade to upgrade): pip in /usr/lib/python2.7/site-packages (from pbr&amp;gt;=0.6,!=0.7,&amp;lt;1.0-&amp;gt;python-novaclient&amp;gt;=2.13.0-&amp;gt;pyrax)&lt;br/&gt;Downloading/unpacking pytz&amp;gt;=0a (from Babel&amp;gt;=1.3-&amp;gt;python-novaclient&amp;gt;=2.13.0-&amp;gt;pyrax)&lt;br/&gt;  Downloading pytz-2014.4.tar.bz2 (159kB): 159kB downloaded&lt;br/&gt;  Running setup.py egg_info for package pytz&lt;br/&gt;    &lt;br/&gt;Installing collected packages: pyrax, python-novaclient, rackspace-novaclient, keyring, requests, six, mock, pbr, argparse, iso8601, PrettyTable, simplejson, Babel, rackspace-auth-openstack, os-diskconfig-python-novaclient-ext, rax-scheduled-images-python-novaclient-ext, os-networksv2-python-novaclient-ext, os-virtual-interfacesv2-python-novaclient-ext, rax-default-network-flags-python-novaclient-ext, pytz&lt;br/&gt;  Running setup.py install for pyrax&lt;br/&gt;    /usr/bin/python -O /tmp/tmpB0aWjs.py&lt;br/&gt;    removing /tmp/tmpB0aWjs.py&lt;br/&gt;    &lt;br/&gt;  Running setup.py install for python-novaclient&lt;br/&gt;    [pbr] Reusing existing SOURCES.txt&lt;br/&gt;    Installing nova script to /usr/bin&lt;br/&gt;  Running setup.py install for rackspace-novaclient&lt;br/&gt;    &lt;br/&gt;  Running setup.py install for keyring&lt;br/&gt;    &lt;br/&gt;    warning: no previously-included files found matching '.hg/last-message.txt'&lt;br/&gt;    Installing keyring script to /usr/bin&lt;br/&gt;  Running setup.py install for requests&lt;br/&gt;    &lt;br/&gt;  Running setup.py install for six&lt;br/&gt;    &lt;br/&gt;    no previously-included directories found matching 'documentation/_build'&lt;br/&gt;  Running setup.py install for mock&lt;br/&gt;    &lt;br/&gt;    warning: no files found matching '*.png' under directory 'docs'&lt;br/&gt;    warning: no files found matching '*.css' under directory 'docs'&lt;br/&gt;    warning: no files found matching '*.html' under directory 'docs'&lt;br/&gt;    warning: no files found matching '*.js' under directory 'docs'&lt;br/&gt;  Running setup.py install for pbr&lt;br/&gt;    [pbr] Reusing existing SOURCES.txt&lt;br/&gt;  Running setup.py install for argparse&lt;br/&gt;    &lt;br/&gt;    warning: no previously-included files matching '*.pyc' found anywhere in distribution&lt;br/&gt;    warning: no previously-included files matching '*.pyo' found anywhere in distribution&lt;br/&gt;    warning: no previously-included files matching '*.orig' found anywhere in distribution&lt;br/&gt;    warning: no previously-included files matching '*.rej' found anywhere in distribution&lt;br/&gt;    no previously-included directories found matching 'doc/_build'&lt;br/&gt;    no previously-included directories found matching 'env24'&lt;br/&gt;    no previously-included directories found matching 'env25'&lt;br/&gt;    no previously-included directories found matching 'env26'&lt;br/&gt;    no previously-included directories found matching 'env27'&lt;br/&gt;  Running setup.py install for iso8601&lt;br/&gt;    &lt;br/&gt;  Running setup.py install for PrettyTable&lt;br/&gt;    &lt;br/&gt;  Running setup.py install for simplejson&lt;br/&gt;    building 'simplejson._speedups' extension&lt;br/&gt;    gcc -pthread -fno-strict-aliasing -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -DNDEBUG -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -fPIC -I/usr/include/python2.7 -c simplejson/_speedups.c -o build/temp.linux-x86_64-2.7/simplejson/_speedups.o&lt;br/&gt;    unable to execute gcc: No such file or directory&lt;br/&gt;    ***************************************************************************&lt;br/&gt;    WARNING: The C extension could not be compiled, speedups are not enabled.&lt;br/&gt;    Failure information, if any, is above.&lt;br/&gt;    I'm retrying the build without the C extension now.&lt;br/&gt;    ***************************************************************************&lt;br/&gt;    &lt;br/&gt;    ***************************************************************************&lt;br/&gt;    WARNING: The C extension could not be compiled, speedups are not enabled.&lt;br/&gt;    Plain-Python installation succeeded.&lt;br/&gt;    ***************************************************************************&lt;br/&gt;  Running setup.py install for Babel&lt;br/&gt;    &lt;br/&gt;    warning: no previously-included files matching '*' found under directory 'docs/_build'&lt;br/&gt;    warning: no previously-included files matching '*.pyc' found under directory 'tests'&lt;br/&gt;    warning: no previously-included files matching '*.pyo' found under directory 'tests'&lt;br/&gt;    Installing pybabel script to /usr/bin&lt;br/&gt;  Running setup.py install for rackspace-auth-openstack&lt;br/&gt;    &lt;br/&gt;  Running setup.py install for os-diskconfig-python-novaclient-ext&lt;br/&gt;    &lt;br/&gt;  Running setup.py install for rax-scheduled-images-python-novaclient-ext&lt;br/&gt;    &lt;br/&gt;  Running setup.py install for os-networksv2-python-novaclient-ext&lt;br/&gt;    &lt;br/&gt;  Running setup.py install for os-virtual-interfacesv2-python-novaclient-ext&lt;br/&gt;    &lt;br/&gt;  Running setup.py install for rax-default-network-flags-python-novaclient-ext&lt;br/&gt;    &lt;br/&gt;  Running setup.py install for pytz&lt;br/&gt;    &lt;br/&gt;Successfully installed pyrax python-novaclient rackspace-novaclient keyring requests six mock pbr argparse iso8601 PrettyTable simplejson Babel rackspace-auth-openstack os-diskconfig-python-novaclient-ext rax-scheduled-images-python-novaclient-ext os-networksv2-python-novaclient-ext os-virtual-interfacesv2-python-novaclient-ext rax-default-network-flags-python-novaclient-ext pytz&lt;br/&gt;Cleaning up...&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;Once you've installed the needed modules, you can verify that they are available for use.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;[jtdub@pyrax-test ~]$ python&lt;br/&gt;Python 2.7.5 (default, Jun 17 2014, 18:11:42) &lt;br/&gt;[GCC 4.8.2 20140120 (Red Hat 4.8.2-16)] on linux2&lt;br/&gt;Type "help", "copyright", "credits" or "license" for more information.&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; import pyrax&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; dir(pyrax)&lt;br/&gt;['AutoScaleClient', 'CloudBlockStorageClient', 'CloudDNSClient', 'CloudDatabaseClient', 'CloudLoadBalancerClient', 'CloudMonitorClient', 'CloudNetworkClient', 'CloudServer', 'ConfigParser', 'ImageClient', 'QueueClient', 'Settings', 'StorageClient', 'USER_AGENT', '__builtins__', '__doc__', '__file__', '__name__', '__package__', '__path__', '_assure_identity', '_client_classes', '_create_client', '_create_identity', '_cs_auth_plugin', '_cs_client', '_cs_exceptions', '_cs_shell', '_environment', '_get_service_endpoint', '_http_debug', '_id_type', '_import_identity', '_logger', '_make_agent_name', '_require_auth', '_safe_region', 'absolute_import', 'auth_with_token', 'authenticate', 'autoscale', 'base_identity', 'clear_credentials', 'client', 'client_class_for_service', 'cloud_blockstorage', 'cloud_databases', 'cloud_dns', 'cloud_loadbalancers', 'cloud_monitoring', 'cloud_networks', 'cloudblockstorage', 'clouddatabases', 'clouddns', 'cloudfiles', 'cloudloadbalancers', 'cloudmonitoring', 'cloudnetworks', 'cloudservers', 'config_file', 'connect_to_autoscale', 'connect_to_cloud_blockstorage', 'connect_to_cloud_databases', 'connect_to_cloud_dns', 'connect_to_cloud_loadbalancers', 'connect_to_cloud_monitoring', 'connect_to_cloud_networks', 'connect_to_cloudfiles', 'connect_to_cloudservers', 'connect_to_images', 'connect_to_queues', 'connect_to_services', 'create_context', 'default_encoding', 'default_region', 'exc', 'exceptions', 'get_encoding', 'get_environment', 'get_http_debug', 'get_setting', 'http', 'identity', 'image', 'images', 'inspect', 'keyring', 'keyring_auth', 'keystone_identity', 'list_environments', 'logging', 'manager', 'object_storage', 'os', 'queueing', 'queues', 'rax_identity', 're', 'regions', 'resource', 'services', 'set_credential_file', 'set_credentials', 'set_default_region', 'set_environment', 'set_http_debug', 'set_setting', 'settings', 'utils', 'version', 'warnings', 'wraps']&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; import urllib&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; dir(urllib)&lt;br/&gt;['ContentTooShortError', 'FancyURLopener', 'MAXFTPCACHE', 'URLopener', '__all__', '__builtins__', '__doc__', '__file__', '__name__', '__package__', '__version__', '_asciire', '_ftperrors', '_have_ssl', '_hexdig', '_hextochr', '_hostprog', '_is_unicode', '_localhost', '_noheaders', '_nportprog', '_passwdprog', '_portprog', '_queryprog', '_safe_map', '_safe_quoters', '_tagprog', '_thishost', '_typeprog', '_urlopener', '_userprog', '_valueprog', 'addbase', 'addclosehook', 'addinfo', 'addinfourl', 'always_safe', 'base64', 'basejoin', 'c', 'ftpcache', 'ftperrors', 'ftpwrapper', 'getproxies', 'getproxies_environment', 'i', 'localhost', 'noheaders', 'os', 'pathname2url', 'proxy_bypass', 'proxy_bypass_environment', 'quote', 'quote_plus', 're', 'reporthook', 'socket', 'splitattr', 'splithost', 'splitnport', 'splitpasswd', 'splitport', 'splitquery', 'splittag', 'splittype', 'splituser', 'splitvalue', 'ssl', 'string', 'sys', 'test1', 'thishost', 'time', 'toBytes', 'unquote', 'unquote_plus', 'unwrap', 'url2pathname', 'urlcleanup', 'urlencode', 'urlopen', 'urlretrieve']&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; import socket&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; dir(socket)&lt;br/&gt;['AF_APPLETALK', 'AF_ASH', 'AF_ATMPVC', 'AF_ATMSVC', 'AF_AX25', 'AF_BLUETOOTH', 'AF_BRIDGE', 'AF_DECnet', 'AF_ECONET', 'AF_INET', 'AF_INET6', 'AF_IPX', 'AF_IRDA', 'AF_KEY', 'AF_LLC', 'AF_NETBEUI', 'AF_NETLINK', 'AF_NETROM', 'AF_PACKET', 'AF_PPPOX', 'AF_ROSE', 'AF_ROUTE', 'AF_SECURITY', 'AF_SNA', 'AF_TIPC', 'AF_UNIX', 'AF_UNSPEC', 'AF_WANPIPE', 'AF_X25', 'AI_ADDRCONFIG', 'AI_ALL', 'AI_CANONNAME', 'AI_NUMERICHOST', 'AI_NUMERICSERV', 'AI_PASSIVE', 'AI_V4MAPPED', 'BDADDR_ANY', 'BDADDR_LOCAL', 'BTPROTO_HCI', 'BTPROTO_L2CAP', 'BTPROTO_RFCOMM', 'BTPROTO_SCO', 'CAPI', 'EAI_ADDRFAMILY', 'EAI_AGAIN', 'EAI_BADFLAGS', 'EAI_FAIL', 'EAI_FAMILY', 'EAI_MEMORY', 'EAI_NODATA', 'EAI_NONAME', 'EAI_OVERFLOW', 'EAI_SERVICE', 'EAI_SOCKTYPE', 'EAI_SYSTEM', 'EBADF', 'EINTR', 'HCI_DATA_DIR', 'HCI_FILTER', 'HCI_TIME_STAMP', 'INADDR_ALLHOSTS_GROUP', 'INADDR_ANY', 'INADDR_BROADCAST', 'INADDR_LOOPBACK', 'INADDR_MAX_LOCAL_GROUP', 'INADDR_NONE', 'INADDR_UNSPEC_GROUP', 'IPPORT_RESERVED', 'IPPORT_USERRESERVED', 'IPPROTO_AH', 'IPPROTO_DSTOPTS', 'IPPROTO_EGP', 'IPPROTO_ESP', 'IPPROTO_FRAGMENT', 'IPPROTO_GRE', 'IPPROTO_HOPOPTS', 'IPPROTO_ICMP', 'IPPROTO_ICMPV6', 'IPPROTO_IDP', 'IPPROTO_IGMP', 'IPPROTO_IP', 'IPPROTO_IPIP', 'IPPROTO_IPV6', 'IPPROTO_NONE', 'IPPROTO_PIM', 'IPPROTO_PUP', 'IPPROTO_RAW', 'IPPROTO_ROUTING', 'IPPROTO_RSVP', 'IPPROTO_TCP', 'IPPROTO_TP', 'IPPROTO_UDP', 'IPV6_CHECKSUM', 'IPV6_DSTOPTS', 'IPV6_HOPLIMIT', 'IPV6_HOPOPTS', 'IPV6_JOIN_GROUP', 'IPV6_LEAVE_GROUP', 'IPV6_MULTICAST_HOPS', 'IPV6_MULTICAST_IF', 'IPV6_MULTICAST_LOOP', 'IPV6_NEXTHOP', 'IPV6_PKTINFO', 'IPV6_RECVDSTOPTS', 'IPV6_RECVHOPLIMIT', 'IPV6_RECVHOPOPTS', 'IPV6_RECVPKTINFO', 'IPV6_RECVRTHDR', 'IPV6_RECVTCLASS', 'IPV6_RTHDR', 'IPV6_RTHDRDSTOPTS', 'IPV6_RTHDR_TYPE_0', 'IPV6_TCLASS', 'IPV6_UNICAST_HOPS', 'IPV6_V6ONLY', 'IP_ADD_MEMBERSHIP', 'IP_DEFAULT_MULTICAST_LOOP', 'IP_DEFAULT_MULTICAST_TTL', 'IP_DROP_MEMBERSHIP', 'IP_HDRINCL', 'IP_MAX_MEMBERSHIPS', 'IP_MULTICAST_IF', 'IP_MULTICAST_LOOP', 'IP_MULTICAST_TTL', 'IP_OPTIONS', 'IP_RECVOPTS', 'IP_RECVRETOPTS', 'IP_RETOPTS', 'IP_TOS', 'IP_TTL', 'MSG_CTRUNC', 'MSG_DONTROUTE', 'MSG_DONTWAIT', 'MSG_EOR', 'MSG_OOB', 'MSG_PEEK', 'MSG_TRUNC', 'MSG_WAITALL', 'MethodType', 'NETLINK_DNRTMSG', 'NETLINK_FIREWALL', 'NETLINK_IP6_FW', 'NETLINK_NFLOG', 'NETLINK_ROUTE', 'NETLINK_USERSOCK', 'NETLINK_XFRM', 'NI_DGRAM', 'NI_MAXHOST', 'NI_MAXSERV', 'NI_NAMEREQD', 'NI_NOFQDN', 'NI_NUMERICHOST', 'NI_NUMERICSERV', 'PACKET_BROADCAST', 'PACKET_FASTROUTE', 'PACKET_HOST', 'PACKET_LOOPBACK', 'PACKET_MULTICAST', 'PACKET_OTHERHOST', 'PACKET_OUTGOING', 'PF_PACKET', 'RAND_add', 'RAND_egd', 'RAND_status', 'SHUT_RD', 'SHUT_RDWR', 'SHUT_WR', 'SOCK_DGRAM', 'SOCK_RAW', 'SOCK_RDM', 'SOCK_SEQPACKET', 'SOCK_STREAM', 'SOL_HCI', 'SOL_IP', 'SOL_SOCKET', 'SOL_TCP', 'SOL_TIPC', 'SOL_UDP', 'SOMAXCONN', 'SO_ACCEPTCONN', 'SO_ATTACH_FILTER', 'SO_BINDTODEVICE', 'SO_BROADCAST', 'SO_BSDCOMPAT', 'SO_DEBUG', 'SO_DETACH_FILTER', 'SO_DONTROUTE', 'SO_ERROR', 'SO_KEEPALIVE', 'SO_LINGER', 'SO_NO_CHECK', 'SO_OOBINLINE', 'SO_PASSCRED', 'SO_PASSSEC', 'SO_PEERCRED', 'SO_PEERNAME', 'SO_PEERSEC', 'SO_PRIORITY', 'SO_RCVBUF', 'SO_RCVBUFFORCE', 'SO_RCVLOWAT', 'SO_RCVTIMEO', 'SO_REUSEADDR', 'SO_REUSEPORT', 'SO_SECURITY_AUTHENTICATION', 'SO_SECURITY_ENCRYPTION_NETWORK', 'SO_SECURITY_ENCRYPTION_TRANSPORT', 'SO_SNDBUF', 'SO_SNDBUFFORCE', 'SO_SNDLOWAT', 'SO_SNDTIMEO', 'SO_TIMESTAMP', 'SO_TIMESTAMPNS', 'SO_TYPE', 'SSL_ERROR_EOF', 'SSL_ERROR_INVALID_ERROR_CODE', 'SSL_ERROR_SSL', 'SSL_ERROR_SYSCALL', 'SSL_ERROR_WANT_CONNECT', 'SSL_ERROR_WANT_READ', 'SSL_ERROR_WANT_WRITE', 'SSL_ERROR_WANT_X509_LOOKUP', 'SSL_ERROR_ZERO_RETURN', 'SocketType', 'StringIO', 'TCP_CONGESTION', 'TCP_CORK', 'TCP_DEFER_ACCEPT', 'TCP_INFO', 'TCP_KEEPCNT', 'TCP_KEEPIDLE', 'TCP_KEEPINTVL', 'TCP_LINGER2', 'TCP_MAXSEG', 'TCP_MD5SIG', 'TCP_MD5SIG_MAXKEYLEN', 'TCP_NODELAY', 'TCP_QUICKACK', 'TCP_SYNCNT', 'TCP_WINDOW_CLAMP', 'TIPC_ADDR_ID', 'TIPC_ADDR_NAME', 'TIPC_ADDR_NAMESEQ', 'TIPC_CFG_SRV', 'TIPC_CLUSTER_SCOPE', 'TIPC_CONN_TIMEOUT', 'TIPC_CRITICAL_IMPORTANCE', 'TIPC_DEST_DROPPABLE', 'TIPC_HIGH_IMPORTANCE', 'TIPC_IMPORTANCE', 'TIPC_LOW_IMPORTANCE', 'TIPC_MEDIUM_IMPORTANCE', 'TIPC_NODE_SCOPE', 'TIPC_PUBLISHED', 'TIPC_SRC_DROPPABLE', 'TIPC_SUBSCR_TIMEOUT', 'TIPC_SUB_CANCEL', 'TIPC_SUB_PORTS', 'TIPC_SUB_SERVICE', 'TIPC_TOP_SRV', 'TIPC_WAIT_FOREVER', 'TIPC_WITHDRAWN', 'TIPC_ZONE_SCOPE', '_GLOBAL_DEFAULT_TIMEOUT', '__all__', '__builtins__', '__doc__', '__file__', '__name__', '__package__', '_closedsocket', '_delegate_methods', '_fileobject', '_m', '_realsocket', '_socket', '_socketmethods', '_socketobject', '_ssl', 'create_connection', 'errno', 'error', 'fromfd', 'gaierror', 'getaddrinfo', 'getdefaulttimeout', 'getfqdn', 'gethostbyaddr', 'gethostbyname', 'gethostbyname_ex', 'gethostname', 'getnameinfo', 'getprotobyname', 'getservbyname', 'getservbyport', 'has_ipv6', 'herror', 'htonl', 'htons', 'inet_aton', 'inet_ntoa', 'inet_ntop', 'inet_pton', 'm', 'meth', 'ntohl', 'ntohs', 'os', 'p', 'partial', 'setdefaulttimeout', 'socket', 'socketpair', 'ssl', 'sslerror', 'sys', 'timeout', 'warnings']&lt;/pre&gt;&lt;br/&gt;In my example, I'm going to use the hostname of myhomepc.jtdub.com, which points to 192.168.1.1. While still in the python prompt, I'm going to call the pyrax module to get the {record_id}, which in this example output is id: 'A-2222222'.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;&amp;gt;&amp;gt;&amp;gt; import pyrax&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; pyrax.set_setting('identity_type', 'rackspace')&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; pyrax.set_credentials('{username}', '{api_key}')&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; domain = pyrax.cloud_dns.find(name="jtdub.com")&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; record = domain.get_record('')&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; print record&lt;br/&gt;&amp;lt;CloudDNSRecord domain_id=0000000, records=[{u'updated': u'2013-07-31T06:17:35.000+0000', u'name': u'www.jtdub.com', u'created': u'2012-06-07T23:56:27.000+0000', u'type': u'A', u'ttl': 300, u'data': u'174.143.185.156', u'id': u'A-0000000'}, {u'updated': u'2013-07-31T06:17:44.000+0000', u'name': u'jtdub.com', u'created': u'2012-06-07T23:58:31.000+0000', u'type': u'A', u'ttl': 300, u'data': u'174.143.185.156', u'id': u'A-1111111'}, {u'updated': u'2014-07-26T21:37:24.000+0000', u'name': u'myhomepc.jtdub.com', u'created': u'2014-07-26T21:37:24.000+0000', u'type': u'A', u'ttl': 300, u'data': u'192.168.1.1', u'id': u'A-2222222'},}], totalEntries=13&amp;gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; record = domain.get_record('A-2222222')&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; print record&lt;br/&gt;&amp;lt;CloudDNSRecord data=192.168.1.1, domain_id=0000000, id=A-2222222, name=myhomepc.jtdub.com, ttl=300, type=A&amp;gt;&lt;/pre&gt;&lt;br/&gt;Replace {username} and {api_key} with your rackspace cloud account username and api key. Now that we have the necessary information, we can edit the variables of the script and run it!&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;[jtdub@pyrax-test ~]$ git clone https://github.com/jtdub/pyraxDynDNS.git&lt;br/&gt;Cloning into 'pyraxDynDNS'...&lt;br/&gt;remote: Counting objects: 13, done.&lt;br/&gt;remote: Compressing objects: 100% (12/12), done.&lt;br/&gt;remote: Total 13 (delta 3), reused 6 (delta 1)&lt;br/&gt;Unpacking objects: 100% (13/13), done.&lt;br/&gt;[jtdub@pyrax-test ~]$ cd pyraxDynDNS/&lt;br/&gt;[jtdub@pyrax-test pyraxDynDNS]$ vim pyraxDynDNS.py&lt;br/&gt;[jtdub@pyrax-test pyraxDynDNS]$ chmod +x pyraxDynDNS.py&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;Here's my first run of the script. Here you can see that it determines my public IP Address, then determines the DNS A record of my {dyn_domain} hostname. As they are different, it authenticates to the API and makes a call to update the DNS A record of myhomepc.jtdub.com with my current public IP Address.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;[jtdub@pyrax-test pyraxDynDNS]$ ./pyraxDynDNS.py&lt;br/&gt;*** Current IP Address: 240.0.0.1&lt;br/&gt;*** Current IP Address: 240.0.0.1&lt;br/&gt;*** DNS A Record of myhomepc.jtdub.com: 192.168.1.1&lt;br/&gt;*** Username: {username}, API_Key: {api_key}&lt;br/&gt;*** Domain Name: jtdub.com, Record Id: A-2222222&lt;br/&gt;*** Updated IP Address: 240.0.0.1&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;I gave DNS a five minutes to update, then I ran the script again. This time, the script determined that my current public IP Address is the same as my DNS A record of myhomepc.jtdub.com, so it didn't even attempt to authenticate to the API to make any changes.&lt;br/&gt;&lt;pre class="lang:default decode:true  "&gt;[jtdub@pyrax-test pyraxDynDNS]$ ./pyraxDynDNS.py &lt;br/&gt;*** Current IP Address: 240.0.0.1&lt;br/&gt;*** Current IP Address: 240.0.0.1&lt;br/&gt;*** DNS A Record of myhomepc.jtdub.com: 240.0.0.1&lt;br/&gt;*** 240.0.0.1 is already current for myhomepc.jtdub.com. Nothing to do.&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;Pretty nifty, right? From here, you can put the script into a cron job to run once a day, or however often you want. There you go! Custom dynamic DNS hostname, to access your home PC, using the Rackspace Cloud!&lt;br/&gt;&lt;br/&gt;The script can be found on &lt;a href="https://github.com/jtdub/pyraxDynDNS" target="_blank"&gt;github.com&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;Here is more information on the &lt;a href="https://developer.rackspace.com/docs/cloud-dns/getting-started/?lang=python" target="_blank"&gt;Rackspace SDK&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/8594869568112068510/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/07/dynamic-dns-updates-via-rackspace-cloud_26.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8594869568112068510'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8594869568112068510'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/07/dynamic-dns-updates-via-rackspace-cloud_26.html' title='Dynamic DNS Updates via the Rackspace Cloud DNS'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-2280836380030415423</id><published>2014-05-29T20:03:00.001-05:00</published><updated>2019-04-11T11:10:01.259-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='LUKS'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Encryption'/><title type='text'>Linux Unified Key Setup</title><content type='html'>Here are some notes that I took about setting up LUKS when studying for the RHCSA. I felt that this would be appropriate to post after the recent issues with &lt;a href="http://truecrypt.sourceforge.net/"&gt;TrueCrypt&lt;/a&gt;.&lt;br/&gt;&lt;h3&gt;Disk Encryption&lt;/h3&gt;&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;LUKS - Linux Unified Key Setup&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Create a new LUKS encrypted device:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;cryptsetup luksFormat &amp;lt;device&amp;gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Establish access to the device:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;cryptsetup luksOpen &amp;lt;device&amp;gt; &amp;lt;mapname&amp;gt;&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;/dev/mapper/&amp;lt;mapname&amp;gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Create the filesystem:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;mkfs -t ext4 /dev/mapper/&amp;lt;mapname&amp;gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Mount the filesystem:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;mount /dev/mapper/&amp;lt;mapname&amp;gt; /mnt&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Make filesystem persistant:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;vim /etc/fstab&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;/dev/mapper/&amp;lt;mapname&amp;gt; /cryptomount ext4 defaults 1 2&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Removing access to an encrypted device:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Umount the filesystem, if mounted:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;umount /mnt&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;cryptsetup luksClose mapname&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;To make LUKS devices available at boot time (persistance):&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;/etc/crypttab&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;&amp;lt;mapname&amp;gt; &amp;lt;device&amp;gt; [keyfile] [options]&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;To create a keyfile:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;dd if=/dev/urandom of=/etc/keyfile bs=1k count=4&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;cryptsetup luksAddKey &amp;lt;device&amp;gt; /etc/keyfile&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;chmod 400 /etc/keyfile&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;To test LUKS functionality for persistance:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;umount /cryptfs&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;cryptsetup luksClose mapname&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;#&amp;gt; bash&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;#&amp;gt; . /etc/init.d/functions&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;#&amp;gt; init_crypto 1&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;#&amp;gt; mount -a&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;#&amp;gt; ls /cryptfs&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;If I remember correctly, you can't do whole disk encryption with LUKS after the fact. Meaning, you can use LUKS to do whole disk encryption after the operating system has been installed. You can, however, create a back up of a partition like /home, encrypt it, then restore /home to your newly encrypted partition. I'll play around with this soon and get some solid details available for those of you looking for an TrueCrypt alternative for Linux. For now, I hope that this helps.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/2280836380030415423/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/05/linux-unified-key-setup_29.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2280836380030415423'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2280836380030415423'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/05/linux-unified-key-setup_29.html' title='Linux Unified Key Setup'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-389131550769136076</id><published>2014-04-11T22:05:00.001-05:00</published><updated>2019-04-11T13:49:42.585-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='OSPF'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNP SP Study Notes'/><title type='text'>OSPF Area Types and LSA's</title><content type='html'>Link State Advertisement (LSA) Types have never been my strong suite. I made a visual representation of how they are forwarded to help me get a better grasp on them.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-kpcbe9Pw__0/XK-MOhhJw5I/AAAAAAAA2Gw/_V9H4pZ5lYQxKXQg1E_k-V_4jMFr0LyuACLcBGAs/s1600/OSPF-Area-Types.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="543" data-original-width="910" height="190" src="https://4.bp.blogspot.com/-kpcbe9Pw__0/XK-MOhhJw5I/AAAAAAAA2Gw/_V9H4pZ5lYQxKXQg1E_k-V_4jMFr0LyuACLcBGAs/s320/OSPF-Area-Types.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Default - This isn't actually an LSA type. It's meant to represent a default route.&lt;/li&gt;&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Type 1 - Router Link - This is generated by a router and lists the neighboring routers and the cost of each router. This is only flooded within the area that the router interface exists in.&lt;/li&gt;&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Type 2 - Network Link - This is generated by the Designated Router (DR). This lists all routers within an adjacent segment. This is only flooded within the area that the router interface exists in.&lt;/li&gt;&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Type 3 - Network Summary - This is generated by an Area Border Router (ABR) and is advertised among all areas, except totally stubby areas and totally not-so-stubby areas.&lt;/li&gt;&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Type 4 - ASBR Summary - This is generated by an ABR informing other areas that an Autonomous System Border Router (ASBR) exists within it's network.&lt;/li&gt;&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Type 5 - External Link - This is generated by an ASBR and is flooded within its area. ABRs will also flood their connected areas with this type 5 LSA informing other areas that external networks exist within its area.&lt;/li&gt;&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Type 7 - NSSA External Link - This is generated by an ASBR participating in an not-so-stubby (NSSA) area. When the type 7 LSA reaches the ABR, It is converted to a type 5 LSA and forwarded to other areas informing them that an external network exists within its area.&lt;/li&gt;&lt;br /&gt;&lt;br /&gt;When a type 5 LSA enters a stubby area, it's entered into the RIB as a default route, striping the type 5 LSA routes. Type 5 LSAs are also not forwarded to not-so-stubby areas. To get external routes &lt;i&gt;INTO&lt;/i&gt; an not-so-stubby area, the area has to be converted to a totally not-so-stubby-area, which will remove all summaries and inject a default route.&lt;br /&gt;&lt;br /&gt;As you can see from the diagram, above, there are six area types.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Backbone Area&lt;/li&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Standard Area&lt;/li&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Not-so-stubby Area&lt;/li&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Totally stubby Area&lt;/li&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;li&gt;Totally not-so-stubby Area&lt;/li&gt;&lt;br /&gt;&lt;br /&gt;All areas have to be directly connected to area 0, which is the backbone area. All routers that exist within only area 0 or within just a single area are called backbone routers. Routers that connect to multiple OSPF areas are called ABRs. Routers that are connected to an OSPF area &lt;i&gt;AND&lt;/i&gt; connected to an external routing protocol (EIGRP, ISIS, RIP, BGP, static routes, etc) are called ASBRS.&lt;br /&gt;&lt;br /&gt;Stubby areas and totally stubby areas are areas that have one way in and one way out of an area. That is, they can't be connected to area 0 and any other area or external network at the same time, as a stubby and totally stubby area ABR will not forward type 5 LSAs to other areas. A totally stubby area will only have a default route injected into its network.&lt;br /&gt;&lt;br /&gt;Not-so-stubby and totally not-so-stubby areas can be connected to external networks and will forward the type 7 LSAs beyond their area. When the type 7 LSAs reach an ABR, the ABR will convert them to type 5 and forward them to the other areas.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/389131550769136076/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/04/ospf-area-types-and-lsa_11.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/389131550769136076'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/389131550769136076'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/04/ospf-area-types-and-lsa_11.html' title='OSPF Area Types and LSA&amp;#39;s'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://4.bp.blogspot.com/-kpcbe9Pw__0/XK-MOhhJw5I/AAAAAAAA2Gw/_V9H4pZ5lYQxKXQg1E_k-V_4jMFr0LyuACLcBGAs/s72-c/OSPF-Area-Types.png' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4261836726048508015</id><published>2014-04-05T15:50:00.001-05:00</published><updated>2019-04-11T13:49:03.730-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Innovative'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Virtualization'/><category scheme='http://www.blogger.com/atom/ns#' term='Miscellaneous Hacking'/><category scheme='http://www.blogger.com/atom/ns#' term='MySQL'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNP SP Study Notes'/><category scheme='http://www.blogger.com/atom/ns#' term='training'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS-XE'/><category scheme='http://www.blogger.com/atom/ns#' term='PHP'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS-XR'/><title type='text'>IOS-XR (XRv) and IOS-XE (CSR1000v) KVM Config Generation</title><content type='html'>As I'm mostly going to be using XRv and the CSR1000v to create my Service Provider Lab Environment to study for the CCNP Service Provider exams, I thought that I would throw together a quick script so that I can build lab environments quickly. If you've played with XRv or CSR1000v in KVM at all, you know that it's a hassle to generate your topologies. I've made that way easier with the "Virtual Network Lab Config Generator". Note that this doesn't generate device configs, but rather the KVM configuration that you use to spin up and connect your virtual devices. The code is on github.com. It was written hastily, so it's very rough. :)&lt;br /&gt;&lt;br /&gt;&lt;a href="https://github.com/jtdub/vnlcg" target="_blank" title="Virtual Network Lab Config Generator"&gt;Virtual Network Lab Config Generator&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Here is a screen shot:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-egOGh6jE_O4/XK-MFL3WN8I/AAAAAAAA2Go/u4-ojvYKnb02_pniAQeF-jX_Sxbcr8_agCLcBGAs/s1600/Screen-Shot-2014-04-05-at-8.53.49-PM1.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="663" data-original-width="738" height="287" src="https://1.bp.blogspot.com/-egOGh6jE_O4/XK-MFL3WN8I/AAAAAAAA2Go/u4-ojvYKnb02_pniAQeF-jX_Sxbcr8_agCLcBGAs/s320/Screen-Shot-2014-04-05-at-8.53.49-PM1.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;When used, it can generate complex KVM configs in a matter of minutes, rather than an hour or more. Here is an example:&lt;br /&gt;&lt;pre class="lang:default decode:true "&gt;# p1&lt;br /&gt;/bin/qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/p1-xr.raw &lt;br /&gt; -serial telnet::8110,server,nowait &lt;br /&gt; -net nic,model=virtio,vlan=1000,macaddr=00:01:00:ff:66:10 &lt;br /&gt; -net nic,model=virtio,vlan=10,macaddr=00:01:00:ff:10:10 &lt;br /&gt; -net socket,vlan=10,listen=127.0.0.1:7010 &lt;br /&gt; -net nic,model=virtio,vlan=11,macaddr=00:01:00:ff:10:11 &lt;br /&gt; -net socket,vlan=11,listen=127.0.0.1:7011 &lt;br /&gt; -net nic,model=virtio,vlan=12,macaddr=00:01:00:ff:10:12 &lt;br /&gt; -net socket,vlan=12,listen=127.0.0.1:7012 &lt;br /&gt; -net nic,model=virtio,vlan=13,macaddr=00:01:00:ff:10:13 &lt;br /&gt; -net socket,vlan=13,listen=127.0.0.1:7013 &lt;br /&gt; -net nic,model=virtio,vlan=14,macaddr=00:01:00:ff:10:14 &lt;br /&gt; -net socket,vlan=14,listen=127.0.0.1:7014 &lt;br /&gt; -net tap,ifname=tap10,vlan=1000,script=no &amp;amp;&lt;br /&gt;&lt;br /&gt;# p2&lt;br /&gt;/bin/qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/p2-xr.raw &lt;br /&gt; -serial telnet::8111,server,nowait &lt;br /&gt; -net nic,model=virtio,vlan=1000,macaddr=00:01:00:ff:66:11 &lt;br /&gt; -net nic,model=virtio,vlan=10,macaddr=00:01:00:ff:11:10 &lt;br /&gt; -net socket,vlan=10,connect=127.0.0.1:7010 &lt;br /&gt; -net nic,model=virtio,vlan=15,macaddr=00:01:00:ff:11:15 &lt;br /&gt; -net socket,vlan=15,listen=127.0.0.1:7015 &lt;br /&gt; -net nic,model=virtio,vlan=16,macaddr=00:01:00:ff:11:16 &lt;br /&gt; -net socket,vlan=16,listen=127.0.0.1:7016 &lt;br /&gt; -net nic,model=virtio,vlan=17,macaddr=00:01:00:ff:11:17 &lt;br /&gt; -net socket,vlan=17,listen=127.0.0.1:7017 &lt;br /&gt; -net nic,model=virtio,vlan=18,macaddr=00:01:00:ff:11:18 &lt;br /&gt; -net socket,vlan=18,listen=127.0.0.1:7018 &lt;br /&gt; -net tap,ifname=tap11,vlan=1000,script=no &amp;amp;&lt;br /&gt;&lt;br /&gt;# pe1&lt;br /&gt;/bin/qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/pe1-xr.raw &lt;br /&gt; -serial telnet::8112,server,nowait &lt;br /&gt; -net nic,model=virtio,vlan=1000,macaddr=00:01:00:ff:66:12 &lt;br /&gt; -net nic,model=virtio,vlan=11,macaddr=00:01:00:ff:12:11 &lt;br /&gt; -net socket,vlan=11,connect=127.0.0.1:7011 &lt;br /&gt; -net nic,model=virtio,vlan=15,macaddr=00:01:00:ff:12:15 &lt;br /&gt; -net socket,vlan=15,connect=127.0.0.1:7015 &lt;br /&gt; -net nic,model=virtio,vlan=19,macaddr=00:01:00:ff:12:19 &lt;br /&gt; -net socket,vlan=19,listen=127.0.0.1:7019 &lt;br /&gt; -net nic,model=virtio,vlan=20,macaddr=00:01:00:ff:12:20 &lt;br /&gt; -net socket,vlan=20,listen=127.0.0.1:7020 &lt;br /&gt; -net nic,model=virtio,vlan=27,macaddr=00:01:00:ff:12:27 &lt;br /&gt; -net socket,vlan=27,listen=127.0.0.1:7027 &lt;br /&gt; -net tap,ifname=tap12,vlan=1000,script=no &amp;amp;&lt;br /&gt;&lt;br /&gt;# pe2&lt;br /&gt;/bin/qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/pe2-xr.raw &lt;br /&gt; -serial telnet::8113,server,nowait &lt;br /&gt; -net nic,model=virtio,vlan=1000,macaddr=00:01:00:ff:66:13 &lt;br /&gt; -net nic,model=virtio,vlan=12,macaddr=00:01:00:ff:13:12 &lt;br /&gt; -net socket,vlan=12,connect=127.0.0.1:7012 &lt;br /&gt; -net nic,model=virtio,vlan=16,macaddr=00:01:00:ff:13:16 &lt;br /&gt; -net socket,vlan=16,connect=127.0.0.1:7016 &lt;br /&gt; -net nic,model=virtio,vlan=21,macaddr=00:01:00:ff:13:21 &lt;br /&gt; -net socket,vlan=21,listen=127.0.0.1:7021 &lt;br /&gt; -net nic,model=virtio,vlan=22,macaddr=00:01:00:ff:13:22 &lt;br /&gt; -net socket,vlan=22,listen=127.0.0.1:7022 &lt;br /&gt; -net nic,model=virtio,vlan=27,macaddr=00:01:00:ff:13:27 &lt;br /&gt; -net socket,vlan=27,connect=127.0.0.1:7027 &lt;br /&gt; -net tap,ifname=tap13,vlan=1000,script=no &amp;amp;&lt;br /&gt;&lt;br /&gt;# pe3&lt;br /&gt;/bin/qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/pe3-xe.raw &lt;br /&gt; -serial telnet::8114,server,nowait &lt;br /&gt; -net nic,model=virtio,vlan=1000,macaddr=00:01:00:ff:66:14 &lt;br /&gt; -net nic,model=virtio,vlan=13,macaddr=00:01:00:ff:14:13 &lt;br /&gt; -net socket,vlan=13,connect=127.0.0.1:7013 &lt;br /&gt; -net nic,model=virtio,vlan=17,macaddr=00:01:00:ff:14:17 &lt;br /&gt; -net socket,vlan=17,connect=127.0.0.1:7017 &lt;br /&gt; -net nic,model=virtio,vlan=23,macaddr=00:01:00:ff:14:23 &lt;br /&gt; -net socket,vlan=23,listen=127.0.0.1:7023 &lt;br /&gt; -net nic,model=virtio,vlan=24,macaddr=00:01:00:ff:14:24 &lt;br /&gt; -net socket,vlan=24,listen=127.0.0.1:7024 &lt;br /&gt; -net tap,ifname=tap14,vlan=1000,script=no &amp;amp;&lt;br /&gt;&lt;br /&gt;# pe4&lt;br /&gt;/bin/qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/pe4-xe.raw &lt;br /&gt; -serial telnet::8115,server,nowait &lt;br /&gt; -net nic,model=virtio,vlan=1000,macaddr=00:01:00:ff:66:15 &lt;br /&gt; -net nic,model=virtio,vlan=14,macaddr=00:01:00:ff:15:14 &lt;br /&gt; -net socket,vlan=14,connect=127.0.0.1:7014 &lt;br /&gt; -net nic,model=virtio,vlan=18,macaddr=00:01:00:ff:15:18 &lt;br /&gt; -net socket,vlan=18,connect=127.0.0.1:7018 &lt;br /&gt; -net nic,model=virtio,vlan=25,macaddr=00:01:00:ff:15:25 &lt;br /&gt; -net socket,vlan=25,listen=127.0.0.1:7025 &lt;br /&gt; -net nic,model=virtio,vlan=26,macaddr=00:01:00:ff:15:26 &lt;br /&gt; -net socket,vlan=26,listen=127.0.0.1:7026 &lt;br /&gt; -net tap,ifname=tap15,vlan=1000,script=no &amp;amp;&lt;br /&gt;&lt;br /&gt;# ce1&lt;br /&gt;/bin/qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/ce1-xe.raw &lt;br /&gt; -serial telnet::8116,server,nowait &lt;br /&gt; -net nic,model=virtio,vlan=1000,macaddr=00:01:00:ff:66:16 &lt;br /&gt; -net nic,model=virtio,vlan=19,macaddr=00:01:00:ff:16:19 &lt;br /&gt; -net socket,vlan=19,connect=127.0.0.1:7019 &lt;br /&gt; -net nic,model=virtio,vlan=21,macaddr=00:01:00:ff:16:21 &lt;br /&gt; -net socket,vlan=21,connect=127.0.0.1:7021 &lt;br /&gt; -net tap,ifname=tap16,vlan=1000,script=no &amp;amp;&lt;br /&gt;&lt;br /&gt;# ce2&lt;br /&gt;/bin/qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/ce2-xe.raw &lt;br /&gt; -serial telnet::8117,server,nowait &lt;br /&gt; -net nic,model=virtio,vlan=1000,macaddr=00:01:00:ff:66:17 &lt;br /&gt; -net nic,model=virtio,vlan=20,macaddr=00:01:00:ff:17:20 &lt;br /&gt; -net socket,vlan=20,connect=127.0.0.1:7020 &lt;br /&gt; -net nic,model=virtio,vlan=22,macaddr=00:01:00:ff:17:22 &lt;br /&gt; -net socket,vlan=22,connect=127.0.0.1:7022 &lt;br /&gt; -net tap,ifname=tap17,vlan=1000,script=no &amp;amp;&lt;br /&gt;&lt;br /&gt;# ce3&lt;br /&gt;/bin/qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/ce3-xr.raw &lt;br /&gt; -serial telnet::8118,server,nowait &lt;br /&gt; -net nic,model=virtio,vlan=1000,macaddr=00:01:00:ff:66:18 &lt;br /&gt; -net nic,model=virtio,vlan=23,macaddr=00:01:00:ff:18:23 &lt;br /&gt; -net socket,vlan=23,connect=127.0.0.1:7023 &lt;br /&gt; -net nic,model=virtio,vlan=25,macaddr=00:01:00:ff:18:25 &lt;br /&gt; -net socket,vlan=25,connect=127.0.0.1:7025 &lt;br /&gt; -net tap,ifname=tap18,vlan=1000,script=no &amp;amp;&lt;br /&gt;&lt;br /&gt;# ce4&lt;br /&gt;/bin/qemu-kvm -cpu kvm64 -nographic -m 2548 -hda /var/lib/libvirt/images/ce4-xr.raw &lt;br /&gt; -serial telnet::8119,server,nowait &lt;br /&gt; -net nic,model=virtio,vlan=1000,macaddr=00:01:00:ff:66:19 &lt;br /&gt; -net nic,model=virtio,vlan=24,macaddr=00:01:00:ff:19:24 &lt;br /&gt; -net socket,vlan=24,connect=127.0.0.1:7024 &lt;br /&gt; -net nic,model=virtio,vlan=26,macaddr=00:01:00:ff:19:26 &lt;br /&gt; -net socket,vlan=26,connect=127.0.0.1:7026 &lt;br /&gt; -net tap,ifname=tap19,vlan=1000,script=no &amp;amp;&lt;/pre&gt;&lt;br /&gt;The above configuration was completely generated automatically. Super simple. :)</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4261836726048508015/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/04/ios-xr-xrv-and-ios-xe-csr1000v-kvm_5.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4261836726048508015'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4261836726048508015'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/04/ios-xr-xrv-and-ios-xe-csr1000v-kvm_5.html' title='IOS-XR (XRv) and IOS-XE (CSR1000v) KVM Config Generation'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://1.bp.blogspot.com/-egOGh6jE_O4/XK-MFL3WN8I/AAAAAAAA2Go/u4-ojvYKnb02_pniAQeF-jX_Sxbcr8_agCLcBGAs/s72-c/Screen-Shot-2014-04-05-at-8.53.49-PM1.png' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1827239872210474380</id><published>2014-04-04T00:55:00.001-05:00</published><updated>2019-04-11T13:48:14.792-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNP SP Study Notes'/><title type='text'>CCNP - Service Provider - SPROUTE</title><content type='html'>I plan on studying for the CCNP Service Provider - SPROUTE exam over the up coming months. I suppose the best place to start is from the beginning and work my way through the requirements. As I study, I'll keep notes and publish them here. Up first, "OSPFv2 and OSPFv3 Routing in Service Provider Environments".&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-KI8d_5leSVc/XK-L3rltmWI/AAAAAAAA2Gk/AhX4_96odOIKGFFHMtXIrQ01EXzyubjcQCLcBGAs/s1600/Screen-Shot-2014-04-04-at-5.48.05-AM1.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="469" data-original-width="659" height="227" src="https://2.bp.blogspot.com/-KI8d_5leSVc/XK-L3rltmWI/AAAAAAAA2Gk/AhX4_96odOIKGFFHMtXIrQ01EXzyubjcQCLcBGAs/s320/Screen-Shot-2014-04-04-at-5.48.05-AM1.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;As I have make my notes, I'll create blogs about them.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/1827239872210474380/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/04/ccnp-service-provider-sproute_3.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1827239872210474380'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1827239872210474380'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/04/ccnp-service-provider-sproute_3.html' title='CCNP - Service Provider - SPROUTE'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://2.bp.blogspot.com/-KI8d_5leSVc/XK-L3rltmWI/AAAAAAAA2Gk/AhX4_96odOIKGFFHMtXIrQ01EXzyubjcQCLcBGAs/s72-c/Screen-Shot-2014-04-04-at-5.48.05-AM1.png' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-6052167709562263242</id><published>2014-02-17T08:36:00.001-06:00</published><updated>2019-04-11T11:10:00.233-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Python Scripting'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><title type='text'>TelnetCisco.py - A Reusable Module for Accessing Cisco Devices with
Python</title><content type='html'>For one reason or another, Python seems to have been my go to scripting language of choice recently. One of the things that I've been working on is creating a reusable python library for accessing Cisco devices via telnet. It's pretty basic code right now, but I'll be expanding upon what I have soon and will be sharing via github.com as well. For now, here is my simple library.&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;class TelnetCisco:&lt;br/&gt;	&lt;br/&gt;	def __init__(self, userName, userPass, enablePass, host):&lt;br/&gt;		self.userName = userName&lt;br/&gt;		self.userPass = userPass&lt;br/&gt;		self.enablePass = enablePass&lt;br/&gt;		self.host = host&lt;br/&gt;		&lt;br/&gt;	def getCreds(self):&lt;br/&gt;		import getpass&lt;br/&gt;		&lt;br/&gt;		self.userName = raw_input("Username: ")&lt;br/&gt;		self.userPass = getpass.getpass("User Password: ")&lt;br/&gt;		self.enablePass = getpass.getpass("Enable Password: ")&lt;br/&gt;		&lt;br/&gt;		return self.userName, self.userPass, self.enablePass&lt;br/&gt;		&lt;br/&gt;	def credsFile(self, authfile):&lt;br/&gt;		import os, sys&lt;br/&gt;		&lt;br/&gt;		if os.path.isfile(authfile):&lt;br/&gt;			login = open(authfile, "r")&lt;br/&gt;			self.userName = login.readline()&lt;br/&gt;			self.userName = self.userName.replace("username = ", "")&lt;br/&gt;			self.userName = self.userName.replace("\n", "")&lt;br/&gt;			self.userPass = login.readline()&lt;br/&gt;			self.userPass = self.userPass.replace("password = ", "")&lt;br/&gt;			self.userPass = self.userPass.replace("\n", "")&lt;br/&gt;			self.enablePass = login.readline()&lt;br/&gt;			self.enablePass = self.enablePass.replace("enable = ", "")&lt;br/&gt;			self.enablePass = self.enablePass.replace("\n", "")&lt;br/&gt;			login.close()&lt;br/&gt;		else:&lt;br/&gt;			print "Error:", authfile, "doesn't exist!"&lt;br/&gt;			sys.exit(2)&lt;br/&gt;			&lt;br/&gt;		return self.userName, self.userPass, self.enablePass&lt;br/&gt;&lt;br/&gt;	def devLogin(self, devType):&lt;br/&gt;		import telnetlib, re, sys&lt;br/&gt;		&lt;br/&gt;		TelnetCisco.devType = devType&lt;br/&gt;		telnet = telnetlib.Telnet(self.host)&lt;br/&gt;		&lt;br/&gt;		#usermode = re.match("(.*)" + "&amp;gt;", "&amp;gt;")&lt;br/&gt;		#enablemode = re.match("(.*)", "#")&lt;br/&gt;		&lt;br/&gt;		cmds2exe = ['show arp'] &lt;br/&gt;		&lt;br/&gt;		if devType == "ios":&lt;br/&gt;			telnet.read_until("Username: ", 20)&lt;br/&gt;			telnet.write(self.userName + "\r")&lt;br/&gt;			telnet.read_until("Password: ", 20)&lt;br/&gt;			telnet.write(self.userPass + "\r")&lt;br/&gt;			telnet.read_until(self.host + "&amp;gt;")&lt;br/&gt;			telnet.write("enable\r")&lt;br/&gt;			telnet.read_until("Password: ", 20)&lt;br/&gt;			telnet.write(self.enablePass + "\r")&lt;br/&gt;			telnet.read_until(self.host + "#")&lt;br/&gt;			telnet.write("term length 0\r")&lt;br/&gt;			telnet.read_until(self.host + "#")&lt;br/&gt;			#telnet.write("show arp\r")&lt;br/&gt;			#print telnet.read_until(self.host + "#")&lt;br/&gt;			for command in cmds2exe:&lt;br/&gt;				telnet.write(command + "\r")&lt;br/&gt;				print telnet.read_until(self.host + "#")&lt;br/&gt;			telnet.close()&lt;br/&gt;		else:&lt;br/&gt;			print "Error:", devType, "is unknown by this script.\n"&lt;br/&gt;			sys.exit(2)&lt;br/&gt;		&lt;br/&gt;		return devType, self.host&lt;br/&gt;		&lt;br/&gt;	def codeDebug(self):&lt;br/&gt;		print "### CODE DEBUG ###"&lt;br/&gt;		print "Username:", self.userName&lt;br/&gt;		print "User Password:", self.userPass&lt;br/&gt;		print "Enable Password:", self.enablePass&lt;br/&gt;		print "Host: ", self.host&lt;br/&gt;		print "Device Type: ", TelnetCisco.devType&lt;br/&gt;		print "### CODE DEBUG ###"&lt;br/&gt;&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;Usage is pretty simple. You need to specify a username, password, enable password, and host variable. To activate the module. The easiest way is to do it within the your python script.&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;import TelnetCisco&lt;br/&gt;&lt;br/&gt;username = 'somejoe'&lt;br/&gt;password = 'somepassword'&lt;br/&gt;enable = 'someenable'&lt;br/&gt;host = 'somerouter'&lt;br/&gt;&lt;br/&gt;somejob = TelnetCisco(username, password, enable, host)&lt;br/&gt;somejob.devLogin("ios")&lt;br/&gt;&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;Of course, the module also has options to specify a authentication file (credsFile(authfile)) or prompt prompt for your credentials (getCreds()). At the moment, the script only runs a 'show arp' on your devices. I'm still working on how I want to implement feeding commands to your devices. I'll post an update as I get more functionality working.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/6052167709562263242/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/02/telnetciscopy-reusable-module-for_17.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6052167709562263242'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6052167709562263242'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/02/telnetciscopy-reusable-module-for_17.html' title='TelnetCisco.py - A Reusable Module for Accessing Cisco Devices with&#xA;Python'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-7957051299860668247</id><published>2014-02-11T00:19:00.001-06:00</published><updated>2019-04-11T11:09:42.822-05:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Data Center'/><title type='text'>A Primer in Data Center Design</title><content type='html'>When most people think about data centers, they think about racks of servers in an air conditioned room. Very few people consider how those racks should be laid out, how much power is needed to power all the servers, switches, routers, etc, or how much cooling is needed to keep the room at a acceptable temperature to keep all that equipment in proper working order. This article will delve briefly into the concept of cool / hot isles, power requirements, and cooling requirements. &lt;br/&gt;&lt;br/&gt;I've worked in a few data centers over the years. Part of the job role that I assumed was determining data center design. Many IT folks, particularly in small data centers, think that it's just a room with a bunch of computers. In actuality, there is a lot of design considerations and two of the more important design considerations don't even involve technology. Those design considerations are power and cooling. This blog will go through some of those considerations when designing a data center.&lt;br/&gt;&lt;br/&gt;When designing a data center, the biggest factor that goes into how many servers that you can cram into a room or even just a rack is how much power that you have to work with. Every server and networking vendor worth their salt will provide power stats for their equipment. The things that you want to look for are Watts, Amperes, and power plug (receptacle) types.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;http://en.community.dell.com/support-forums/servers/f/946/t/18034583.aspx&lt;br/&gt;&lt;br/&gt;http://en.wikipedia.org/wiki/Ampere&lt;br/&gt;&lt;br/&gt;http://en.wikipedia.org/wiki/Watt&lt;br/&gt;&lt;br/&gt;http://users.cis.fiu.edu/~tho01/psg/plug/plug.html</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7957051299860668247'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7957051299860668247'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-2000089916985164378</id><published>2014-02-09T20:48:00.001-06:00</published><updated>2019-04-11T11:09:59.947-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='Puppet'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Quick intro to Puppet</title><content type='html'>I've been using puppet for a while to automate several things within the Linux servers that I manage. It's also one of those things that if I don't use it in a while, I forget it. So, I'm going to do a quick run through of registering a puppet agent with a puppet master. I'll also show some of the things that every Linux install gets pushed, aka the default settings.&lt;br/&gt;&lt;br/&gt;Here is my default manifest that every system gets:&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;[root@bastion ~]# cat /etc/puppet/manifests/site.pp &lt;br/&gt;node default {&lt;br/&gt;	file { "/etc/yum.repos.d/drivesrvr.repo":&lt;br/&gt;		mode =&amp;gt; '644',&lt;br/&gt;		owner =&amp;gt; root,&lt;br/&gt;		group =&amp;gt; root,&lt;br/&gt;		source =&amp;gt; "puppet:///files/drivesrvr.repo",&lt;br/&gt;	}&lt;br/&gt;        file { "/etc/hosts":&lt;br/&gt;		mode =&amp;gt; '644',&lt;br/&gt;		owner =&amp;gt; root,&lt;br/&gt;		group =&amp;gt; root,&lt;br/&gt;                source =&amp;gt; "puppet:///files/hosts",&lt;br/&gt;        }&lt;br/&gt;        file { "/etc/ssh/sshd_config":&lt;br/&gt;                mode =&amp;gt; '600',&lt;br/&gt;                owner =&amp;gt; root,&lt;br/&gt;                group =&amp;gt; root,&lt;br/&gt;                source =&amp;gt; "puppet:///files/sshd_config",&lt;br/&gt;        }&lt;br/&gt;        file { "/etc/pam.d/su":&lt;br/&gt;                mode =&amp;gt; '644',&lt;br/&gt;                owner =&amp;gt; root,&lt;br/&gt;                group =&amp;gt; root,&lt;br/&gt;                source =&amp;gt; "puppet:///files/su",&lt;br/&gt;        }&lt;br/&gt;	file { "/etc/sudoers":&lt;br/&gt;                mode =&amp;gt; '440',&lt;br/&gt;                owner =&amp;gt; root,&lt;br/&gt;                group =&amp;gt; root,&lt;br/&gt;		source =&amp;gt; "puppet:///files/sudoers",&lt;br/&gt;	}&lt;br/&gt;	file { "/etc/selinux/config":&lt;br/&gt;		mode =&amp;gt; '644',&lt;br/&gt;		owner =&amp;gt; root,&lt;br/&gt;		group =&amp;gt; root,&lt;br/&gt;		source =&amp;gt; "puppet:///files/selinux",&lt;br/&gt;	}&lt;br/&gt;	file { "/etc/yum.repos.d/epel.repo":&lt;br/&gt;		mode =&amp;gt; '644',&lt;br/&gt;		owner =&amp;gt; root,&lt;br/&gt;		group =&amp;gt; root,&lt;br/&gt;		source =&amp;gt; "puppet:///files/epel.repo",&lt;br/&gt;	}&lt;br/&gt;        file { "/etc/yum.repos.d/epel-testing.repo":&lt;br/&gt;                mode =&amp;gt; '644',&lt;br/&gt;                owner =&amp;gt; root,&lt;br/&gt;                group =&amp;gt; root,&lt;br/&gt;                source =&amp;gt; "puppet:///files/epel-testing.repo",&lt;br/&gt;        }&lt;br/&gt;        file { "/etc/logrotate.conf":&lt;br/&gt;                mode =&amp;gt; '644',&lt;br/&gt;                owner =&amp;gt; root,&lt;br/&gt;                group =&amp;gt; root,&lt;br/&gt;                source =&amp;gt; "puppet:///files/logrotate.conf",&lt;br/&gt;        }&lt;br/&gt;        file { "/etc/sysconfig/clock":&lt;br/&gt;                mode =&amp;gt; '644',&lt;br/&gt;                owner =&amp;gt; root,&lt;br/&gt;                group =&amp;gt; root,&lt;br/&gt;                source =&amp;gt; "puppet:///files/clock",&lt;br/&gt;        }&lt;br/&gt;	package { "denyhosts": &lt;br/&gt;		ensure =&amp;gt; installed,&lt;br/&gt;	}&lt;br/&gt;	package { "mailx":&lt;br/&gt;		ensure =&amp;gt; installed,&lt;br/&gt;	}&lt;br/&gt;	package { "vim-enhanced":&lt;br/&gt;		ensure =&amp;gt; installed,&lt;br/&gt;	}&lt;br/&gt;	package { "yum-cron":&lt;br/&gt;		ensure =&amp;gt; installed,&lt;br/&gt;	}&lt;br/&gt;        package { "driveclient":&lt;br/&gt;		ensure =&amp;gt; installed,&lt;br/&gt;	}&lt;br/&gt;	service { "yum-cron":&lt;br/&gt;		ensure =&amp;gt; running,&lt;br/&gt;		enable =&amp;gt; true,&lt;br/&gt;		subscribe =&amp;gt; [Package["yum-cron"]],&lt;br/&gt;	}&lt;br/&gt;	service { "denyhosts":&lt;br/&gt;		ensure =&amp;gt; running,&lt;br/&gt;		enable =&amp;gt; true,&lt;br/&gt;		subscribe =&amp;gt; [Package["denyhosts"]],&lt;br/&gt;	}&lt;br/&gt;	service { "driveclient":&lt;br/&gt;		ensure =&amp;gt; running,&lt;br/&gt;		enable =&amp;gt; true,&lt;br/&gt;		subscribe =&amp;gt; [Package["driveclient"]],&lt;br/&gt;	}&lt;br/&gt;	#class timezone-base {&lt;br/&gt;    	#	package { "tzdata":&lt;br/&gt;        #	ensure =&amp;gt; installed&lt;br/&gt;    	#	}&lt;br/&gt;    	#	file { "/etc/localtime":&lt;br/&gt;        #		source =&amp;gt; "file:///usr/share/zoneinfo/America/Chicago",&lt;br/&gt;        #		require =&amp;gt; Package["tzdata"]&lt;br/&gt;    	#	}&lt;br/&gt;	#}&lt;br/&gt;	#class timezone-central inherits timezone-base {&lt;br/&gt;	#}&lt;br/&gt;	user { "defaultuser":&lt;br/&gt;		allowdupe =&amp;gt; false,&lt;br/&gt;		comment =&amp;gt; "some default user",&lt;br/&gt;		ensure =&amp;gt; present,&lt;br/&gt;		groups =&amp;gt; ['wheel'],&lt;br/&gt;		home =&amp;gt; "/home/defaultuser",&lt;br/&gt;		managehome =&amp;gt; true,&lt;br/&gt;		shell =&amp;gt; '/bin/bash'&lt;br/&gt;		#password =&amp;gt; '', &lt;br/&gt;	}&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;The first thing that I do is install puppet on the new agent (client) node.&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;[root@puppet ~]# yum -y install puppet&lt;br/&gt;Loaded plugins: fastestmirror&lt;br/&gt;Determining fastest mirrors&lt;br/&gt;base                                                                                                                                                                                        | 3.7 kB     00:00     &lt;br/&gt;base/primary_db                                                                                                                                                                             | 4.4 MB     00:00     &lt;br/&gt;epel                                                                                                                                                                                        | 4.2 kB     00:00     &lt;br/&gt;epel/primary_db                                                                                                                                                                             | 5.9 MB     00:00     &lt;br/&gt;extras                                                                                                                                                                                      | 3.4 kB     00:00     &lt;br/&gt;extras/primary_db                                                                                                                                                                           |  19 kB     00:00     &lt;br/&gt;updates                                                                                                                                                                                     | 3.4 kB     00:00     &lt;br/&gt;updates/primary_db                                                                                                                                                                          | 1.4 MB     00:00     &lt;br/&gt;Setting up Install Process&lt;br/&gt;Resolving Dependencies&lt;br/&gt;--&amp;gt; Running transaction check&lt;br/&gt;---&amp;gt; Package puppet.noarch 0:2.7.23-1.el6 will be installed&lt;br/&gt;--&amp;gt; Processing Dependency: facter &amp;lt; 1:2.0 for package: puppet-2.7.23-1.el6.noarch&lt;br/&gt;--&amp;gt; Processing Dependency: ruby(abi) &amp;gt;= 1.8 for package: puppet-2.7.23-1.el6.noarch&lt;br/&gt;--&amp;gt; Processing Dependency: ruby &amp;gt;= 1.8.5 for package: puppet-2.7.23-1.el6.noarch&lt;br/&gt;--&amp;gt; Processing Dependency: facter &amp;gt;= 1.5 for package: puppet-2.7.23-1.el6.noarch&lt;br/&gt;--&amp;gt; Processing Dependency: ruby-shadow for package: puppet-2.7.23-1.el6.noarch&lt;br/&gt;--&amp;gt; Processing Dependency: ruby-augeas for package: puppet-2.7.23-1.el6.noarch&lt;br/&gt;--&amp;gt; Processing Dependency: ruby(selinux) for package: puppet-2.7.23-1.el6.noarch&lt;br/&gt;--&amp;gt; Processing Dependency: /usr/bin/ruby for package: puppet-2.7.23-1.el6.noarch&lt;br/&gt;--&amp;gt; Running transaction check&lt;br/&gt;---&amp;gt; Package facter.x86_64 0:1.6.18-3.el6 will be installed&lt;br/&gt;--&amp;gt; Processing Dependency: virt-what for package: facter-1.6.18-3.el6.x86_64&lt;br/&gt;--&amp;gt; Processing Dependency: pciutils for package: facter-1.6.18-3.el6.x86_64&lt;br/&gt;--&amp;gt; Processing Dependency: dmidecode for package: facter-1.6.18-3.el6.x86_64&lt;br/&gt;---&amp;gt; Package libselinux-ruby.x86_64 0:2.0.94-5.3.el6_4.1 will be installed&lt;br/&gt;---&amp;gt; Package ruby.x86_64 0:1.8.7.352-13.el6 will be installed&lt;br/&gt;---&amp;gt; Package ruby-augeas.x86_64 0:0.4.1-1.el6 will be installed&lt;br/&gt;--&amp;gt; Processing Dependency: augeas-libs &amp;gt;= 0.8.0 for package: ruby-augeas-0.4.1-1.el6.x86_64&lt;br/&gt;--&amp;gt; Processing Dependency: libaugeas.so.0(AUGEAS_0.8.0)(64bit) for package: ruby-augeas-0.4.1-1.el6.x86_64&lt;br/&gt;--&amp;gt; Processing Dependency: libaugeas.so.0(AUGEAS_0.12.0)(64bit) for package: ruby-augeas-0.4.1-1.el6.x86_64&lt;br/&gt;--&amp;gt; Processing Dependency: libaugeas.so.0(AUGEAS_0.11.0)(64bit) for package: ruby-augeas-0.4.1-1.el6.x86_64&lt;br/&gt;--&amp;gt; Processing Dependency: libaugeas.so.0(AUGEAS_0.10.0)(64bit) for package: ruby-augeas-0.4.1-1.el6.x86_64&lt;br/&gt;--&amp;gt; Processing Dependency: libaugeas.so.0(AUGEAS_0.1.0)(64bit) for package: ruby-augeas-0.4.1-1.el6.x86_64&lt;br/&gt;--&amp;gt; Processing Dependency: libaugeas.so.0()(64bit) for package: ruby-augeas-0.4.1-1.el6.x86_64&lt;br/&gt;---&amp;gt; Package ruby-libs.x86_64 0:1.8.7.352-13.el6 will be installed&lt;br/&gt;--&amp;gt; Processing Dependency: libreadline.so.5()(64bit) for package: ruby-libs-1.8.7.352-13.el6.x86_64&lt;br/&gt;---&amp;gt; Package ruby-shadow.x86_64 0:1.4.1-13.el6 will be installed&lt;br/&gt;--&amp;gt; Running transaction check&lt;br/&gt;---&amp;gt; Package augeas-libs.x86_64 0:1.0.0-5.el6_5.1 will be installed&lt;br/&gt;---&amp;gt; Package compat-readline5.x86_64 0:5.2-17.1.el6 will be installed&lt;br/&gt;---&amp;gt; Package dmidecode.x86_64 1:2.11-2.el6 will be installed&lt;br/&gt;---&amp;gt; Package pciutils.x86_64 0:3.1.10-2.el6 will be installed&lt;br/&gt;---&amp;gt; Package virt-what.x86_64 0:1.11-1.2.el6 will be installed&lt;br/&gt;--&amp;gt; Finished Dependency Resolution&lt;br/&gt;&lt;br/&gt;Dependencies Resolved&lt;br/&gt;&lt;br/&gt;===================================================================================================================================================================================================================&lt;br/&gt; Package                                                Arch                                         Version                                                   Repository                                     Size&lt;br/&gt;===================================================================================================================================================================================================================&lt;br/&gt;Installing:&lt;br/&gt; puppet                                                 noarch                                       2.7.23-1.el6                                              epel                                          3.0 M&lt;br/&gt;Installing for dependencies:&lt;br/&gt; augeas-libs                                            x86_64                                       1.0.0-5.el6_5.1                                           updates                                       309 k&lt;br/&gt; compat-readline5                                       x86_64                                       5.2-17.1.el6                                              base                                          130 k&lt;br/&gt; dmidecode                                              x86_64                                       1:2.11-2.el6                                              base                                           71 k&lt;br/&gt; facter                                                 x86_64                                       1.6.18-3.el6                                              epel                                           62 k&lt;br/&gt; libselinux-ruby                                        x86_64                                       2.0.94-5.3.el6_4.1                                        base                                           99 k&lt;br/&gt; pciutils                                               x86_64                                       3.1.10-2.el6                                              base                                           85 k&lt;br/&gt; ruby                                                   x86_64                                       1.8.7.352-13.el6                                          updates                                       534 k&lt;br/&gt; ruby-augeas                                            x86_64                                       0.4.1-1.el6                                               epel                                           21 k&lt;br/&gt; ruby-libs                                              x86_64                                       1.8.7.352-13.el6                                          updates                                       1.6 M&lt;br/&gt; ruby-shadow                                            x86_64                                       1.4.1-13.el6                                              epel                                           11 k&lt;br/&gt; virt-what                                              x86_64                                       1.11-1.2.el6                                              base                                           24 k&lt;br/&gt;&lt;br/&gt;Transaction Summary&lt;br/&gt;===================================================================================================================================================================================================================&lt;br/&gt;Install      12 Package(s)&lt;br/&gt;&lt;br/&gt;Total download size: 6.0 M&lt;br/&gt;Installed size: 15 M&lt;br/&gt;Downloading Packages:&lt;br/&gt;(1/12): augeas-libs-1.0.0-5.el6_5.1.x86_64.rpm                                                                                                                                              | 309 kB     00:00     &lt;br/&gt;(2/12): compat-readline5-5.2-17.1.el6.x86_64.rpm                                                                                                                                            | 130 kB     00:00     &lt;br/&gt;(3/12): dmidecode-2.11-2.el6.x86_64.rpm                                                                                                                                                     |  71 kB     00:00     &lt;br/&gt;(4/12): facter-1.6.18-3.el6.x86_64.rpm                                                                                                                                                      |  62 kB     00:00     &lt;br/&gt;(5/12): libselinux-ruby-2.0.94-5.3.el6_4.1.x86_64.rpm                                                                                                                                       |  99 kB     00:00     &lt;br/&gt;(6/12): pciutils-3.1.10-2.el6.x86_64.rpm                                                                                                                                                    |  85 kB     00:00     &lt;br/&gt;(7/12): puppet-2.7.23-1.el6.noarch.rpm                                                                                                                                                      | 3.0 MB     00:00     &lt;br/&gt;(8/12): ruby-1.8.7.352-13.el6.x86_64.rpm                                                                                                                                                    | 534 kB     00:00     &lt;br/&gt;(9/12): ruby-augeas-0.4.1-1.el6.x86_64.rpm                                                                                                                                                  |  21 kB     00:00     &lt;br/&gt;(10/12): ruby-libs-1.8.7.352-13.el6.x86_64.rpm                                                                                                                                              | 1.6 MB     00:00     &lt;br/&gt;(11/12): ruby-shadow-1.4.1-13.el6.x86_64.rpm                                                                                                                                                |  11 kB     00:00     &lt;br/&gt;(12/12): virt-what-1.11-1.2.el6.x86_64.rpm                                                                                                                                                  |  24 kB     00:00     &lt;br/&gt;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;Total                                                                                                                                                                              9.8 MB/s | 6.0 MB     00:00     &lt;br/&gt;warning: rpmts_HdrFromFdno: Header V3 RSA/SHA256 Signature, key ID 0608b895: NOKEY&lt;br/&gt;Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6&lt;br/&gt;Importing GPG key 0x0608B895:&lt;br/&gt; Userid : EPEL (6) &amp;lt;epel@fedoraproject.org&amp;gt;&lt;br/&gt; Package: epel-release-6-8.noarch (installed)&lt;br/&gt; From   : /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6&lt;br/&gt;Running rpm_check_debug&lt;br/&gt;Running Transaction Test&lt;br/&gt;Transaction Test Succeeded&lt;br/&gt;Running Transaction&lt;br/&gt;  Installing : 1:dmidecode-2.11-2.el6.x86_64                                                                                                                                                                  1/12 &lt;br/&gt;  Installing : virt-what-1.11-1.2.el6.x86_64                                                                                                                                                                  2/12 &lt;br/&gt;  Installing : augeas-libs-1.0.0-5.el6_5.1.x86_64                                                                                                                                                             3/12 &lt;br/&gt;  Installing : compat-readline5-5.2-17.1.el6.x86_64                                                                                                                                                           4/12 &lt;br/&gt;  Installing : ruby-libs-1.8.7.352-13.el6.x86_64                                                                                                                                                              5/12 &lt;br/&gt;  Installing : ruby-1.8.7.352-13.el6.x86_64                                                                                                                                                                   6/12 &lt;br/&gt;  Installing : ruby-augeas-0.4.1-1.el6.x86_64                                                                                                                                                                 7/12 &lt;br/&gt;  Installing : ruby-shadow-1.4.1-13.el6.x86_64                                                                                                                                                                8/12 &lt;br/&gt;  Installing : pciutils-3.1.10-2.el6.x86_64                                                                                                                                                                   9/12 &lt;br/&gt;  Installing : facter-1.6.18-3.el6.x86_64                                                                                                                                                                    10/12 &lt;br/&gt;  Installing : libselinux-ruby-2.0.94-5.3.el6_4.1.x86_64                                                                                                                                                     11/12 &lt;br/&gt;  Installing : puppet-2.7.23-1.el6.noarch                                                                                                                                                                    12/12 &lt;br/&gt;  Verifying  : libselinux-ruby-2.0.94-5.3.el6_4.1.x86_64                                                                                                                                                      1/12 &lt;br/&gt;  Verifying  : ruby-augeas-0.4.1-1.el6.x86_64                                                                                                                                                                 2/12 &lt;br/&gt;  Verifying  : facter-1.6.18-3.el6.x86_64                                                                                                                                                                     3/12 &lt;br/&gt;  Verifying  : ruby-libs-1.8.7.352-13.el6.x86_64                                                                                                                                                              4/12 &lt;br/&gt;  Verifying  : puppet-2.7.23-1.el6.noarch                                                                                                                                                                     5/12 &lt;br/&gt;  Verifying  : 1:dmidecode-2.11-2.el6.x86_64                                                                                                                                                                  6/12 &lt;br/&gt;  Verifying  : pciutils-3.1.10-2.el6.x86_64                                                                                                                                                                   7/12 &lt;br/&gt;  Verifying  : ruby-1.8.7.352-13.el6.x86_64                                                                                                                                                                   8/12 &lt;br/&gt;  Verifying  : virt-what-1.11-1.2.el6.x86_64                                                                                                                                                                  9/12 &lt;br/&gt;  Verifying  : compat-readline5-5.2-17.1.el6.x86_64                                                                                                                                                          10/12 &lt;br/&gt;  Verifying  : ruby-shadow-1.4.1-13.el6.x86_64                                                                                                                                                               11/12 &lt;br/&gt;  Verifying  : augeas-libs-1.0.0-5.el6_5.1.x86_64                                                                                                                                                            12/12 &lt;br/&gt;&lt;br/&gt;Installed:&lt;br/&gt;  puppet.noarch 0:2.7.23-1.el6                                                                                                                                                                                     &lt;br/&gt;&lt;br/&gt;Dependency Installed:&lt;br/&gt;  augeas-libs.x86_64 0:1.0.0-5.el6_5.1     compat-readline5.x86_64 0:5.2-17.1.el6     dmidecode.x86_64 1:2.11-2.el6        facter.x86_64 0:1.6.18-3.el6            libselinux-ruby.x86_64 0:2.0.94-5.3.el6_4.1    &lt;br/&gt;  pciutils.x86_64 0:3.1.10-2.el6           ruby.x86_64 0:1.8.7.352-13.el6             ruby-augeas.x86_64 0:0.4.1-1.el6     ruby-libs.x86_64 0:1.8.7.352-13.el6     ruby-shadow.x86_64 0:1.4.1-13.el6              &lt;br/&gt;  virt-what.x86_64 0:1.11-1.2.el6         &lt;br/&gt;&lt;br/&gt;Complete!&lt;br/&gt;&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;Next, I'll modify the /etc/hosts file and /etc/sysconfig/puppet file to specify my puppet master (puppet server).&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;[root@puppet ~]# history | grep vi&lt;br/&gt;    2  vi /etc/hosts&lt;br/&gt;    3  vi /etc/sysconfig/puppet &lt;br/&gt;    4  history | grep vi&lt;br/&gt;[root@puppet ~]# cat /etc/hosts&lt;br/&gt;127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4&lt;br/&gt;::1         localhost localhost.localdomain localhost6 localhost6.localdomain6&lt;br/&gt;&lt;br/&gt;172.17.0.5	puppet.test&lt;br/&gt;&lt;br/&gt;172.17.0.1	puppetmaster&lt;br/&gt;[root@puppet ~]# cat /etc/sysconfig/puppet &lt;br/&gt;# The puppetmaster server&lt;br/&gt;PUPPET_SERVER=puppetmaster&lt;br/&gt;&lt;br/&gt;# If you wish to specify the port to connect to do so here&lt;br/&gt;#PUPPET_PORT=8140&lt;br/&gt;&lt;br/&gt;# Where to log to. Specify syslog to send log messages to the system log.&lt;br/&gt;#PUPPET_LOG=/var/log/puppet/puppet.log&lt;br/&gt;&lt;br/&gt;# You may specify other parameters to the puppet client here&lt;br/&gt;#PUPPET_EXTRA_OPTS=--waitforcert=500&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;After that, I need to generate a ssl cert from the puppet agent to the puppet master.&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;[root@puppet ~]# puppet agent --test --server puppetmaster&lt;br/&gt;info: Creating a new SSL key for puppet.test&lt;br/&gt;info: Caching certificate for ca&lt;br/&gt;info: Creating a new SSL certificate request for puppet.test&lt;br/&gt;info: Certificate Request fingerprint (md5): 1D:89:5C:D3:DD:A4:47:53:5B:A4:A2:BB:17:6A:55:B0&lt;br/&gt;Exiting; no certificate found and waitforcert is disabled&lt;br/&gt;[root@puppet ~]# &lt;br/&gt;&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;When the key has been generated, hop on the puppetmaster server and sign the key.&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;[root@puppetmaster ~]# puppet cert list&lt;br/&gt;  "puppet.test" (1D:89:5C:D3:DD:A4:47:53:5B:A4:A2:BB:17:6A:55:B0)&lt;br/&gt;[root@puppetmaster ~]# puppet cert sign puppet.test&lt;br/&gt;notice: Signed certificate request for puppet.test&lt;br/&gt;notice: Removing file Puppet::SSL::CertificateRequest puppet.test at '/var/lib/puppet/ssl/ca/requests/puppet.test.pem'&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;Now hop back onto the puppet agent and test the newly sign certificate. If all is good, it should push your default config to the server. For brevity, I'll leave out the output of everything that it set up.&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;[root@puppet ~]# puppet agent --test --server puppetmaster&lt;br/&gt;info: Caching certificate for puppet.test&lt;br/&gt;info: Caching certificate_revocation_list for ca&lt;br/&gt;info: Caching catalog for puppet.test&lt;br/&gt;info: Applying configuration version '1392021450'&lt;br/&gt;……..&lt;br/&gt;info: Creating state file /var/lib/puppet/state/state.yaml&lt;br/&gt;notice: Finished catalog run in 19.31 seconds&lt;br/&gt;&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;Finally, the last thing to do is start the puppet service, on the agent, and verify that its running.&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;[root@puppet ~]# service puppet start&lt;br/&gt;Starting puppet:                                           [  OK  ]&lt;br/&gt;[root@puppet ~]# chkconfig puppet on&lt;br/&gt;[root@puppet ~]# ps ax | grep puppet&lt;br/&gt; 3330 ?        Ss     0:01 /usr/bin/ruby /usr/sbin/puppetd --server=puppetmaster&lt;br/&gt; 3538 pts/0    S+     0:00 grep puppet&lt;br/&gt;&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;Now you should have a fully functional puppet installation. Now you can create puppet manifests to automate your server(s) even more!</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/2000089916985164378/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2014/02/quick-intro-to-puppet_9.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2000089916985164378'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2000089916985164378'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2014/02/quick-intro-to-puppet_9.html' title='Quick intro to Puppet'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-367818243578461783</id><published>2013-12-04T17:53:00.001-06:00</published><updated>2019-04-11T11:09:59.691-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='VXLAN'/><category scheme='http://www.blogger.com/atom/ns#' term='Innovative'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='SDN'/><category scheme='http://www.blogger.com/atom/ns#' term='VLAN'/><category scheme='http://www.blogger.com/atom/ns#' term='Openstack'/><category scheme='http://www.blogger.com/atom/ns#' term='NVP'/><category scheme='http://www.blogger.com/atom/ns#' term='openvswitch'/><title type='text'>I'm going to place these here...</title><content type='html'>I found these articles fantastic and I wanted a quick place to reference them all. They are all in relation and deal with NVP, SDN, Open vSwitch, and VXLAN.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&lt;a title="Configuring VXLAN and GRE Tunnels on OpenvSwitch" href="http://networkstatic.net/configuring-vxlan-and-gre-tunnels-on-openvswitch/" target="_blank"&gt;Configuring VXLAN and GRE Tunnels on OpenvSwitch&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;a title="Install Open vSwitch 2.0 from RPM on RedHat Fedora" href="http://networkstatic.net/install-open-vswitch-v2-0-rpm-redhat-fedora/?utm_source=twitterfeed&amp;amp;utm_medium=twitter" target="_blank"&gt;Install Open vSwitch 2.0 from RPM on RedHat Fedora&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;a title="OpenStack: OVS Deep Dive" href="http://openvswitch.org/slides/OpenStack-131107.pdf" target="_blank"&gt;OpenStack: OVS Deep Dive&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;a title="OpenDaylight Controller:Installation - Wiki" href="https://wiki.opendaylight.org/view/OpenDaylight_Controller:Installation" target="_blank"&gt;OpenDaylight Controller:Installation - Wiki&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/367818243578461783/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/12/i-going-to-place-these-here_4.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/367818243578461783'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/367818243578461783'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/12/i-going-to-place-these-here_4.html' title='I&amp;#39;m going to place these here...'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-733575457523986260</id><published>2013-11-25T22:29:00.001-06:00</published><updated>2019-04-11T11:09:59.437-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='DMVPN'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='VRF'/><category scheme='http://www.blogger.com/atom/ns#' term='BGP'/><title type='text'>DMVPN with VRF's for the Internet interfaces and BGP</title><content type='html'>I've been playing with some different DMVPN configurations. In this scenario, I wanted the Internet facing interface to have a separate routing table, which I accomplished with a VRF. I also wanted to use a phase 2 DMVPN - which allows spokes to communicate directly to each other without having to send all traffic to the hub. The tricky part was getting the DMVPN tunnels to form over that interface. This is accomplished via the tunnel vrf command in the tunnel interface and specifying the vrf in the crypto keyring.&lt;br/&gt;&lt;br/&gt;Here is my hub config:&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;DMVPN-HUB1-R1#$l0/0.102|interface Loopback0|interface Tunnel0|ip prefix-list &lt;br/&gt;ip vrf Internet&lt;br/&gt; rd 500:1&lt;br/&gt;crypto keyring DMVPN vrf Internet&lt;br/&gt;  pre-shared-key address 0.0.0.0 0.0.0.0 key test123&lt;br/&gt;crypto isakmp policy 10&lt;br/&gt; authentication pre-share&lt;br/&gt; group 2&lt;br/&gt;crypto ipsec transform-set DMVPN ah-sha-hmac esp-aes 256 &lt;br/&gt; mode transport&lt;br/&gt;crypto ipsec profile DMVPN&lt;br/&gt; set transform-set DMVPN &lt;br/&gt;interface Loopback0&lt;br/&gt; ip vrf forwarding Internet&lt;br/&gt; ip address 151.0.0.1 255.255.255.0&lt;br/&gt;interface Tunnel0&lt;br/&gt; bandwidth 1544&lt;br/&gt; ip address 10.0.1.1 255.255.255.0&lt;br/&gt; no ip redirects&lt;br/&gt; ip mtu 1400&lt;br/&gt; ip nhrp authentication test123&lt;br/&gt; ip nhrp map multicast dynamic&lt;br/&gt; ip nhrp network-id 1234&lt;br/&gt; ip tcp adjust-mss 1360&lt;br/&gt; load-interval 30&lt;br/&gt; cdp enable&lt;br/&gt; tunnel source Loopback0&lt;br/&gt; tunnel mode gre multipoint&lt;br/&gt; tunnel key 12345&lt;br/&gt; tunnel vrf Internet&lt;br/&gt; tunnel protection ipsec profile DMVPN&lt;br/&gt;interface Serial0/0.102 point-to-point&lt;br/&gt; ip vrf forwarding Internet&lt;br/&gt; ip address 150.0.0.2 255.255.255.252&lt;br/&gt; frame-relay interface-dlci 102   &lt;br/&gt;router bgp 500&lt;br/&gt; no synchronization&lt;br/&gt; bgp log-neighbor-changes&lt;br/&gt; neighbor 10.0.1.2 remote-as 600&lt;br/&gt; neighbor 10.0.1.2 prefix-list TUN out&lt;br/&gt; no auto-summary&lt;br/&gt; !&lt;br/&gt; address-family ipv4 vrf Internet&lt;br/&gt;  neighbor 150.0.0.1 remote-as 100&lt;br/&gt;  neighbor 150.0.0.1 activate&lt;br/&gt;  neighbor 150.0.0.1 send-community&lt;br/&gt;  no synchronization&lt;br/&gt;  network 151.0.0.0 mask 255.255.255.0&lt;br/&gt; exit-address-family&lt;br/&gt;ip prefix-list BGP seq 5 permit 151.0.0.0/24&lt;br/&gt;ip prefix-list TUN seq 5 permit 10.0.1.0/24&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;Here is my spoke config:&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;DMVPN-SPOKE1-R4#$interface Serial0/1/0|interface Tunnel0|interface Loopback0 &lt;br/&gt;ip vrf Internet&lt;br/&gt; rd 600:1&lt;br/&gt;crypto keyring DMVPN vrf Internet&lt;br/&gt;  pre-shared-key address 0.0.0.0 0.0.0.0 key test123&lt;br/&gt;crypto isakmp policy 10&lt;br/&gt; authentication pre-share&lt;br/&gt; group 2&lt;br/&gt;crypto ipsec transform-set DMVPN ah-sha-hmac esp-aes 256 &lt;br/&gt; mode transport&lt;br/&gt;crypto ipsec profile DMVPN&lt;br/&gt; set transform-set DMVPN &lt;br/&gt;interface Loopback0&lt;br/&gt; ip vrf forwarding Internet&lt;br/&gt; ip address 152.0.0.1 255.255.255.0&lt;br/&gt;interface Tunnel0&lt;br/&gt; bandwidth 1544&lt;br/&gt; ip address 10.0.1.2 255.255.255.0&lt;br/&gt; no ip redirects&lt;br/&gt; ip mtu 1400&lt;br/&gt; ip nhrp authentication test123&lt;br/&gt; ip nhrp map multicast dynamic&lt;br/&gt; ip nhrp map 10.0.1.1 151.0.0.1&lt;br/&gt; ip nhrp map multicast 151.0.0.1&lt;br/&gt; ip nhrp network-id 1234&lt;br/&gt; ip nhrp nhs 10.0.1.1&lt;br/&gt; ip tcp adjust-mss 1360&lt;br/&gt; load-interval 30&lt;br/&gt; cdp enable&lt;br/&gt; tunnel source Loopback0&lt;br/&gt; tunnel mode gre multipoint&lt;br/&gt; tunnel key 12345&lt;br/&gt; tunnel vrf Internet&lt;br/&gt; tunnel protection ipsec profile DMVPN&lt;br/&gt;interface Serial0/1/0&lt;br/&gt; ip vrf forwarding Internet&lt;br/&gt; ip address 150.0.0.10 255.255.255.252&lt;br/&gt; encapsulation ppp&lt;br/&gt; clock rate 1024000&lt;br/&gt;router bgp 600&lt;br/&gt; no synchronization&lt;br/&gt; bgp router-id 152.0.0.1&lt;br/&gt; bgp log-neighbor-changes&lt;br/&gt; neighbor 10.0.1.1 remote-as 500&lt;br/&gt; neighbor 10.0.1.1 prefix-list TUN out&lt;br/&gt; no auto-summary&lt;br/&gt; !&lt;br/&gt; address-family ipv4 vrf Internet&lt;br/&gt;  neighbor 150.0.0.9 remote-as 100&lt;br/&gt;  neighbor 150.0.0.9 activate&lt;br/&gt;  no synchronization&lt;br/&gt;  network 152.0.0.0 mask 255.255.255.0&lt;br/&gt; exit-address-family&lt;br/&gt;ip prefix-list BGP seq 5 permit 152.0.0.0/24&lt;br/&gt;ip prefix-list TUN seq 5 permit 10.0.1.0/24&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;One of the scenarios that I wanted to play with was having BGP dynamically create peers. However, my specific version of code doesn't support dynamic BGP peers. If my code did support it, the BGP config would look something like:&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;! Configuration for the HUB&lt;br/&gt;router bgp 500&lt;br/&gt; neighbor spokes peer-group&lt;br/&gt; bgp listen range 10.0.1.0/24 peer-group spokes&lt;br/&gt; neighbor spokes remote-as 600&lt;br/&gt; neighbor spokes next-hop-self&lt;br/&gt; neighbor spokes send-community&lt;br/&gt;&lt;br/&gt;! Configuration for the Spokes&lt;br/&gt;router bgp 600&lt;br/&gt; neighbor 10.0.1.1 remote-as 500&lt;br/&gt; neighbor 10.0.1.1 allowas-in 1&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;Update:&lt;br/&gt;&lt;br/&gt;I had an interesting idea. Having the hub's and the spokes in the same BGP ASN. Having the DMVPN hubs act as BGP route reflectors and having the spoke connect to the hubs. As the hubs are route reflectors, they will propagate all routes about the spokes to all other spokes. In a DMVPN phase 2 scenario, this would allow the spokes to communicate next to each other as the spokes know about each other through BGP next-hop. I set it up in my lab and it actually works pretty well.&lt;br/&gt;&lt;br/&gt;Here the BGP configuration from my hub:&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;DMVPN-HUB1-R1#sh run | s router bgp&lt;br/&gt;router bgp 500&lt;br/&gt; template peer-policy spokes&lt;br/&gt;  route-reflector-client&lt;br/&gt;  soft-reconfiguration inbound&lt;br/&gt;  send-community&lt;br/&gt; exit-peer-policy&lt;br/&gt; !&lt;br/&gt; template peer-session spokes&lt;br/&gt;  remote-as 500&lt;br/&gt; exit-peer-session&lt;br/&gt; !&lt;br/&gt; no synchronization&lt;br/&gt; bgp cluster-id 10.0.1.1&lt;br/&gt; bgp log-neighbor-changes&lt;br/&gt; network 10.10.10.0 mask 255.255.255.0&lt;br/&gt; neighbor spokes peer-group&lt;br/&gt; neighbor 10.0.1.2 inherit peer-session spokes&lt;br/&gt; neighbor 10.0.1.2 inherit peer-policy spokes&lt;br/&gt; neighbor 10.0.1.3 inherit peer-session spokes&lt;br/&gt; neighbor 10.0.1.3 inherit peer-policy spokes&lt;br/&gt; no auto-summary&lt;br/&gt; !&lt;br/&gt; address-family ipv4 vrf Internet&lt;br/&gt;  neighbor 150.0.0.1 remote-as 100&lt;br/&gt;  neighbor 150.0.0.1 activate&lt;br/&gt;  neighbor 150.0.0.1 send-community&lt;br/&gt;  neighbor 150.0.0.1 allowas-in&lt;br/&gt;  no synchronization&lt;br/&gt;  network 151.0.0.0 mask 255.255.255.0&lt;br/&gt; exit-address-family&lt;br/&gt;&lt;/pre&gt; &lt;br/&gt; &lt;br/&gt;Here is the BGP configuration from one of my spokes:&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;DMVPN-SPOKE1-R4#sh run | s router bgp&lt;br/&gt;router bgp 500&lt;br/&gt; template peer-policy hub&lt;br/&gt;  prefix-list TUN out&lt;br/&gt;  soft-reconfiguration inbound&lt;br/&gt;  send-community&lt;br/&gt; exit-peer-policy&lt;br/&gt; !&lt;br/&gt; template peer-session hub&lt;br/&gt;  remote-as 500&lt;br/&gt; exit-peer-session&lt;br/&gt; !&lt;br/&gt; no synchronization&lt;br/&gt; bgp log-neighbor-changes&lt;br/&gt; network 10.10.20.0 mask 255.255.255.0&lt;br/&gt; neighbor 10.0.1.1 inherit peer-session hub&lt;br/&gt; neighbor 10.0.1.1 inherit peer-policy hub&lt;br/&gt; no auto-summary&lt;br/&gt; !&lt;br/&gt; address-family ipv4 vrf Internet&lt;br/&gt;  neighbor 150.0.0.9 remote-as 100&lt;br/&gt;  neighbor 150.0.0.9 activate&lt;br/&gt;  neighbor 150.0.0.9 send-community&lt;br/&gt;  neighbor 150.0.0.9 allowas-in&lt;br/&gt;  no synchronization&lt;br/&gt;  network 152.0.0.0 mask 255.255.255.0&lt;br/&gt; exit-address-family&lt;br/&gt;&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;Here is the isakmp session status, BGP table, and trace route to a neighbor spoke from the DMVPN-SPOKE1-R4 spoke.&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;DMVPN-SPOKE1-R4#sh crypto isakmp sa&lt;br/&gt;dst             src             state          conn-id slot status&lt;br/&gt;151.0.0.1       152.0.0.1       QM_IDLE              1    0 ACTIVE&lt;br/&gt;152.0.0.1       153.0.0.1       QM_IDLE              2    0 ACTIVE&lt;br/&gt;&lt;br/&gt;DMVPN-SPOKE1-R4#sh ip bgp sum&lt;br/&gt;BGP router identifier 10.10.20.1, local AS number 500&lt;br/&gt;BGP table version is 14, main routing table version 14&lt;br/&gt;3 network entries using 351 bytes of memory&lt;br/&gt;3 path entries using 156 bytes of memory&lt;br/&gt;6/2 BGP path/bestpath attribute entries using 744 bytes of memory&lt;br/&gt;1 BGP rrinfo entries using 24 bytes of memory&lt;br/&gt;2 BGP AS-PATH entries using 48 bytes of memory&lt;br/&gt;0 BGP route-map cache entries using 0 bytes of memory&lt;br/&gt;0 BGP filter-list cache entries using 0 bytes of memory&lt;br/&gt;BGP using 1323 total bytes of memory&lt;br/&gt;BGP activity 14/6 prefixes, 18/10 paths, scan interval 60 secs&lt;br/&gt;&lt;br/&gt;Neighbor        V    AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd&lt;br/&gt;10.0.1.1        4   500     263     252       14    0    0 03:42:25        2&lt;br/&gt;DMVPN-SPOKE1-R4#sh ip bgp &lt;br/&gt;BGP table version is 14, local router ID is 10.10.20.1&lt;br/&gt;Status codes: s suppressed, d damped, h history, * valid, &amp;gt; best, i - internal,&lt;br/&gt;              r RIB-failure, S Stale&lt;br/&gt;Origin codes: i - IGP, e - EGP, ? - incomplete&lt;br/&gt;&lt;br/&gt;   Network          Next Hop            Metric LocPrf Weight Path&lt;br/&gt;*&amp;gt;i10.10.10.0/24    10.0.1.1                 0    100      0 i&lt;br/&gt;*&amp;gt; 10.10.20.0/24    0.0.0.0                  0         32768 i&lt;br/&gt;*&amp;gt;i10.10.30.0/24    10.0.1.3                 0    100      0 i&lt;br/&gt;DMVPN-SPOKE1-R4#ping 10.10.30.1&lt;br/&gt;&lt;br/&gt;Type escape sequence to abort.&lt;br/&gt;Sending 5, 100-byte ICMP Echos to 10.10.30.1, timeout is 2 seconds:&lt;br/&gt;!!!!!&lt;br/&gt;Success rate is 100 percent (5/5), round-trip min/avg/max = 4/13/24 ms&lt;br/&gt;DMVPN-SPOKE1-R4#tracero&lt;br/&gt;DMVPN-SPOKE1-R4#traceroute 10.10.30.1&lt;br/&gt;&lt;br/&gt;Type escape sequence to abort.&lt;br/&gt;Tracing the route to 10.10.30.1&lt;br/&gt;&lt;br/&gt;  1 10.0.1.3 4 msec 4 msec * &lt;br/&gt;&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;One way to make this scale, without manual intervention of having to add neighbor relationships in BGP would be to have the dynamic neighbor relations statement in the DMVPN hubs. In my lab set up, BGP works pretty well in a DMVPN environment.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/733575457523986260/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/11/dmvpn-with-vrf-for-internet-interfaces_25.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/733575457523986260'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/733575457523986260'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/11/dmvpn-with-vrf-for-internet-interfaces_25.html' title='DMVPN with VRF&amp;#39;s for the Internet interfaces and BGP'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4858354386802054270</id><published>2013-11-22T17:53:00.001-06:00</published><updated>2019-04-11T11:09:59.176-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Filesystems'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Rackspace'/><title type='text'>Rackspace Performance vs Standard Cloud Server Disk I/O</title><content type='html'>I just spun up a Rackspace High Performance Cloud Server and ran some i/o benchmarks on it and compared it to one of my standard cloud servers. Here are my findings.&lt;br/&gt;&lt;br/&gt;This is the script that I ran to gather I/O stats:&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;#!/usr/bin/perl&lt;br/&gt;&lt;br/&gt;use strict;&lt;br/&gt;use warnings;&lt;br/&gt;&lt;br/&gt;my $ioFilePath = "/root/iofile";&lt;br/&gt;my $testNumber = "1";&lt;br/&gt;my $ioStatsFile = "/root/iostats.txt";&lt;br/&gt;my $testLength = "10";&lt;br/&gt;&lt;br/&gt;if(-e $ioStatsFile) {&lt;br/&gt;    `rm -f $ioStatsFile`;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;while ($testNumber &amp;lt;= $testLength) {&lt;br/&gt;    if(-e $ioFilePath) {&lt;br/&gt;        print "Removing $ioFilePath before starting the test. Test: $testNumber.\n";&lt;br/&gt;        `rm -f $ioFilePath`;&lt;br/&gt;    }&lt;br/&gt;    open(STATS, "&amp;gt;&amp;gt; $ioStatsFile");&lt;br/&gt;        print STATS "-----------------------------------------\n";&lt;br/&gt;        print STATS "\nTesting write speeds. Test: $testNumber.\n\n";&lt;br/&gt;        print STATS `dd if=/dev/zero of=$ioFilePath bs=1M count=2048 2&amp;gt;&amp;gt; $ioStatsFile`;&lt;br/&gt;        print STATS "\nTesting read speeds. Test $testNumber.\n\n";&lt;br/&gt;        print STATS `dd if=$ioFilePath of=/dev/zero 2&amp;gt;&amp;gt; $ioStatsFile`;&lt;br/&gt;        print STATS "-----------------------------------------\n\n";&lt;br/&gt;    $testNumber++;        &lt;br/&gt;}&lt;br/&gt;close(STATS);&lt;br/&gt;&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;As you can see, it's a simple test that writes 2GB of 0's to a file, turns around and reads it, then runs the test nine more times. &lt;br/&gt;&lt;br/&gt;First, here are the stats from my standard cloud server:&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 1.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 22.2371 s, 96.6 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 1.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 25.4539 s, 84.4 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 2.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 20.1222 s, 107 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 2.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 23.5922 s, 91.0 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 3.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 16.7066 s, 129 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 3.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 22.2455 s, 96.5 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 4.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 16.0221 s, 134 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 4.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 22.5168 s, 95.4 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 5.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 15.4431 s, 139 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 5.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 22.5327 s, 95.3 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 6.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 15.9895 s, 134 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 6.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 23.5538 s, 91.2 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 7.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 15.9522 s, 135 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 7.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 23.3412 s, 92.0 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 8.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 16.306 s, 132 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 8.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 22.0596 s, 97.3 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 9.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 15.1251 s, 142 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 9.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 22.169 s, 96.9 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 10.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 16.9925 s, 126 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 10.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 22.6342 s, 94.9 MB/s&lt;br/&gt;-----------------------------------------&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;Average Write Speed: 127.46 MB/s&lt;br/&gt;Average Read Speed: 93.49 MB/s&lt;br/&gt;&lt;br/&gt;Now here are the results from the High Performance Server:&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 1.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 6.65244 s, 323 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 1.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 12.4408 s, 173 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 2.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 8.77157 s, 245 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 2.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 11.7669 s, 183 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 3.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 4.14636 s, 518 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 3.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 12.9577 s, 166 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 4.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 4.13664 s, 519 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 4.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 11.2337 s, 191 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 5.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 4.22346 s, 508 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 5.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 12.9633 s, 166 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 6.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 4.12969 s, 520 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 6.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 12.8751 s, 167 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 7.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 4.2136 s, 510 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 7.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 12.1281 s, 177 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 8.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 4.20004 s, 511 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 8.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 12.2221 s, 176 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 9.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 4.20901 s, 510 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 9.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 13.1822 s, 163 MB/s&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;-----------------------------------------&lt;br/&gt;&lt;br/&gt;Testing write speeds. Test: 10.&lt;br/&gt;&lt;br/&gt;2048+0 records in&lt;br/&gt;2048+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 4.17714 s, 514 MB/s&lt;br/&gt;&lt;br/&gt;Testing read speeds. Test 10.&lt;br/&gt;&lt;br/&gt;4194304+0 records in&lt;br/&gt;4194304+0 records out&lt;br/&gt;2147483648 bytes (2.1 GB) copied, 11.1146 s, 193 MB/s&lt;br/&gt;-----------------------------------------&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;Average Write Speed: 467.8 MB/s&lt;br/&gt;Average Read Speed: 175.5 MB/s&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;(467.8 - 127.46) / 127.46 = 2.67&lt;br/&gt;(175.5 - 93.49) / 93.49 = .877&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;As you can see, given my simple test, High Performance Cloud Servers have a write speed that is 267% faster and a read speed that is 88% faster than the standard Cloud Servers from Rackspace. Pretty interesting!</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4858354386802054270/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/11/rackspace-performance-vs-standard-cloud_22.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4858354386802054270'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4858354386802054270'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/11/rackspace-performance-vs-standard-cloud_22.html' title='Rackspace Performance vs Standard Cloud Server Disk I/O'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-7303945202677656015</id><published>2013-11-10T09:52:00.001-06:00</published><updated>2019-04-11T11:09:58.915-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Net Nuetrality'/><category scheme='http://www.blogger.com/atom/ns#' term='ATamp;T'/><title type='text'>Why I will be Boycotting AT&amp;T.</title><content type='html'>I've recently have been experiencing issues with my IPv6 Tunnel with Tunnelbroker.net. While doing some searching on the Internet, I ran across this &lt;a href="http://forums.att.com/t5/2013/Re-UVerse-and-IPv6-Tunneling-with-3800-HGV-B/m-p/3797755#M40077" target="_blank"&gt;forum thread&lt;/a&gt; on AT&amp;T, with users experiencing the same issue. &lt;br/&gt;&lt;br/&gt;It appears that AT&amp;T is blocking SIT and GRE tunnels purposely - which have very legitimate purposes. After reading the forum thread, I filed a complaint with the FCC about AT&amp;T violating network neutrality rules. I then posted my actions on the thread and listed the FCC complaint reference number - 13-C00539997. &lt;br/&gt;&lt;br/&gt;Shortly after, AT&amp;T removed the reference number from my post. I then edited the post and added it back. The AT&amp;T moderator then removed it again and sent me a private message stating that I wasn't allowed to post personal information. I replied back to her message and stated that it wasn't personal information and that it was a FCC complaint reference number. After sending the message, I again edited the post and added the reference number back. And told the moderator, by name, to not remove the reference number.&lt;br/&gt;&lt;br/&gt;Now, I'm banned from the thread, and I got a nice nasty gram from the AT&amp;T moderator&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;Hello,&lt;br/&gt;&lt;br/&gt;Your post was removed per Guidelines:&lt;br/&gt;&lt;br/&gt;Keep it Relevant and Appropriate&lt;br/&gt;For everyone's benefit please stay on topic. These Community Forums are provided to encourage knowledge-sharing of AT&amp;T products and services with others. Please refrain from discussing personal matters or, in general, from posting content in a manner unrelated to the resolution of issues regarding AT&amp;amp;T products and services. Other inappropriate or unacceptable behavior includes: a) discussing how to violate any policy or agreement entered into with AT&amp;amp;T for any product or service, b) posting content which is created solely to “bump” an existing topic or to evade the word filter or site logic; c) double-posting or cross-posting; and d) discussing participant bans or other Moderator actions. The Community Forum is not a venue for discussion of legal matters. Therefore, no such discussions are permitted. We reserve the right to delete inappropriate material.&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;With customer service like this, my FCC complaint will be for nought, as I'm just going to boycott AT&amp;T products all together. So long, AT&amp;T, you'll hardly be missed.&lt;br/&gt;&lt;br/&gt;Update:&lt;br/&gt;&lt;br/&gt;I received another private message, this time from another forum moderator.&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;Hello jtdub,&lt;br/&gt; &lt;br/&gt;We have set your account to Read-Only Status.&lt;br/&gt; &lt;br/&gt;In order to reinstate your posting permissions, you must review the User Guidelines and reply to this message indicating you have read and agree to those user Guidelines.&lt;br/&gt; &lt;br/&gt;Once we receive your reply, your posting permissions will be reinstated in 48 hours.&lt;br/&gt; &lt;br/&gt;This action has been taken because you have violated multiple sections of the Guidelines numerous times despite being previously warned.&lt;br/&gt; &lt;br/&gt;Please be advised that further violations may result in the permanent removal of your posting permissions.&lt;br/&gt; &lt;br/&gt;The AT&amp;amp;T Moderator Staff&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;Here is my response:&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;I only violated the guideline of talking about why I was being moderated. Period. I did not violate the term of posting personal information, which initiated my rant. I do not agree with the terms of the guidelines and I do not agree with the horrible customer service actions that were taken against me. In the end, all is for naught. AT&amp;amp;T has lost me as a loyal customer of the past 15 years. No longer will I use AT&amp;amp;T. I'll be calling on Monday to cancel my service. Nor will I recommend it to friends, family, and colleagues. The forum moderation is horrendous and I will not soon forget this.&lt;br/&gt; &lt;br/&gt;Regards,&lt;br/&gt; &lt;br/&gt;James&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/7303945202677656015/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/11/why-i-will-be-boycotting-at_10.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7303945202677656015'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7303945202677656015'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/11/why-i-will-be-boycotting-at_10.html' title='Why I will be Boycotting AT&amp;amp;T.'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5699793250130821449</id><published>2013-10-10T14:05:00.001-05:00</published><updated>2019-04-11T11:09:58.658-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Python Scripting'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='System Administration'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><title type='text'>Managing Cisco Routers / Switches with Python, Take 2</title><content type='html'>Here is my script to date. It's functional and works pretty well, in my limited testing. &lt;br/&gt;&lt;br/&gt;I'll put my future revisions on &lt;a href="https://github.com/jtdub/pyMultiChange/" target="_blank"&gt;github.com/jtdub/pyMultiChange&lt;/a&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;#!/usr/bin/env python&lt;br/&gt;&lt;br/&gt;import getpass, sys, telnetlib, os, argparse&lt;br/&gt;&lt;br/&gt;# Variables&lt;br/&gt;tacacs = '.tacacslogin'&lt;br/&gt;verbose = False &lt;br/&gt;devicetype = 'ios'&lt;br/&gt;hostsfile = ''&lt;br/&gt;commandsfile = ''&lt;br/&gt;&lt;br/&gt;def main():&lt;br/&gt;    # Parse and display argument variables&lt;br/&gt;    global verbose, devicetype, hostsfile, commandsfile&lt;br/&gt;    parser = argparse.ArgumentParser(description='Managing Cisco routers/switches with Python')&lt;br/&gt;    parser.add_argument('-d', '--hosts', help='Specifies a host file')&lt;br/&gt;    parser.add_argument('-c', '--commands',  help='Specifies a commands file', required=True)&lt;br/&gt;    parser.add_argument('-v', '--verbose', help='Be verbose with command output')&lt;br/&gt;    parser.add_argument('-n', '--nexus', help='Execute script assuming Nexus hosts')&lt;br/&gt;&lt;br/&gt;    args = vars(parser.parse_args())&lt;br/&gt;&lt;br/&gt;    if args['hosts']:&lt;br/&gt;        hostsfile = args['hosts'] &lt;br/&gt;    if args['commands']:&lt;br/&gt;        commandsfile = args['commands']&lt;br/&gt;    if args['verbose']:&lt;br/&gt;        args['verbose'] = True&lt;br/&gt;        verbose = args['verbose']&lt;br/&gt;    if args['nexus']:&lt;br/&gt;        devicetype = 'nexus'&lt;br/&gt;&lt;br/&gt;    return hostsfile, commandsfile, devicetype, verbose&lt;br/&gt;&lt;br/&gt;main()&lt;br/&gt;&lt;br/&gt;def userlogin():&lt;br/&gt;    # Getting login credentials&lt;br/&gt;    global username, password, enable&lt;br/&gt;    if os.path.isfile(tacacs):&lt;br/&gt;        login = open(tacacs, "r")&lt;br/&gt;        username = login.readline()&lt;br/&gt;        username = username.replace("\n", "")&lt;br/&gt;        password = login.readline()&lt;br/&gt;        password = password.replace("\n", "")&lt;br/&gt;        enable = login.readline()&lt;br/&gt;        enable = enable.replace("\n", "")&lt;br/&gt;        login.close()&lt;br/&gt;    else:&lt;br/&gt;        print tacacs, "not found.\n"&lt;br/&gt;        username = raw_input("Username: ")&lt;br/&gt;        password = getpass.getpass("User Password: ")&lt;br/&gt;        enable = getpass.getpass("Enable Password: ")&lt;br/&gt;&lt;br/&gt;    return username, password, enable&lt;br/&gt;&lt;br/&gt;def login(devicetype):&lt;br/&gt;    # Logging in with username, password, and eable password&lt;br/&gt;    global username, password, enable&lt;br/&gt;    if devicetype == "nexus":&lt;br/&gt;        telnet.read_until("Login: ")&lt;br/&gt;        telnet.write(str(username) + "\n")&lt;br/&gt;    else:&lt;br/&gt;        telnet.read_until("Username: ")&lt;br/&gt;        telnet.write(str(username) + "\n")&lt;br/&gt;&lt;br/&gt;    if password:&lt;br/&gt;        telnet.read_until("Password: ")&lt;br/&gt;        telnet.write(str(password) + "\n")&lt;br/&gt;&lt;br/&gt;    if devicetype == "ios":&lt;br/&gt;        if enable:&lt;br/&gt;            telnet.read_until(host2login + '&amp;gt;')&lt;br/&gt;            telnet.write("enable\n")&lt;br/&gt;            telnet.read_until("Password: ")&lt;br/&gt;            telnet.write(str(enable) + "\n")&lt;br/&gt;&lt;br/&gt;def sessioncommands():&lt;br/&gt;    # Executing commands on the host&lt;br/&gt;    global commands&lt;br/&gt;    print "Executing Commands on", host2login&lt;br/&gt;    if os.path.isfile(commandsfile):&lt;br/&gt;        commands = open(commandsfile, "r")&lt;br/&gt;        try:&lt;br/&gt;            for cmd2exe in commands:&lt;br/&gt;                telnet.write(cmd2exe)&lt;br/&gt;        finally:&lt;br/&gt;            commands.close()&lt;br/&gt;    else:&lt;br/&gt;        print commandsfile, " doesn't exist"&lt;br/&gt;        telnet.write("exit\n")&lt;br/&gt;    # Displaying the results&lt;br/&gt;    if verbose == True:&lt;br/&gt;        output = telnet.read_all()&lt;br/&gt;        if "% " in output:&lt;br/&gt;            print "Error: ", output&lt;br/&gt;            sys.exit()&lt;br/&gt;        else:&lt;br/&gt;            print output&lt;br/&gt;&lt;br/&gt;    print "Logging out of", host2login&lt;br/&gt;&lt;br/&gt;# Doing work &lt;br/&gt;userlogin()&lt;br/&gt;if os.path.isfile(hostsfile):&lt;br/&gt;    hosts = open(hostsfile, "r")&lt;br/&gt;    while 1:&lt;br/&gt;        host2login = hosts.readline()&lt;br/&gt;        host2login = host2login.replace("\n", "")&lt;br/&gt;        print "Logging into", host2login&lt;br/&gt;        if not host2login:&lt;br/&gt;            break&lt;br/&gt;        else:&lt;br/&gt;            telnet = telnetlib.Telnet(host2login)&lt;br/&gt;            login(devicetype)&lt;br/&gt;            sessioncommands()&lt;br/&gt;    hosts.close()&lt;br/&gt;else:&lt;br/&gt;    host2login = raw_input("Host: ")&lt;br/&gt;    print "Logging into", host2login&lt;br/&gt;    telnet = telnetlib.Telnet(host2login)&lt;br/&gt;    login(devicetype)&lt;br/&gt;    sessioncommands()&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5699793250130821449/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/10/managing-cisco-routers-switches-with_10.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5699793250130821449'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5699793250130821449'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/10/managing-cisco-routers-switches-with_10.html' title='Managing Cisco Routers / Switches with Python, Take 2'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1308249714229899832</id><published>2013-10-08T11:28:00.001-05:00</published><updated>2019-04-11T11:09:58.395-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Python Scripting'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Perl Scripting'/><title type='text'>Configuring Cisco routers and switches with Python</title><content type='html'>&lt;em&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/em&gt;: I've updated the multichange script a lot since I first wrote about it. You can use the category function to see the &lt;a href="http://www.packetgeek.net/category/python-tips/"&gt;various posts&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;You can also look at my &lt;a href="http://github.com/jtdub" target="_blank"&gt;github&lt;/a&gt; for &lt;a href="https://github.com/jtdub/pyRouterLib" target="_blank"&gt;pyRouterLib&lt;/a&gt; and &lt;a href="https://github.com/jtdub/pyMultiChange" target="_blank"&gt;pyMultiChange&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;In my new job role, I've been rediscovering the limitations of the Perl Module &lt;a href="http://search.cpan.org/~joshua/Net-Telnet-Cisco-1.10/Cisco.pm" target="_blank"&gt;Net::Telnet::Cisco&lt;/a&gt; when executing mass changes to network devices, so I've been looking for alternatives. Particularly, Net::Telnet::Cisco doesn't play nicely with NX-OS, IOS-XR, or Arista EOS - without a major re-write. So, I've been experimenting with a Python implementation. Below is what I have so far, which is working well, but is far from production ready.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;$ cat pymultichange.py &lt;br/&gt;#!/usr/bin/env python&lt;br/&gt;&lt;br/&gt;import getpass&lt;br/&gt;import sys&lt;br/&gt;import telnetlib&lt;br/&gt;import os&lt;br/&gt;&lt;br/&gt;# Variables&lt;br/&gt;tacacs = '.tacacslogin'&lt;br/&gt;commandsfile = 'commands.txt'&lt;br/&gt;hostsfile = 'hosts.txt'&lt;br/&gt;devicetype = "ios"&lt;br/&gt;verbose = "yes"&lt;br/&gt;&lt;br/&gt;def userlogin():&lt;br/&gt;    # Getting login credentials&lt;br/&gt;    global username, password, enable&lt;br/&gt;    if os.path.isfile(tacacs):&lt;br/&gt;        login = open(tacacs, "r")&lt;br/&gt;        username = login.readline()&lt;br/&gt;        username = username.replace("\n", "")&lt;br/&gt;        password = login.readline()&lt;br/&gt;        password = password.replace("\n", "")&lt;br/&gt;        enable = login.readline()&lt;br/&gt;        enable = enable.replace("\n", "")&lt;br/&gt;        login.close()&lt;br/&gt;    else:&lt;br/&gt;        print tacacs, "not found.\n"&lt;br/&gt;        username = raw_input("Username: ")&lt;br/&gt;        password = getpass.getpass("User Password: ")&lt;br/&gt;        enable = getpass.getpass("Enable Password: ")&lt;br/&gt;&lt;br/&gt;    return username, password, enable&lt;br/&gt;&lt;br/&gt;def login(devicetype):&lt;br/&gt;    # Logging in with username, password, and eable password&lt;br/&gt;    global username, password, enable&lt;br/&gt;    if devicetype == "nexus":&lt;br/&gt;        telnet.read_until("Login: ")&lt;br/&gt;        telnet.write(str(username) + "\n")&lt;br/&gt;    else:&lt;br/&gt;        telnet.read_until("Username: ")&lt;br/&gt;        telnet.write(str(username) + "\n")&lt;br/&gt;&lt;br/&gt;    if password:&lt;br/&gt;        telnet.read_until("Password: ")&lt;br/&gt;        telnet.write(str(password) + "\n")&lt;br/&gt;&lt;br/&gt;    if devicetype == "ios":&lt;br/&gt;        if enable:&lt;br/&gt;            telnet.read_until(host2login + '&amp;gt;')&lt;br/&gt;            telnet.write("enable\n")&lt;br/&gt;            telnet.read_until("Password: ")&lt;br/&gt;            telnet.write(str(enable) + "\n")&lt;br/&gt;&lt;br/&gt;def sessioncommands():&lt;br/&gt;    # Executing commands on the host&lt;br/&gt;    global commands&lt;br/&gt;    print "Executing Commands on", host2login&lt;br/&gt;    if os.path.isfile(commandsfile):&lt;br/&gt;        commands = open(commandsfile, "r")&lt;br/&gt;        try:&lt;br/&gt;            for cmd2exe in commands:&lt;br/&gt;                telnet.write(cmd2exe)&lt;br/&gt;        finally:&lt;br/&gt;            commands.close()&lt;br/&gt;    else:&lt;br/&gt;        print commandsfile, " doesn't exist"&lt;br/&gt;        telnet.write("exit\n")&lt;br/&gt;    # Displaying the results&lt;br/&gt;    if verbose == "yes":&lt;br/&gt;        output = telnet.read_all()&lt;br/&gt;        if "% " in output:&lt;br/&gt;            print "Error: ", output&lt;br/&gt;            sys.exit()&lt;br/&gt;        else:&lt;br/&gt;            print output&lt;br/&gt;&lt;br/&gt;    print "Logging out of", host2login&lt;br/&gt;&lt;br/&gt;# Doing work &lt;br/&gt;userlogin()&lt;br/&gt;if os.path.isfile(hostsfile):&lt;br/&gt;    hosts = open(hostsfile, "r")&lt;br/&gt;    while 1:&lt;br/&gt;        host2login = hosts.readline()&lt;br/&gt;        host2login = host2login.replace("\n", "")&lt;br/&gt;        print "Logging into", host2login&lt;br/&gt;        if not host2login:&lt;br/&gt;            break&lt;br/&gt;        else:&lt;br/&gt;            telnet = telnetlib.Telnet(host2login)&lt;br/&gt;            login(devicetype)&lt;br/&gt;            sessioncommands()&lt;br/&gt;    hosts.close()&lt;br/&gt;else:&lt;br/&gt;    host2login = raw_input("Host: ")&lt;br/&gt;    print "Logging into", host2login&lt;br/&gt;    telnet = telnetlib.Telnet(host2login)&lt;br/&gt;    login(devicetype)&lt;br/&gt;    sessioncommands()&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;I need to implement the &lt;a href="http://docs.python.org/2/library/getopt.html#module-getopt" target="_blank"&gt;getopt&lt;/a&gt; Python module to make it more command line friendly. I'm sure that I'll also find some tweaks that I need to make here and there as I experiment with other devices. So far, it works pretty well with IOS devices. I'll post updates as it becomes more stable, user friendly, and over all useful. This is just what I've come up with in a couple hours of tinkering and reteaching myself Python.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/1308249714229899832/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/10/configuring-cisco-routers-and-switches_8.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1308249714229899832'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1308249714229899832'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/10/configuring-cisco-routers-and-switches_8.html' title='Configuring Cisco routers and switches with Python'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-7946569645919433184</id><published>2013-09-25T01:30:00.001-05:00</published><updated>2019-04-11T11:09:58.141-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='BGP'/><title type='text'>BGP Goodness and Links</title><content type='html'>I had my first real experience with playing with regular expressions in BGP this evening to manipulate traffic. In the instance below, I needed to give a lower preference to traffic that was learned from '65002' and was 4 AS hops out. I did this by creating an as-path access-list, using it in a route-map, and applying it to an eBGP neighbor.&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;ip as-path access-list 61 permit ^65002_[0-9]+_[0-9]+_[0-9]+$&lt;br/&gt;route-map SomeBGPTransit-in permit 15&lt;br/&gt; match as-path 61&lt;br/&gt; set local-preference 90&lt;br/&gt;end&lt;br/&gt;wr mem&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;While I'm at it, I figured that I share the two links that have helped me the most with BGP. The first is the &lt;a href="http://media.packetlife.net/media/library/1/BGP.pdf" title="BGP Cheat Sheet" target="_blank"&gt;BGP cheat sheet&lt;/a&gt; from &lt;a href="http://packetlife.net" title="packetlife.net" target="_blank"&gt;PacketLife.net&lt;/a&gt;. The second is an &lt;a href="http://www.ine.com/" target="_blank"&gt;INE&lt;/a&gt; blog post on &lt;a href="http://blog.ine.com/2008/01/06/understanding-bgp-regular-expressions/" target="_blank"&gt;BGP Regular Expressions&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/7946569645919433184/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/09/bgp-goodness-and-links_24.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7946569645919433184'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7946569645919433184'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/09/bgp-goodness-and-links_24.html' title='BGP Goodness and Links'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-502152785299403565</id><published>2013-08-20T13:12:00.001-05:00</published><updated>2019-04-11T11:09:57.879-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Miscellaneous Hacking'/><category scheme='http://www.blogger.com/atom/ns#' term='Google'/><category scheme='http://www.blogger.com/atom/ns#' term='Wireshark'/><category scheme='http://www.blogger.com/atom/ns#' term='Network Sniffing'/><category scheme='http://www.blogger.com/atom/ns#' term='Online Privacy'/><title type='text'>Google Chromecast and scanning for WiFi Networks</title><content type='html'>I've been playing around with the Google Chromecast this evening. One of the things that I've just run across is that it appears to periodically scan for wifi networks. I'll write more soon, but this is what I've found so far.&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;pre class="lang:default decode:true " &gt;POST /setup/scan_wifi HTTP/1.1&lt;br/&gt;Host: 10.10.10.10:8008&lt;br/&gt;User-Agent: ChromecastApp/1.1.0.321 &lt;br/&gt;Content-Length: 0&lt;br/&gt;Accept: */*&lt;br/&gt;Origin: https://www.google.com&lt;br/&gt;Accept-Language: en-us&lt;br/&gt;Accept-Encoding: gzip, deflate&lt;br/&gt;Connection: keep-alive&lt;br/&gt;&lt;br/&gt;HTTP/1.1 200 OK&lt;br/&gt;Access-Control-Allow-Headers: Content-Type&lt;br/&gt;Cache-Control: no-cache&lt;br/&gt;Access-Control-Allow-Origin: https://www.google.com&lt;br/&gt;Content-Length: 0&lt;br/&gt;&lt;br/&gt;GET /setup/scan_results HTTP/1.1&lt;br/&gt;Host: 10.10.10.10:8008&lt;br/&gt;User-Agent: ChromecastApp/1.1.0.321 &lt;br/&gt;Accept: */*&lt;br/&gt;Origin: https://www.google.com&lt;br/&gt;Accept-Language: en-us&lt;br/&gt;Accept-Encoding: gzip, deflate&lt;br/&gt;Connection: keep-alive&lt;br/&gt;&lt;br/&gt;HTTP/1.1 200 OK&lt;br/&gt;Access-Control-Allow-Headers: Content-Type&lt;br/&gt;Cache-Control: no-cache&lt;br/&gt;Access-Control-Allow-Origin: https://www.google.com&lt;br/&gt;Content-Type: application/json&lt;br/&gt;Content-Length: 674&lt;br/&gt;&lt;br/&gt;[{"bssid":"APBSSID1","signal_level":-20,"ssid":"APSSID1","wpa_auth":7,"wpa_cipher":4,"wpa_id":0},{"bssid":"APBSSID2","signal_level":-63,"ssid":"APSSID2","wpa_auth":7,"wpa_cipher":4},{"bssid":"APBSSID3","signal_level":-66,"ssid":"APSSID3","wpa_auth":7,"wpa_cipher":4},{"bssid":"APBSSID4","signal_level":-68,"ssid":"APSSID4","wpa_auth":7,"wpa_cipher":4},{"bssid":"APBSSID5","signal_level":-68,"ssid":"APSSID5","wpa_auth":5,"wpa_cipher":3},{"bssid":"APBSSID6","signal_level":-69,"ssid":"APSSID6","wpa_auth":7,"wpa_cipher":4},{"bssid":"APBSSID7","signal_level":-67,"ssid":"APSSID7","wpa_auth":1,"wpa_cipher":1}]&lt;/pre&gt; &lt;br/&gt;&lt;br/&gt;I sanitized the IP Address of the Chromecast, the BSSID's and the SSID's of the access points that the Chromecast found.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/502152785299403565/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/08/google-chromecast-and-scanning-for-wifi_20.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/502152785299403565'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/502152785299403565'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/08/google-chromecast-and-scanning-for-wifi_20.html' title='Google Chromecast and scanning for WiFi Networks'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-3238835812718615358</id><published>2013-05-24T07:49:00.001-05:00</published><updated>2019-04-11T11:09:57.621-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Bash Tips'/><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Backup and Recovery'/><title type='text'>Performing a full system restore after a Linux server re-kick</title><content type='html'>Sometimes, a server becomes so corrupt that you need to re-install the operating system and perform a full system restore of the server from backups. After the OS re-install, but before you perform the restore, you need to create a backup of the files that are responsible for booting the server, defining the partition and file system layout, and naming the hardware. Once the full system restore has been completed, you should restore those files.&lt;br/&gt;&lt;br/&gt;Here are the files that you should backup before performing the restore.&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;&lt;span style="line-height: 13px;"&gt;/boot&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;/etc/fstab&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;/etc/grub.conf&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;/etc/mtab&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;/etc/udev&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;/etc/modprobe.conf&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;/etc/modprobe.d&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;Here is a script that will help you out backup the needed files&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;mkdir ~/backup_files; cd $_&lt;br/&gt;for i in /boot /etc/fstab /etc/grub.conf /etc/mtab /etc/udev /etc/modprobe.conf /etc/modprobe.d; do&lt;br/&gt;    cp -a $i ~/backup_files;&lt;br/&gt;done&lt;/pre&gt;&lt;br/&gt;Here is a script that will help you restore the needed files&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;cd ~/backup_files&lt;br/&gt;d=`date +%m-%d-%Y`&lt;br/&gt;&lt;br/&gt;for i in `ls`; do&lt;br/&gt;    if [[ $i == "boot" ]]; then&lt;br/&gt;        cp -a /boot /boot.$d&lt;br/&gt;        cp -a boot /&lt;br/&gt;        restorecon -R /$i&lt;br/&gt;    else&lt;br/&gt;        if [[ -e /etc/$i ]]; then&lt;br/&gt;            cp -a /etc/$i /etc/$i.$d&lt;br/&gt;            cp -a $i /etc/$i&lt;br/&gt;            restorecon -R /etc/$i&lt;br/&gt;        fi&lt;br/&gt;   fi&lt;br/&gt;done&lt;/pre&gt;&lt;br/&gt;After it's all complete, you just need to reboot the server. Just watch the console to ensure that everything boots correctly.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/3238835812718615358/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/05/performing-full-system-restore-after_24.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3238835812718615358'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3238835812718615358'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/05/performing-full-system-restore-after_24.html' title='Performing a full system restore after a Linux server re-kick'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-786239694140063451</id><published>2013-05-09T18:28:00.001-05:00</published><updated>2019-04-11T11:09:57.365-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Nicira'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='SDN'/><category scheme='http://www.blogger.com/atom/ns#' term='Openstack'/><category scheme='http://www.blogger.com/atom/ns#' term='NVP'/><category scheme='http://www.blogger.com/atom/ns#' term='openvswitch'/><title type='text'>SDN Goodness</title><content type='html'>Here are a few nuggets pertaining to OpenvSwtich, NVP, SDN, and Nicira.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;VMWare/Nicira NVP Deep Dive&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&lt;iframe width="853" height="480" src="http://www.youtube.com/embed/a1Ug9VomSvM" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&lt;a href="http://www.cloudcomp.ch/wp-content/uploads/2013/04/OpenStack-Quantum-SDN-with-Open-vSwitch.pdf" target="_blank"&gt;Underneath OpenStack Quantum: Software Defined Networking with Open vSwitch&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&lt;a href="http://packetlife.net/blog/2013/may/2/what-hell-sdn/" target="_blank"&gt;What the Hell is SDN?&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/786239694140063451/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/05/sdn-goodness_9.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/786239694140063451'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/786239694140063451'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/05/sdn-goodness_9.html' title='SDN Goodness'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://i.ytimg.com/vi/a1Ug9VomSvM/default.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4469022269740517688</id><published>2013-05-09T18:23:00.001-05:00</published><updated>2019-04-11T11:09:57.107-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='MPLS'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Introduction to MPLS</title><content type='html'>I ran across this (long) video. It's a pretty good introduction to what MPLS is.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&lt;iframe width="640" height="480" src="http://www.youtube.com/embed/--IHeAdipHk" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4469022269740517688/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/05/introduction-to-mpls_9.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4469022269740517688'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4469022269740517688'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/05/introduction-to-mpls_9.html' title='Introduction to MPLS'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://i.ytimg.com/vi/--IHeAdipHk/default.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5258681808043716249</id><published>2013-04-15T17:54:00.001-05:00</published><updated>2019-04-11T11:09:56.849-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='SELinux'/><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>SELinux For Mere Mortals</title><content type='html'>I ran across a great video that discusses SELinux. It's called "SELinux For Mere Mortals".&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&lt;iframe width="853" height="480" src="http://www.youtube.com/embed/MxjenQ31b70" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5258681808043716249/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/04/selinux-for-mere-mortals_15.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5258681808043716249'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5258681808043716249'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/04/selinux-for-mere-mortals_15.html' title='SELinux For Mere Mortals'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://i.ytimg.com/vi/MxjenQ31b70/default.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1600574023634695600</id><published>2013-04-11T11:03:00.001-05:00</published><updated>2019-04-11T11:09:56.588-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='IOS'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS Security'/><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Firewalls'/><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Zone Based Firewall'/><title type='text'>Cisco Zone Based Firewall and UDP based Traceroute</title><content type='html'>I've been using the Cisco Zone Based Firewall features in IOS for a little while now. Mostly at home and in a lab environment. One of the things that was kind of frustrating was that was the lack of outbound traceroute support from the trusted network to the untrusted network. I only use Linux and MacOS X at work and at home, so I never tried it out with a Microsoft based computer. I've also haven't really been able to spend a lot of time to really debug the issue. Recently, I did some digging through the documentation on Cisco's website and it hit me and it was such a simple answer. Linux/UNIX based operating systems use a UDP method for sending traceroute packets, while Windows based operating systems use a ICMP based method. As UDP is a connectionless protocol and there isn't any method for keeping a state table for UDP packets in the firewall, you have to allow ICMP host-unreachables and time-exceeded packets IN to the untrusted interface, destined for the trusted network. Here is a sample configuration.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;jtdub-rtr#sh run | s ^ip access-list extended udp-icmp|^class-map|^policy-map|^zone|^interface Vlan[1,2]|^interface FastEthernet0&lt;br/&gt;class-map type inspect match-any UDP_ICMP&lt;br/&gt;  match access-group name udp-icmp&lt;br/&gt;class-map type inspect match-any All_Protocols&lt;br/&gt;  match protocol icmp&lt;br/&gt;  match protocol tcp&lt;br/&gt;  match protocol udp&lt;br/&gt;policy-map type inspect Traceroute&lt;br/&gt;  class type inspect UDP_ICMP&lt;br/&gt;   pass&lt;br/&gt;  class class-default&lt;br/&gt;   drop&lt;br/&gt;policy-map type inspect All_Protocols&lt;br/&gt;   class type inspect All_Protocols&lt;br/&gt;    inspect &lt;br/&gt;  class class-default&lt;br/&gt;   drop&lt;br/&gt;policy-map type inspect UnTrusted&lt;br/&gt;  class class-default&lt;br/&gt;   drop&lt;br/&gt;zone security Trusted&lt;br/&gt;zone security Internet&lt;br/&gt;zone-pair security Trusted source Trusted destination Internet&lt;br/&gt;  service-policy type inspect All_Protocols&lt;br/&gt;zone-pair security Internet source Internet destination Trusted&lt;br/&gt;  service-policy type inspect Traceroute&lt;br/&gt;interface FastEthernet0&lt;br/&gt;  ip address dhcp&lt;br/&gt;  ip verify unicast source reachable-via rx allow-default 101&lt;br/&gt;  no ip redirects&lt;br/&gt;  no ip unreachables&lt;br/&gt;  no ip proxy-arp&lt;br/&gt;  ip nbar protocol-discovery&lt;br/&gt;  ip nat outside&lt;br/&gt;  ip virtual-reassembly&lt;br/&gt;  zone-member security Internet&lt;br/&gt;  duplex auto&lt;br/&gt;  speed auto&lt;br/&gt;  no cdp enable&lt;br/&gt;interface Vlan1&lt;br/&gt;  ip address 172.16.1.1 255.255.255.0&lt;br/&gt;  no ip redirects&lt;br/&gt;  no ip unreachables&lt;br/&gt;  no ip proxy-arp&lt;br/&gt;  ip nat inside&lt;br/&gt;  ip virtual-reassembly&lt;br/&gt;  zone-member security Trusted&lt;br/&gt;interface Vlan2&lt;br/&gt;  ip address 172.16.2.1 255.255.255.0&lt;br/&gt;  no ip redirects&lt;br/&gt;  no ip unreachables&lt;br/&gt;  no ip proxy-arp&lt;br/&gt;  ip nat inside&lt;br/&gt;  ip virtual-reassembly&lt;br/&gt;  zone-member security Trusted&lt;br/&gt;ip access-list extended udp-icmp&lt;br/&gt;  permit icmp any any time-exceeded&lt;br/&gt;  permit icmp any any host-unreachable&lt;/pre&gt;&lt;br/&gt;As you can see, there is an extended ip access-list called udp-icmp that permits time-exceeded and host-unreachable icmp types, then a class map called UDP_ICMP was created to match that access-list, Then a policy-map called Traceroute was created to allow that class-map, from there, the policy-map was applied to a zone-member and applied to the untrusted interface.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/1600574023634695600/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/04/cisco-zone-based-firewall-and-udp-based_11.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1600574023634695600'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1600574023634695600'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/04/cisco-zone-based-firewall-and-udp-based_11.html' title='Cisco Zone Based Firewall and UDP based Traceroute'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5154133577658384581</id><published>2013-03-07T07:55:00.001-06:00</published><updated>2019-04-11T11:09:56.327-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='Filesystems'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Perl Tips'/><title type='text'>Filesystem I/O Speeds Benchmarking Perl Script</title><content type='html'>I wrote a quick perl script to test the read and write speeds of a file system in Linux. Below is the contents of the script.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;jtdub@db1 ~]$ cat iobenchmark.pl &lt;br/&gt;#!/usr/bin/perl&lt;br/&gt;&lt;br/&gt;use strict;&lt;br/&gt;use warnings;&lt;br/&gt;&lt;br/&gt;my $ioFilePath = "/home/jtdub/iofile";&lt;br/&gt;my $testNumber = "1";&lt;br/&gt;my $ioStatsFile = "/home/jtdub/iostats.txt";&lt;br/&gt;my $testLength = "10";&lt;br/&gt;&lt;br/&gt;if(-e $ioStatsFile) {&lt;br/&gt;	`rm -f $ioStatsFile`;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;while ($testNumber &amp;lt;= $testLength) {&lt;br/&gt;	if(-e $ioFilePath) {&lt;br/&gt;		print "Removing $ioFilePath before starting the test. Test: $testNumber.\n";&lt;br/&gt;		`rm -f $ioFilePath`;&lt;br/&gt;	}&lt;br/&gt;	open(STATS, "&amp;gt;&amp;gt; $ioStatsFile");&lt;br/&gt;		print STATS "-----------------------------------------\n";&lt;br/&gt;		print STATS "\nTesting write speeds. Test: $testNumber.\n\n";&lt;br/&gt;		print STATS `dd if=/dev/zero of=$ioFilePath bs=1M count=500 2&amp;gt;&amp;gt; $ioStatsFile`;&lt;br/&gt;		print STATS "\nTesting read speeds. Test $testNumber.\n\n";&lt;br/&gt;		print STATS `dd if=$ioFilePath of=/dev/zero 2&amp;gt;&amp;gt; $ioStatsFile`;&lt;br/&gt;		print STATS "-----------------------------------------\n\n";&lt;br/&gt;	$testNumber++;		&lt;br/&gt;}&lt;br/&gt;close(STATS);&lt;/pre&gt;&lt;br/&gt;&amp;nbsp;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5154133577658384581/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/03/filesystem-io-speeds-benchmarking-perl_7.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5154133577658384581'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5154133577658384581'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/03/filesystem-io-speeds-benchmarking-perl_7.html' title='Filesystem I/O Speeds Benchmarking Perl Script'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5653284220168725524</id><published>2013-02-28T17:07:00.001-06:00</published><updated>2019-04-11T11:09:56.068-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Python Tips'/><title type='text'>Learning Python</title><content type='html'>I know and use Perl and Bash fairly regularly with automating system administration tasks. Lately, I've been putting some effort into learning python, as I believe that it will help me grow in my career. I've been using &lt;a href="http://learnpythonthehardway.org/" target="_blank"&gt;Learn Python the Hard Way&lt;/a&gt;. So far, it's been a pretty awesome site! I need to think of some projects to continue to increase my capabilities with it. Maybe, I'll post some code examples as I create some projects. Either way, check out the site. It's pretty awesome!</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5653284220168725524/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/02/learning-python_28.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5653284220168725524'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5653284220168725524'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/02/learning-python_28.html' title='Learning Python'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4484182884735226078</id><published>2013-02-22T17:35:00.001-06:00</published><updated>2019-04-11T11:09:55.801-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Bash Tips'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Pranks'/><title type='text'>Bash Shell Enumerator - Command Not Found</title><content type='html'>Make this script run when ever a user logs into their system and watch them freak out as it tells them that all their commands aren't found. :)&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;#!/bin/sh&lt;br/&gt;&lt;br/&gt;h=`hostname | cut -d . -f 1`;&lt;br/&gt;u=`id -un`;&lt;br/&gt;shell="[$u@$h ~]$";&lt;br/&gt;&lt;br/&gt;while true;&lt;br/&gt;do&lt;br/&gt;        echo -n "$shell "; read cmd;&lt;br/&gt;        echo "bash: $cmd: command not found...";&lt;br/&gt;done;&lt;/pre&gt;&lt;br/&gt;&amp;nbsp;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4484182884735226078/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/02/bash-shell-enumerator-command-not-found_22.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4484182884735226078'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4484182884735226078'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/02/bash-shell-enumerator-command-not-found_22.html' title='Bash Shell Enumerator - Command Not Found'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5988240699359919389</id><published>2013-02-22T17:33:00.001-06:00</published><updated>2019-04-11T11:09:55.539-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Bash Tips'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Pranks'/><title type='text'>Bash - Random Password Changer</title><content type='html'>Here's a script that will change a user's password at random internals with a randomly generated 30 character password. :)&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;#!/bin/sh&lt;br/&gt;while true;&lt;br/&gt;do&lt;br/&gt;    for i in `&amp;lt; /dev/urandom tr -dc A-Za-z0-9_ | head -c30`;&lt;br/&gt;    do&lt;br/&gt;        echo 'someuser:$i' | sudo chpasswd;&lt;br/&gt;        time=`&amp;lt; /dev/urandom tr -dc 0-9 | head -c5`;   &lt;br/&gt;        sleep $time;&lt;br/&gt;    done&lt;br/&gt;done&lt;/pre&gt;&lt;br/&gt;&amp;nbsp;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5988240699359919389/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/02/bash-random-password-changer_22.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5988240699359919389'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5988240699359919389'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/02/bash-random-password-changer_22.html' title='Bash - Random Password Changer'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-7058080593223894498</id><published>2013-02-10T16:49:00.001-06:00</published><updated>2019-04-11T13:29:42.632-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Bash Tips'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='System Administration'/><category scheme='http://www.blogger.com/atom/ns#' term='MySQL'/><title type='text'>Quick one-liner to change all databases tables to InnoDB in MySQL.</title><content type='html'>I've been attempting to get a better understanding of the operations of MySQL. For me, the best way to do that is hands on. I had a database, with a lot of tables, that I wanted to change the engine type to InnoDB. Obviously, being a lazy sys admin, I didn't want to change them all by hand. So, I made a quick one-liner to do the job for me.&lt;br /&gt;&lt;br /&gt;&lt;pre class="lang:default decode:true "&gt;for i in `mysql somedb -e 'show tables\G' | grep -v ^* | awk '{print $2}'`; do&amp;nbsp;&lt;/pre&gt;&lt;pre class="lang:default decode:true "&gt;    mysql somedb -e "ALTER TABLE $i ENGINE=INNODB";&amp;nbsp;&lt;/pre&gt;&lt;pre class="lang:default decode:true "&gt;done&lt;/pre&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/7058080593223894498/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/02/quick-one-liner-to-change-all-databases_10.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7058080593223894498'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7058080593223894498'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/02/quick-one-liner-to-change-all-databases_10.html' title='Quick one-liner to change all databases tables to InnoDB in MySQL.'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-6055405730947720901</id><published>2013-02-06T07:31:00.001-06:00</published><updated>2019-04-11T11:09:55.024-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='OpenNHRP'/><category scheme='http://www.blogger.com/atom/ns#' term='Open Source Alternatives'/><title type='text'>OpenNHRP RPM Updated</title><content type='html'>I've updated the yum repository with the current version of OpenNHRP. The current version available in the repository is 0.14. For more information, check out the repository link. &lt;a href="http://www.packetgeek.net/repository" target="_blank"&gt;http://www.packetgeek.net/repository&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;For more information on OpenNHRP, check out their page. &lt;a href="http://opennhrp.sourceforge.net" target="_blank"&gt;http://opennhrp.sourceforge.net&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/6055405730947720901/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/02/opennhrp-rpm-updated_6.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6055405730947720901'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6055405730947720901'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/02/opennhrp-rpm-updated_6.html' title='OpenNHRP RPM Updated'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-3586772696738796265</id><published>2013-02-04T18:29:00.001-06:00</published><updated>2019-04-11T11:09:54.764-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='netatalk'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='afp'/><category scheme='http://www.blogger.com/atom/ns#' term='Apple TimeMachine'/><title type='text'>Linux File Server for Apple Time Machine Backups</title><content type='html'>I got Apple Time Machine backups working with my Linux file server. Apple allows you to perform backups over the network utilizing the AFP (Apple Filing Protocol), via the Time Machine app. There is an open source implementation of afp in the netatalk package. Here is a quick and dirty run down of how I configured netatalk to work as my storage location for my apple backups.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;[root@sgnhv ~]# cd /etc/netatalk/&lt;br/&gt;[root@sgnhv netatalk]# for i in afpd.conf AppleVolumes.default; do echo "### $i ####"; grep -v ^# $i | grep -v ^$; done&lt;br/&gt;### afpd.conf ####&lt;br/&gt;- -mimicmodel TimeCapsule6,106 -setuplog "default log_warn /var/log/afpd.log"&lt;br/&gt;[Global]&lt;br/&gt;mimic model = TimeCapsule6,106&lt;br/&gt;log level = default:warn&lt;br/&gt;log file = /var/log/afpd.log&lt;br/&gt;hosts allow = 172.16.1.0/24&lt;br/&gt;[TimeMachine]&lt;br/&gt;path = /timemachine&lt;br/&gt;valid users = jtdubb&lt;br/&gt;time machine = yes&lt;br/&gt;### AppleVolumes.default ####&lt;br/&gt;:DEFAULT: options:upriv,usedots&lt;br/&gt;/timemachine	TimeMachine	allow:jtdubb options:usedots,upriv,tm&lt;br/&gt;&lt;br/&gt;[root@sgnhv netatalk]# history | egrep 'afppasswd|chkconfig netatalk|service netatalk'&lt;br/&gt;  786  service netatalk restart&lt;br/&gt;  795  afppasswd -a jtdubb&lt;br/&gt;  867  chkconfig netatalk on&lt;/pre&gt;&lt;br/&gt;As you can see, the configuration is similar to a samba configuration, with a couple minor exceptions.&lt;br/&gt;&lt;br/&gt;&lt;a href="http://netatalk.sourceforge.net/" target="_blank"&gt;http://netatalk.sourceforge.net/&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/3586772696738796265/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/02/linux-file-server-for-apple-time_4.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3586772696738796265'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3586772696738796265'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/02/linux-file-server-for-apple-time_4.html' title='Linux File Server for Apple Time Machine Backups'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-8161979983127712904</id><published>2013-01-19T18:48:00.001-06:00</published><updated>2019-04-11T13:41:55.293-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Openstack'/><category scheme='http://www.blogger.com/atom/ns#' term='Private Cloud Edition'/><category scheme='http://www.blogger.com/atom/ns#' term='Rackspace'/><title type='text'>Rackspace Private Cloud Edition - Compute Setup</title><content type='html'>I finally got a chance to sit down and play with pre-built Open Stack 'Private Cloud Edition' built by Rackspace. Once it's installed, you can spin up instances right out of the box, but there are a few nuances to getting a functional platform for remote access and serving. I figured that I'd do a run through of the install and the initial changes that I made to get my install working.&lt;br /&gt;&lt;br /&gt;The first thing that you need to do is obtain the Private Cloud Edition (PCE) iso. The iso can be downloaded for FREE at the Rackspace website -&lt;a href="http://www.rackspace.com/cloud/private/" target="_blank"&gt; http://www.rackspace.com/cloud/private/.&lt;/a&gt; Once it's downloaded and you have a bootable thumb drive or DVD, you're ready to rock! The system requirements for Installing PCE on the Rackspace website are pretty stout. They list the controller node as needing 16 GB of RAM, 144 GB of disk space, and a dual socket CPU with dual cores or a single quad core. Then they list the compute node as needing the same specs with the exception of RAM, which they list as 32 GB. Those are more of recommendations. I installed the compute and controller node (all-in-one) on a single desktop PC with a single dual core CPU, 4 GB of RAM, and a 80 GB hard drive. For testing purposes, this is completely fine. The requirement that is needed is that your CPU's will need to support virtualization technologies (VT-x), as the underlying hypervisor runs on KVM.&lt;br /&gt;&lt;br /&gt;The install is a pretty painless process. The first screen prompts you for a EULA, then how what you want to install - Controller, Compute, or All-in-One.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-O911ci2E0rw/XK-HyiNSlpI/AAAAAAAA2Eg/Y3C_qIUGQD0-1JjEjXhoOUC4Wubbwja2wCLcBGAs/s1600/20130118_011938.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="500" data-original-width="1600" height="100" src="https://4.bp.blogspot.com/-O911ci2E0rw/XK-HyiNSlpI/AAAAAAAA2Eg/Y3C_qIUGQD0-1JjEjXhoOUC4Wubbwja2wCLcBGAs/s320/20130118_011938.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;After that, you set up the IP Address of the server, the netblock assigned to VM's, (the default is 172.31.0.0/24 - I left this default), and the user accounts (admin Open Stack account, Open Stack user account, and server local user account). After that it's a matter of the automated installer installing the packages. Once it's done installing, it will boot up and you'll be ready to play!&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-VmD9L-o9s7U/XK-H6CW7xyI/AAAAAAAA2Ek/phxVBP-0HIYkQz_VTuUTBfs3eJP6t_HIgCLcBGAs/s1600/20130118_152157.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="499" data-original-width="1600" height="99" src="https://3.bp.blogspot.com/-VmD9L-o9s7U/XK-H6CW7xyI/AAAAAAAA2Ek/phxVBP-0HIYkQz_VTuUTBfs3eJP6t_HIgCLcBGAs/s320/20130118_152157.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;If you've ever used the Rackspace public cloud, you will notice that the UI looks very familiar. Though, if you prefer, the UI can be changed to the default Open Stack UI. The first thing that we'll want to do when we log in is to grab your API credentials, so that you can easily use the command line tools. To do this, log in with your admin account, select the 'Settings' link at the top right of the screen, then select the "OpenStack API" tab, select 'admin' as the project, and finally press the "Download RC File" button.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-HKSins2sMj0/XK-IFzr2ZbI/AAAAAAAA2Es/8-tutcO2ZBg2MxJNlv7Op5u19cO4O_BzgCLcBGAs/s1600/Screenshot-from-2013-01-19-222937.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="689" data-original-width="689" height="320" src="https://4.bp.blogspot.com/-HKSins2sMj0/XK-IFzr2ZbI/AAAAAAAA2Es/8-tutcO2ZBg2MxJNlv7Op5u19cO4O_BzgCLcBGAs/s320/Screenshot-from-2013-01-19-222937.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Once the openrc.sh file is downloaded, you can copy it to your PCE server so that we can begin configuring what needs to be configured from the command line. As you can see below, I used scp to copy the file to the server.&lt;br /&gt;&lt;pre class="lang:default decode:true"&gt;[jtdub@jtdub-desktop Downloads]$ scp openrc.sh james@172.16.2.254:/home/james/.novarc&lt;br /&gt;james@172.16.2.254's password: &lt;br /&gt;openrc.sh                                                                                                                                              100%  958     0.9KB/s   00:00&lt;/pre&gt;&lt;br /&gt;After the file is copied to the server, we'll ssh to the server and use the CLI tools to configure floating IP Addresses. The one thing that I've noticed while playing around with Open Stack is that, at least in my limited experience, the 'nova-manage' and chef commands will not properly execute unless you have administrative privileges on the server, therefore, I generally go ahead and 'sudo su -' to root while I'm using the 'nova-manage' and chef commands, but will continue to utilize my non-privileged account for using the 'nova' command.&lt;br /&gt;&lt;br /&gt;So, let's add a floating IP Address range. My PCE All-in-One server is currently sitting on the 172.16.2.0/24 network. 172.16.2.1 is the router, 172.16.2.254 is the PCE server, and there is another computer on 172.16.2.12. I want to add a range of addresses that will be on the 172.16.2.0/24 network, but will not conflict with existing hosts. For testing purposes, I do not need a large number of addresses, so I decided to carve out a section of my 172.16.2.0/24 network to assign as floating IP Addresses to instances that spin up. In my case, I only need about 16 addresses, so I chose to use the prefix of 172.16.2.32/28. That will tell Open Stack to assign addresses 172.16.2.33 - 46 to VM instances as they spin up and will re-claim those addresses as the instances are torn down. This allows me to continue to utilize the 172.16.2.0/24 network without conflict.&lt;br /&gt;&lt;pre class="lang:default decode:true"&gt;james@openstack:~$ sudo su -&lt;br /&gt;root@openstack:~# source /home/james/.novarc &lt;br /&gt;Please enter your OpenStack Password: &lt;br /&gt;root@openstack:~# nova-manage floating create --pool=172.16.2.32-net --ip_range=172.16.2.32/28&lt;br /&gt;2013-01-19 23:49:15 DEBUG nova.utils [req-99d8cbf4-8821-4c3d-afc7-9a584cfc1748 None None] backend &amp;lt;module 'nova.db.sqlalchemy.api' from '/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.pyc'&amp;gt; __get_backend /usr/lib/python2.7/dist-packages/nova/utils.py:502&lt;br /&gt;root@openstack:~# nova-manage floating list&lt;br /&gt;2013-01-19 23:49:22 DEBUG nova.utils [req-034aa938-a81f-428b-be81-96895607bb4c None None] backend &amp;lt;module 'nova.db.sqlalchemy.api' from '/usr/lib/python2.7/dist-packages/nova/db/sqlalchemy/api.pyc'&amp;gt; __get_backend /usr/lib/python2.7/dist-packages/nova/utils.py:502&lt;br /&gt;None 172.16.2.33 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.34 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.35 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.36 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.37 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.38 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.39 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.40 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.41 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.42 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.43 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.44 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.45 None 172.16.2.32-net br0&lt;br /&gt;None 172.16.2.46 None 172.16.2.32-net br0&lt;/pre&gt;&lt;br /&gt;At this point, I should spend a little bit of time to describe how the networking for VM instances is going to work. When we initially installed PCE, we were prompted with a screen asking us for a CIDR block for Nova fixed (VM) networking. The default is 172.31.0.0/24&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-ULbb7bT6uZ8/XK-IV7ZSo7I/AAAAAAAA2E0/ogJ6hGZR1Lck59Mizy36lch1saKQj3w0QCLcBGAs/s1600/20130118_012148.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="583" data-original-width="1600" height="116" src="https://4.bp.blogspot.com/-ULbb7bT6uZ8/XK-IV7ZSo7I/AAAAAAAA2E0/ogJ6hGZR1Lck59Mizy36lch1saKQj3w0QCLcBGAs/s320/20130118_012148.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;One IP Address on the 172.31.0.0/24 will be allocated to the br0 interface of your PCE server and the remaining will be assigned to your instances as they boot up. The br0 interface will also contain the IP Address of your PCE server. In this case, that IP Address will be 172.16.2.254.&lt;br /&gt;&lt;pre class="lang:default decode:true"&gt;root@openstack:~# ip addr show br0&lt;br /&gt;3: br0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue state UP &lt;br /&gt;    link/ether 00:23:ae:90:aa:7c brd ff:ff:ff:ff:ff:ff&lt;br /&gt;    inet 172.31.0.5/24 brd 172.31.0.255 scope global br0&lt;br /&gt;    inet 172.16.2.254/24 brd 172.16.2.255 scope global br0&lt;br /&gt;    inet6 fe80::4858:14ff:fe72:7112/64 scope link &lt;br /&gt;       valid_lft forever preferred_lft forever&lt;br /&gt;root@openstack:~# route -n&lt;br /&gt;Kernel IP routing table&lt;br /&gt;Destination     Gateway         Genmask         Flags Metric Ref    Use Iface&lt;br /&gt;0.0.0.0         172.16.2.1      0.0.0.0         UG    100    0        0 br0&lt;br /&gt;169.254.123.0   0.0.0.0         255.255.255.0   U     0      0        0 chefbr0&lt;br /&gt;172.16.2.0      0.0.0.0         255.255.255.0   U     0      0        0 br0&lt;br /&gt;172.31.0.0      0.0.0.0         255.255.255.0   U     0      0        0 br0&lt;/pre&gt;&lt;br /&gt;The br0 interface is a bridge interface that connects the VM network to the physical interface, eth0. Open Stack then routes (layer 3) traffic coming from eth0 to the 172.31.0.0/24 network. It also uses iptables to create a PAT/NAT, so that the instances can communicate on the network, and the internet if you allow it. However, computers outside the PCE environment can't communicate with the VM instances directly, because those computers will be unaware of the 172.31.0.0/24 network. This is where the floating IP Addresses come into play. The floating IP Addresses create a one-to-one NAT mapping a VM instance to an address in your floating IP Address range. In this case, my floating IP Address range is 172.16.2.32/28. Also, by default, the PCE iptables rules are very restrictive and don't allow incoming traffic to communicate with the VM instances. To allow this traffic, you will have to create or edit security groups. This will come later on. Below is a diagram of the PCE network environment.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-b3DfJqIJj-8/XK-IfrqjagI/AAAAAAAA2E8/HixYH2vF4yAKeKiFT-yO4yRpN8MFGlyLACLcBGAs/s1600/OpenStack-network.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="264" data-original-width="830" height="101" src="https://3.bp.blogspot.com/-b3DfJqIJj-8/XK-IfrqjagI/AAAAAAAA2E8/HixYH2vF4yAKeKiFT-yO4yRpN8MFGlyLACLcBGAs/s320/OpenStack-network.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Now that we understand how the networking works, let's log back into the UI as a normal user. As the normal user, we're going to edit our default security group to define what traffic we want to allow to our VM instances, we'll add a couple floating IP Addresses to our project, create keypairs that will be used to allow us to access our VM, we'll add a pre-built Fedora 17 image to our default images, and finally, we'll spin up an instance and verify that we can access it from an outside computer.&lt;br /&gt;&lt;br /&gt;Once we login as our normal user, the first thing that we'll do is edit our default security group to define what traffic that we want to allow to our VM instances from the outside world by default. In my test, I am going to allow ICMP echo (code -1, type -1), all UDP traffic, and all TCP traffic. To access the security groups, select the "Access &amp;amp; Security" tab along the top menu, locate the "Security Groups" section, and press the "Edit Rules" on the default group.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-ttze5rk9FRE/XK-I9TNHBEI/AAAAAAAA2FI/sM8p_Nq1vdgqr8tMWNcE-g43jrLyyWqqACLcBGAs/s1600/Screenshot-from-2013-01-19-235232.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="538" data-original-width="1064" height="161" src="https://1.bp.blogspot.com/-ttze5rk9FRE/XK-I9TNHBEI/AAAAAAAA2FI/sM8p_Nq1vdgqr8tMWNcE-g43jrLyyWqqACLcBGAs/s320/Screenshot-from-2013-01-19-235232.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Once you've located that screen, enter your rules.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-wr5IpMKfL44/XK-JGqomI4I/AAAAAAAA2FM/f8cK2dfh39QD-KwZVtj4FMq_ApaGGJPQACLcBGAs/s1600/Screenshot-from-2013-01-19-235518.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="543" data-original-width="565" height="307" src="https://3.bp.blogspot.com/-wr5IpMKfL44/XK-JGqomI4I/AAAAAAAA2FM/f8cK2dfh39QD-KwZVtj4FMq_ApaGGJPQACLcBGAs/s320/Screenshot-from-2013-01-19-235518.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Now that the security group has been edited, we'll go ahead and add floating IP Addresses, which are on the same "Access &amp;amp; Security" page. To do this, press the "Allocate IP To Project" button, select your pool, if you have multiple IP Address pools, and press the&amp;nbsp; "Allocate IP" button. You can add as many IP Addresses as you need for your project. By default, there are quotas in place that limits a "project" to 10 floating IP Addresses. This quota can be changed and will be discussed later on.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-W0RwHE1GemU/XK-JPb_F7MI/AAAAAAAA2FU/YtVVPEm_MPwikMHB5suXP3tgRCyuFouXQCLcBGAs/s1600/Screenshot-from-2013-01-19-235954.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="279" data-original-width="564" height="158" src="https://1.bp.blogspot.com/-W0RwHE1GemU/XK-JPb_F7MI/AAAAAAAA2FU/YtVVPEm_MPwikMHB5suXP3tgRCyuFouXQCLcBGAs/s320/Screenshot-from-2013-01-19-235954.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Lastly, on the same "Access &amp;amp; Security" page let's generate encryption key pairs that will be used to access our VM instances. In the "Keypairs" section, press the "Create Keypair" button. This will bring up a screen that will allow you to name the key pair.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-zXeKeT0YbC0/XK-JXOulW9I/AAAAAAAA2Fc/Q_kQqgE5Dxw8sgZAXpiVurCAf3VM4WkswCLcBGAs/s1600/Screenshot-from-2013-01-20-000522.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="291" data-original-width="564" height="165" src="https://4.bp.blogspot.com/-zXeKeT0YbC0/XK-JXOulW9I/AAAAAAAA2Fc/Q_kQqgE5Dxw8sgZAXpiVurCAf3VM4WkswCLcBGAs/s320/Screenshot-from-2013-01-20-000522.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Once the keypair has been generated, you'll be prompted to download a pem file. Do so, and then add the keypair to your keys for ssh. In Linux, you use the ssh-add command. As this is a private key, you won't want any other users to be able to read the key, so be sure to change the permissions on the file so that only your account can access the file.&lt;br /&gt;&lt;pre class="lang:default decode:true"&gt;[jtdub@jtdub-desktop Downloads]$ chmod 600 jtdub-keypair.pem &lt;br /&gt;[jtdub@jtdub-desktop Downloads]$ ssh-add jtdub-keypair.pem &lt;br /&gt;Identity added: jtdub-keypair.pem (jtdub-keypair.pem)&lt;/pre&gt;&lt;br /&gt;We're at the light at the end of the tunnel! If you wanted to, you could now just spin up VM instances utilizing the default images that come with PCE. However, I'm going to download a pre-built image of Fedora 17, so that I can demonstrate how to import images. The Fedora 17 image that I'm going to use can be downloaded at &lt;a href="http://berrange.fedorapeople.org/images/" target="_blank"&gt;http://berrange.fedorapeople.org/images/&lt;/a&gt;. In your UI, still logged in as the unprivileged user, select the "Images &amp;amp; Snapshots" tab. Once there, select the "Create Image" button, fill out the information on the form, and press the "Create Image" button.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-8Vb7lven1f4/XK-Jgcrl05I/AAAAAAAA2Fk/VwP7J-2Jt3Mrt56LuCTQeprCdE8OaeqVwCLcBGAs/s1600/Screenshot-from-2013-01-20-001658.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="425" data-original-width="571" height="237" src="https://1.bp.blogspot.com/-8Vb7lven1f4/XK-Jgcrl05I/AAAAAAAA2Fk/VwP7J-2Jt3Mrt56LuCTQeprCdE8OaeqVwCLcBGAs/s320/Screenshot-from-2013-01-20-001658.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&amp;nbsp; &lt;br /&gt;Now, you just wait for the image to download. It will take a little while depending on the speed of your Internet connection, as well as the size of the image.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-LM0TYAaXRP4/XK-JpU8j7aI/AAAAAAAA2Fs/qAC5wUcSB8wV_g7nYAB-pZ1chSGDyozaQCLcBGAs/s1600/Screenshot-from-2013-01-20-001716.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="417" data-original-width="1035" height="128" src="https://1.bp.blogspot.com/-LM0TYAaXRP4/XK-JpU8j7aI/AAAAAAAA2Fs/qAC5wUcSB8wV_g7nYAB-pZ1chSGDyozaQCLcBGAs/s320/Screenshot-from-2013-01-20-001716.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;When the image download completes, we can finally create our first instance. This can be accomplished from the "Instances" tab, in the UI, by pressing the "Launch Instance" button. On the Launch Instance page there are several options. It's best to spend a few minutes to get familiar with the options. I'll give a run down of the settings that I used.&lt;br /&gt;&lt;ul&gt;&lt;br /&gt;&lt;li&gt;Details Tab:&lt;br /&gt;&lt;ul&gt;&lt;br /&gt;&lt;li&gt;"Image", I selected my newly minted fedora17-image.&lt;/li&gt;&lt;br /&gt;&lt;li&gt;"Instance Name", I chose the name f17-test&lt;/li&gt;&lt;br /&gt;&lt;li&gt;"Flavor", I left a m1.tiny (512MB / RAM) instance.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;br /&gt;&lt;li&gt;Access &amp;amp; Security Tab:&lt;br /&gt;&lt;ul&gt;&lt;br /&gt;&lt;li&gt;"Keypair", I chose my jtdub-keypair&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;After that, I pressed the "Launch" button. In no time flat, my first instance was up and running. The only other thing that I need to do is associate a floating IP Address to the VM instance.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-H0OzLIyL6Lg/XK-J0LW6aFI/AAAAAAAA2F0/zLoGbHFYsdEfsF8nXa6nH_f0GF-2hjYxgCLcBGAs/s1600/Screenshot-from-2013-01-20-002907.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="423" data-original-width="564" height="240" src="https://1.bp.blogspot.com/-H0OzLIyL6Lg/XK-J0LW6aFI/AAAAAAAA2F0/zLoGbHFYsdEfsF8nXa6nH_f0GF-2hjYxgCLcBGAs/s320/Screenshot-from-2013-01-20-002907.png" width="320" /&gt;&lt;/a&gt;&lt;a href="https://1.bp.blogspot.com/-2skbUQ2fpwc/XK-J7i0EoII/AAAAAAAA2F8/1GuNv0eExPA7FhF2496Iqx9cBU_xFzzuQCLcBGAs/s1600/Screenshot-from-2013-01-20-003019.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="322" data-original-width="564" height="182" src="https://1.bp.blogspot.com/-2skbUQ2fpwc/XK-J7i0EoII/AAAAAAAA2F8/1GuNv0eExPA7FhF2496Iqx9cBU_xFzzuQCLcBGAs/s320/Screenshot-from-2013-01-20-003019.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;To associate a floating IP Address to an instance, locate your VM Instance on the "Instances" page, drop down the menu on the "Create Snapshot" button, and select "Associate Floating IP". Once the "Manage Floating IP Associations" page pulls up, select and IP Address and press the "Associate" button.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-YX7i6mNJ4_o/XK-KOKAA-wI/AAAAAAAA2GI/fqLJfK5AXTQGo64SPjoXIcQjxxeAXLJ3gCLcBGAs/s1600/Screenshot-from-2013-01-20-003516.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="360" data-original-width="1090" height="105" src="https://3.bp.blogspot.com/-YX7i6mNJ4_o/XK-KOKAA-wI/AAAAAAAA2GI/fqLJfK5AXTQGo64SPjoXIcQjxxeAXLJ3gCLcBGAs/s320/Screenshot-from-2013-01-20-003516.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-Me-7qeGu7Do/XK-KVEdz94I/AAAAAAAA2GM/lKf-aV0OIsUrl2z0YeRvoRyCG6TKmGtggCLcBGAs/s1600/Screenshot-from-2013-01-20-003632.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="342" data-original-width="563" height="194" src="https://2.bp.blogspot.com/-Me-7qeGu7Do/XK-KVEdz94I/AAAAAAAA2GM/lKf-aV0OIsUrl2z0YeRvoRyCG6TKmGtggCLcBGAs/s320/Screenshot-from-2013-01-20-003632.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;That's it! The first instance is up and running and should be remotely accessible! To test it, I'll ssh to the instance.&lt;br /&gt;&lt;pre class="lang:default decode:true"&gt;[jtdub@jtdub-desktop ~]$ ping -c2 172.16.2.33&lt;br /&gt;PING 172.16.2.33 (172.16.2.33) 56(84) bytes of data.&lt;br /&gt;64 bytes from 172.16.2.33: icmp_seq=1 ttl=62 time=0.870 ms&lt;br /&gt;64 bytes from 172.16.2.33: icmp_seq=2 ttl=62 time=0.801 ms&lt;br /&gt;&lt;br /&gt;--- 172.16.2.33 ping statistics ---&lt;br /&gt;2 packets transmitted, 2 received, 0% packet loss, time 1000ms&lt;br /&gt;rtt min/avg/max/mdev = 0.801/0.835/0.870/0.045 ms&lt;br /&gt;[jtdub@jtdub-desktop ~]$ ssh -l root 172.16.2.33&lt;br /&gt;The authenticity of host '172.16.2.33 (172.16.2.33)' can't be established.&lt;br /&gt;RSA key fingerprint is 3d:ec:47:85:9c:72:9b:3c:87:b6:0a:25:fa:7d:0b:d9.&lt;br /&gt;Are you sure you want to continue connecting (yes/no)? yes&lt;br /&gt;Warning: Permanently added '172.16.2.33' (RSA) to the list of known hosts.&lt;br /&gt;[root@f17-test ~]# ip addr show&lt;br /&gt;1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 16436 qdisc noqueue state UNKNOWN &lt;br /&gt;    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00&lt;br /&gt;    inet 127.0.0.1/8 scope host lo&lt;br /&gt;    inet6 ::1/128 scope host &lt;br /&gt;       valid_lft forever preferred_lft forever&lt;br /&gt;2: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000&lt;br /&gt;    link/ether fa:16:3e:77:9d:16 brd ff:ff:ff:ff:ff:ff&lt;br /&gt;    inet 172.31.0.2/24 brd 172.31.0.255 scope global eth0&lt;br /&gt;    inet6 fe80::f816:3eff:fe77:9d16/64 scope link tentative dadfailed &lt;br /&gt;       valid_lft forever preferred_lft forever&lt;/pre&gt;&lt;br /&gt;That's it! We now have a PCE compute cloud running. Whew! LONG blog! So for now, I'll wrap this up. Soon, I'll create another much shorter blog to show how to modify the UI back to the default Open Stack UI, if you prefer. In that same blog, I'll also talk about project quotas and how to modify them. That's it for now! Thanks for reading.&lt;br /&gt;&lt;br /&gt;Documentation References:&lt;br /&gt;&lt;ul&gt;&lt;br /&gt;&lt;li&gt;&lt;a href="http://docs.openstack.org/trunk/openstack-compute/admin/content/ch_getting-started-with-openstack.html" target="_blank"&gt;http://docs.openstack.org/trunk/openstack-compute/admin/content/ch_getting-started-with-openstack.html&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;&lt;li&gt;&lt;a href="http://www.rackspace.com/knowledge_center/getting-started/rackspace-private-cloud" target="_blank"&gt;http://www.rackspace.com/knowledge_center/getting-started/rackspace-private-cloud&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/8161979983127712904/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/01/rackspace-private-cloud-edition-compute_19.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8161979983127712904'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8161979983127712904'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/01/rackspace-private-cloud-edition-compute_19.html' title='Rackspace Private Cloud Edition - Compute Setup'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://4.bp.blogspot.com/-O911ci2E0rw/XK-HyiNSlpI/AAAAAAAA2Eg/Y3C_qIUGQD0-1JjEjXhoOUC4Wubbwja2wCLcBGAs/s72-c/20130118_011938.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-723114321668679170</id><published>2013-01-12T17:43:00.001-06:00</published><updated>2019-04-11T13:42:49.808-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='Software Defined Networking'/><category scheme='http://www.blogger.com/atom/ns#' term='VXLAN'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='SDN'/><category scheme='http://www.blogger.com/atom/ns#' term='openvswitch'/><title type='text'>Rackspace Cloud Servers and Networks with Open vSwitch and VXLANbetween Data Centers</title><content type='html'>I've been playing with Open vSwitch and the VXLAN patch that is available at:&lt;br /&gt;&lt;br /&gt;&lt;a href="https://github.com/mestery/ovs-vxlan" target="_blank"&gt;https://github.com/mestery/ovs-vxlan&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;So far all my testing has been done on my Rackspace Cloud account. I realize that you wouldn't use VXLAN in a scenario like this on any production network, but for my testing, I thought that it would be good to have a physical separation of the networks. While I was able to get my VXLAN tunnel up, I haven't been able to get the traffic to completely pass from my test-dfw to my test-ord servers. The traffic is getting lost at some point where the traffic leaves the ovs-ord internal interface (eth2) destined to test-ord server. I believe that I either need to add some configuration to the open vswitch service or the Rackspace Cloud Networks is stripping some data as it leaves ovs-ord, destined to test-ord. I'm still trying to figure that piece out. Below is that I have so far, along with the testing and troubleshooting section at the bottom.&lt;br /&gt;&lt;br /&gt;Here is a diagram of the lab:&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-0k5TpTmrbVY/XK-Kmu9Nw_I/AAAAAAAA2GY/E_kf328n2sIM2dC2GeW5IcFnpdIn1v9DACLcBGAs/s1600/VXLAN-LAB.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="298" data-original-width="744" height="128" src="https://4.bp.blogspot.com/-0k5TpTmrbVY/XK-Kmu9Nw_I/AAAAAAAA2GY/E_kf328n2sIM2dC2GeW5IcFnpdIn1v9DACLcBGAs/s320/VXLAN-LAB.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;I started off by building the OVS servers that would be used to create the VXLAN tunnels would would pass traffic to the servers sitting behind them. To do this, I used the Rackspace Cloud Networks to create a private internal network in both the ORD and DFW data centers. All my servers would use eth2 to access that network and as the data centers are physically separated, my internal networks would be isolated from each other as well. I also used the Rackspace Cloud Servers to build the lab infrastructure. This includes four servers in total. Each running the Rackspace provided Fedora 17 image and all would be 512 meg instances.&lt;br /&gt;&lt;br /&gt;First, I created all the instances, which are named as ovs-dfw, ovs-ord, test-dfw, test-ord. I then configured the ovs-{dfw, ord} instances.&lt;br /&gt;&lt;br /&gt;#######################################&lt;br /&gt;OVS Server Builds&lt;br /&gt;#######################################&lt;br /&gt;&lt;br /&gt;* Executed on both servers:&lt;br /&gt;&lt;pre&gt;yum -y --disableexcludes=all update&lt;br /&gt;&lt;br /&gt;for i in disable stop; do&lt;br /&gt;for o in rpcbind.socket rpcbind.service iptables.service; do&lt;br /&gt;systemctl $i $o;&lt;br /&gt;done&lt;br /&gt;done&lt;br /&gt;&lt;br /&gt;reboot&lt;/pre&gt;&lt;br /&gt;Once the servers came back up, I wanted to verify the kernel version that was running. This will be needed when building the open vswitch kernel module RPM. My kernel version is: 3.3.4-5.fc17.x86_64. If your kernel version is different, then you will need to take note and make the appropriate changes when building the openvswitch kernel moduele. I'll be sure to remind you of this later, as those processes come up.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;uname -r&lt;/pre&gt;&lt;br /&gt;After you've taken note of the running kernel version, we'll need to install the utilities needed to compile code, build RPMs, and troubleshoot networks. Note that I installed a kernel specific kernel-devel package - kernel-devel-3.3.4-5.fc17.x86_64. If your running kernel is different, then chage the package name to the appropriate kernel.&lt;br /&gt;&lt;pre&gt;yum install -y openvswitch gcc make python-devel openssl-devel kernel-devel kernel-debug-devel git automake autoconf rpmdevtools kernel-devel-3.3.4-5.fc17.x86_64 tcpdump&lt;/pre&gt;&lt;br /&gt;Once the packages have installed, we can start downloading and building openvswitch packages needed to build the RPMs.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;git clone https://github.com/mestery/ovs-vxlan.git&lt;br /&gt;cd ovs-vxlan&lt;br /&gt;git checkout vxlan&lt;br /&gt;./boot.sh&lt;br /&gt;./configure --with-linux=/lib/modules/`uname -r`/build&lt;br /&gt;make dist&lt;/pre&gt;&lt;br /&gt;Now, we can start building the RPMs.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;rpmdev-setuptree&lt;br /&gt;cp openvswitch-1.9.90.tar.gz ~/rpmbuild/SOURCES/&lt;br /&gt;cd ~/rpmbuild/SOURCES/&lt;br /&gt;tar xvzf openvswitch-1.9.90.tar.gz&lt;br /&gt;cd openvswitch-1.9.90/&lt;br /&gt;rpmbuild -bb rhel/openvswitch-fedora.spec&lt;/pre&gt;&lt;br /&gt;Just a quick note. If you're not running the same kernel version that I am, then you will need to change the next line to reflect the kernel version that you are running, or it will error out.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;sed -i 's/#%define kernel 3.1.5-1.fc16.x86_64/%define kernel 3.3.4-5.fc17.x86_64/' rhel/openvswitch-kmod-fedora.spec&lt;br /&gt;rpmbuild -bb rhel/openvswitch-kmod-fedora.spec&lt;/pre&gt;&lt;br /&gt;Now, let's install the newly minted RPMs!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;cd ~/rpmbuild/RPMS/x86_64/&lt;br /&gt;rpm -Uvh *&lt;/pre&gt;&lt;br /&gt;Once that is completed, enable the open vswitch services to start at boot and start the services.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;systemctl enable openvswitch.service&lt;br /&gt;systemctl restart openvswitch.service&lt;/pre&gt;&lt;br /&gt;Now that the hard part is done, we can verify that open vswitch is running and functioning properly before going on to creating the VXLAN tunnels.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;ps -ae | grep ovs&lt;br /&gt;ovs-vsctl show&lt;/pre&gt;&lt;br /&gt;Once open vswitch has been verified, let's configure it for VXLAN! Where */ip_addr_of_remote_server/* is, replace that with the IP Address of the remote OVS server. So, on the OVS-DFW server, you should put the IP Address of the OVS-ORD server and vise versa. Those IP Addresses on the Rackspace Cloud servers reside on eth0.&lt;br /&gt;&lt;pre&gt;ip addr show dev eth0 | grep inet | head -1 | awk '{print $2}' | cut -d / -f 1&lt;br /&gt;&lt;br /&gt;eth2=/etc/sysconfig/network-scripts/ifcfg-eth2; \&lt;br /&gt;sed -i 's/IPADDR/#IPADDR/g' $eth2; \&lt;br /&gt;sed -i 's/NETMASK/#NETMASK/g' $eth2; \&lt;br /&gt;sed -i 's/DNS/#DNS/g' $eth2; \&lt;br /&gt;sed -i 's/static/none/g' $eth2&lt;br /&gt;ip addr flush dev eth2&lt;br /&gt;ip addr show dev eth2&lt;br /&gt;ovs-vsctl add-br br0&lt;br /&gt;ovs-vsctl add-port br0 eth2&lt;br /&gt;ovs-vsctl add-port br0 vx0 -- set interface vx0 type=vxlan options:remote_ip=*/ip_addr_of_remote_server/*&lt;br /&gt;ovs-vsctl show&lt;/pre&gt;&lt;br /&gt;That's it! The VXLAN tunnels have been built and we're now ready to work on the test-{dfw, ord} servers. This setup is easy. All we need to do is set up IP Addresses on the eth2 interfaces. For this test, I'm using 192.168.1.11 as the test-dfw server and 192.168.1.12 as the test-ord server. When I created the internal networks on my cloud account, I left the default CIDR as 192.168.3.0/24. I'll want to change this configuration on the servers, so that they boot with the IP Addresses that I want to use.&lt;br /&gt;&lt;br /&gt;#######################################&lt;br /&gt;TEST-DFW eth2 configuration&lt;br /&gt;#######################################&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;eth2=/etc/sysconfig/network-scripts/ifcfg-eth2; \&lt;br /&gt;sed -i 's/192.168.3.[0-9]/192.168.1.11/g' $eth2&lt;br /&gt;ip addr flush dev eth2&lt;br /&gt;ip addr add 192.168.1.11/24 dev eth2&lt;br /&gt;ip addr show dev eth2&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;#######################################&lt;br /&gt;TEST-ORD eth2 configuration&lt;br /&gt;#######################################&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;eth2=/etc/sysconfig/network-scripts/ifcfg-eth2; \&lt;br /&gt;sed -i 's/192.168.3.[0-9]/192.168.1.12/g' $eth2&lt;br /&gt;ip addr flush dev eth2&lt;br /&gt;ip addr add 192.168.1.12/24 dev eth2&lt;br /&gt;ip addr show dev eth2&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;#######################################&lt;br /&gt;Test connectivity from test-dfw to test-ord&lt;br /&gt;#######################################&lt;br /&gt;&lt;br /&gt;We'll do this in steps. I'll initiate a ping from test-dfw to test-ord. This will be done in steps.&lt;br /&gt;* On test-dfw, I'll start a ping to test-ord (ping 192.168.1.2).&lt;br /&gt;* On ovs-ord, I'll use tcpdump to listen for traffic on br0 and eth2&lt;br /&gt;* On test-ord, I'll use tcpdump to listen for traffic on eth2&lt;br /&gt;* If I don't receive a ping reply or traffic is lost along the path, I'll set VXLAN connectivity by assigning IP Addresses on the br0 interfaces of ovs-dfw (192.168.1.1) and ovs-ord (192.168.1.2). While I have addreses assigned to the br0 interfaces of ovs-{dfw, ord}, I'll test connectivity directly to their local LAN connected servers. On ovs-dfw, I'll ping test-dfw and on ovs-ord, I'll ping test-ord.&lt;br /&gt;&lt;pre&gt;[root@test-dfw ~]# ping 192.168.1.12&lt;br /&gt;PING 192.168.1.12 (192.168.1.12) 56(84) bytes of data.&lt;br /&gt;From 192.168.1.11 icmp_seq=1 Destination Host Unreachable&lt;br /&gt;From 192.168.1.11 icmp_seq=2 Destination Host Unreachable&lt;br /&gt;From 192.168.1.11 icmp_seq=3 Destination Host Unreachable&lt;br /&gt;From 192.168.1.11 icmp_seq=4 Destination Host Unreachable&lt;br /&gt;From 192.168.1.11 icmp_seq=5 Destination Host Unreachable&lt;/pre&gt;&lt;br /&gt;&lt;pre&gt;[root@ovs-ord ~]# tcpdump -i br0 -XX -vvv -e -c 5&lt;br /&gt;tcpdump: WARNING: br0: no IPv4 address assigned&lt;br /&gt;tcpdump: listening on br0, link-type EN10MB (Ethernet), capture size 65535 bytes&lt;br /&gt;05:05:08.627796 bc:76:4e:04:82:f2 (oui Unknown) &amp;gt; Broadcast, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Request who-has 192.168.1.12 tell 192.168.1.11, length 28&lt;br /&gt; 0x0000:  ffff ffff ffff bc76 4e04 82f2 0806 0001  .......vN.......&lt;br /&gt; 0x0010:  0800 0604 0001 bc76 4e04 82f2 c0a8 010b  .......vN.......&lt;br /&gt; 0x0020:  0000 0000 0000 c0a8 010c                 ..........&lt;br /&gt;05:05:09.628891 bc:76:4e:04:82:f2 (oui Unknown) &amp;gt; Broadcast, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Request who-has 192.168.1.12 tell 192.168.1.11, length 28&lt;br /&gt; 0x0000:  ffff ffff ffff bc76 4e04 82f2 0806 0001  .......vN.......&lt;br /&gt; 0x0010:  0800 0604 0001 bc76 4e04 82f2 c0a8 010b  .......vN.......&lt;br /&gt; 0x0020:  0000 0000 0000 c0a8 010c                 ..........&lt;br /&gt;05:05:10.631546 bc:76:4e:04:82:f2 (oui Unknown) &amp;gt; Broadcast, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Request who-has 192.168.1.12 tell 192.168.1.11, length 28&lt;br /&gt; 0x0000:  ffff ffff ffff bc76 4e04 82f2 0806 0001  .......vN.......&lt;br /&gt; 0x0010:  0800 0604 0001 bc76 4e04 82f2 c0a8 010b  .......vN.......&lt;br /&gt; 0x0020:  0000 0000 0000 c0a8 010c                 ..........&lt;br /&gt;05:05:12.629095 bc:76:4e:04:82:f2 (oui Unknown) &amp;gt; Broadcast, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Request who-has 192.168.1.12 tell 192.168.1.11, length 28&lt;br /&gt; 0x0000:  ffff ffff ffff bc76 4e04 82f2 0806 0001  .......vN.......&lt;br /&gt; 0x0010:  0800 0604 0001 bc76 4e04 82f2 c0a8 010b  .......vN.......&lt;br /&gt; 0x0020:  0000 0000 0000 c0a8 010c                 ..........&lt;br /&gt;05:05:13.631575 bc:76:4e:04:82:f2 (oui Unknown) &amp;gt; Broadcast, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Request who-has 192.168.1.12 tell 192.168.1.11, length 28&lt;br /&gt; 0x0000:  ffff ffff ffff bc76 4e04 82f2 0806 0001  .......vN.......&lt;br /&gt; 0x0010:  0800 0604 0001 bc76 4e04 82f2 c0a8 010b  .......vN.......&lt;br /&gt; 0x0020:  0000 0000 0000 c0a8 010c                 ..........&lt;br /&gt;5 packets captured&lt;br /&gt;5 packets received by filter&lt;br /&gt;0 packets dropped by kernel&lt;br /&gt;[root@ovs-ord ~]# tcpdump -i eth2 -XX -vvv -e -c 5&lt;br /&gt;tcpdump: WARNING: eth2: no IPv4 address assigned&lt;br /&gt;tcpdump: listening on eth2, link-type EN10MB (Ethernet), capture size 65535 bytes&lt;br /&gt;05:05:40.637676 bc:76:4e:04:82:f2 (oui Unknown) &amp;gt; Broadcast, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Request who-has 192.168.1.12 tell 192.168.1.11, length 28&lt;br /&gt; 0x0000:  ffff ffff ffff bc76 4e04 82f2 0806 0001  .......vN.......&lt;br /&gt; 0x0010:  0800 0604 0001 bc76 4e04 82f2 c0a8 010b  .......vN.......&lt;br /&gt; 0x0020:  0000 0000 0000 c0a8 010c                 ..........&lt;br /&gt;05:05:41.637641 bc:76:4e:04:82:f2 (oui Unknown) &amp;gt; Broadcast, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Request who-has 192.168.1.12 tell 192.168.1.11, length 28&lt;br /&gt; 0x0000:  ffff ffff ffff bc76 4e04 82f2 0806 0001  .......vN.......&lt;br /&gt; 0x0010:  0800 0604 0001 bc76 4e04 82f2 c0a8 010b  .......vN.......&lt;br /&gt; 0x0020:  0000 0000 0000 c0a8 010c                 ..........&lt;br /&gt;05:05:42.639147 bc:76:4e:04:82:f2 (oui Unknown) &amp;gt; Broadcast, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Request who-has 192.168.1.12 tell 192.168.1.11, length 28&lt;br /&gt; 0x0000:  ffff ffff ffff bc76 4e04 82f2 0806 0001  .......vN.......&lt;br /&gt; 0x0010:  0800 0604 0001 bc76 4e04 82f2 c0a8 010b  .......vN.......&lt;br /&gt; 0x0020:  0000 0000 0000 c0a8 010c                 ..........&lt;br /&gt;05:05:44.643446 bc:76:4e:04:82:f2 (oui Unknown) &amp;gt; Broadcast, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Request who-has 192.168.1.12 tell 192.168.1.11, length 28&lt;br /&gt; 0x0000:  ffff ffff ffff bc76 4e04 82f2 0806 0001  .......vN.......&lt;br /&gt; 0x0010:  0800 0604 0001 bc76 4e04 82f2 c0a8 010b  .......vN.......&lt;br /&gt; 0x0020:  0000 0000 0000 c0a8 010c                 ..........&lt;br /&gt;05:05:45.639364 bc:76:4e:04:82:f2 (oui Unknown) &amp;gt; Broadcast, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Request who-has 192.168.1.12 tell 192.168.1.11, length 28&lt;br /&gt; 0x0000:  ffff ffff ffff bc76 4e04 82f2 0806 0001  .......vN.......&lt;br /&gt; 0x0010:  0800 0604 0001 bc76 4e04 82f2 c0a8 010b  .......vN.......&lt;br /&gt; 0x0020:  0000 0000 0000 c0a8 010c                 ..........&lt;br /&gt;5 packets captured&lt;br /&gt;5 packets received by filter&lt;br /&gt;0 packets dropped by kernel&lt;/pre&gt;&lt;br /&gt;&lt;pre&gt;[root@test-ord ~]# date&lt;br /&gt;Sun Jan 13 05:11:08 UTC 2013&lt;br /&gt;[root@test-ord ~]# tcpdump -i eth2 -XX -vvv -e -c 5&lt;br /&gt;tcpdump: listening on eth2, link-type EN10MB (Ethernet), capture size 65535 bytes&lt;br /&gt;^C&lt;br /&gt;0 packets captured&lt;br /&gt;0 packets received by filter&lt;br /&gt;0 packets dropped by kernel&lt;br /&gt;[root@test-ord ~]# date&lt;br /&gt;Sun Jan 13 05:11:24 UTC 2013&lt;/pre&gt;&lt;br /&gt;&lt;pre&gt;[root@ovs-dfw ~]# ip addr add 192.168.1.1/24 dev br0&lt;br /&gt;[root@ovs-dfw ~]# ping -c2 192.168.1.2&lt;br /&gt;PING 192.168.1.2 (192.168.1.2) 56(84) bytes of data.&lt;br /&gt;64 bytes from 192.168.1.2: icmp_req=1 ttl=64 time=60.5 ms&lt;br /&gt;64 bytes from 192.168.1.2: icmp_req=2 ttl=64 time=25.7 ms&lt;br /&gt;&lt;br /&gt;--- 192.168.1.2 ping statistics ---&lt;br /&gt;2 packets transmitted, 2 received, 0% packet loss, time 1001ms&lt;br /&gt;rtt min/avg/max/mdev = 25.734/43.163/60.593/17.430 ms&lt;br /&gt;[root@ovs-dfw ~]# ping -c2 192.168.1.11&lt;br /&gt;PING 192.168.1.11 (192.168.1.11) 56(84) bytes of data.&lt;br /&gt;64 bytes from 192.168.1.11: icmp_req=1 ttl=64 time=252 ms&lt;br /&gt;64 bytes from 192.168.1.11: icmp_req=2 ttl=64 time=1.10 ms&lt;br /&gt;&lt;br /&gt;--- 192.168.1.11 ping statistics ---&lt;br /&gt;2 packets transmitted, 2 received, 0% packet loss, time 1001ms&lt;br /&gt;rtt min/avg/max/mdev = 1.102/126.650/252.198/125.548 ms&lt;/pre&gt;&lt;br /&gt;&lt;pre&gt;[root@ovs-ord ~]# ip addr add 192.168.1.2/24 dev br0&lt;br /&gt;[root@ovs-ord ~]# &lt;br /&gt;[root@ovs-ord ~]# ping -c2 192.168.1.1&lt;br /&gt;PING 192.168.1.1 (192.168.1.1) 56(84) bytes of data.&lt;br /&gt;64 bytes from 192.168.1.1: icmp_req=1 ttl=64 time=29.1 ms&lt;br /&gt;64 bytes from 192.168.1.1: icmp_req=2 ttl=64 time=26.8 ms&lt;br /&gt;&lt;br /&gt;--- 192.168.1.1 ping statistics ---&lt;br /&gt;2 packets transmitted, 2 received, 0% packet loss, time 1001ms&lt;br /&gt;rtt min/avg/max/mdev = 26.899/28.039/29.180/1.152 ms&lt;br /&gt;[root@ovs-ord ~]# ping -c2 192.168.1.12&lt;br /&gt;PING 192.168.1.12 (192.168.1.12) 56(84) bytes of data.&lt;br /&gt;64 bytes from 192.168.1.12: icmp_req=1 ttl=64 time=33.8 ms&lt;br /&gt;64 bytes from 192.168.1.12: icmp_req=2 ttl=64 time=1.42 ms&lt;br /&gt;&lt;br /&gt;--- 192.168.1.12 ping statistics ---&lt;br /&gt;2 packets transmitted, 2 received, 0% packet loss, time 1002ms&lt;br /&gt;rtt min/avg/max/mdev = 1.423/17.622/33.821/16.199 ms&lt;/pre&gt;&lt;br /&gt;#######################################&lt;br /&gt;tpcdump of a successful ping between ovs-ord and test-ord&lt;br /&gt;#######################################&lt;br /&gt;&lt;pre&gt;[root@test-ord ~]# tcpdump -i eth2 -XX -vvv -e -c 5&lt;br /&gt;tcpdump: listening on eth2, link-type EN10MB (Ethernet), capture size 65535 bytes&lt;br /&gt;05:14:42.582679 bc:76:4e:10:5c:74 (oui Unknown) &amp;gt; bc:76:4e:10:5a:89 (oui Unknown), ethertype IPv4 (0x0800), length 98: (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto ICMP (1), length 84)&lt;br /&gt;    192.168.1.2 &amp;gt; test-ord: ICMP echo request, id 13043, seq 1, length 64&lt;br /&gt; 0x0000:  bc76 4e10 5a89 bc76 4e10 5c74 0800 4500  .vN.Z..vN.\t..E.&lt;br /&gt; 0x0010:  0054 0000 4000 4001 b74a c0a8 0102 c0a8  .T..@.@..J......&lt;br /&gt; 0x0020:  010c 0800 a434 32f3 0001 c242 f250 0000  .....42....B.P..&lt;br /&gt; 0x0030:  0000 a670 0700 0000 0000 1011 1213 1415  ...p............&lt;br /&gt; 0x0040:  1617 1819 1a1b 1c1d 1e1f 2021 2223 2425  ...........!"#$%&lt;br /&gt; 0x0050:  2627 2829 2a2b 2c2d 2e2f 3031 3233 3435  &amp;amp;'()*+,-./012345&lt;br /&gt; 0x0060:  3637                                     67&lt;br /&gt;05:14:42.582755 bc:76:4e:10:5a:89 (oui Unknown) &amp;gt; bc:76:4e:10:5c:74 (oui Unknown), ethertype IPv4 (0x0800), length 98: (tos 0x0, ttl 64, id 43535, offset 0, flags [none], proto ICMP (1), length 84)&lt;br /&gt;    test-ord &amp;gt; 192.168.1.2: ICMP echo reply, id 13043, seq 1, length 64&lt;br /&gt; 0x0000:  bc76 4e10 5c74 bc76 4e10 5a89 0800 4500  .vN.\t.vN.Z...E.&lt;br /&gt; 0x0010:  0054 aa0f 0000 4001 4d3b c0a8 010c c0a8  .T....@.M;......&lt;br /&gt; 0x0020:  0102 0000 ac34 32f3 0001 c242 f250 0000  .....42....B.P..&lt;br /&gt; 0x0030:  0000 a670 0700 0000 0000 1011 1213 1415  ...p............&lt;br /&gt; 0x0040:  1617 1819 1a1b 1c1d 1e1f 2021 2223 2425  ...........!"#$%&lt;br /&gt; 0x0050:  2627 2829 2a2b 2c2d 2e2f 3031 3233 3435  &amp;amp;'()*+,-./012345&lt;br /&gt; 0x0060:  3637                                     67&lt;br /&gt;05:14:43.583017 bc:76:4e:10:5c:74 (oui Unknown) &amp;gt; bc:76:4e:10:5a:89 (oui Unknown), ethertype IPv4 (0x0800), length 98: (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto ICMP (1), length 84)&lt;br /&gt;    192.168.1.2 &amp;gt; test-ord: ICMP echo request, id 13043, seq 2, length 64&lt;br /&gt; 0x0000:  bc76 4e10 5a89 bc76 4e10 5c74 0800 4500  .vN.Z..vN.\t..E.&lt;br /&gt; 0x0010:  0054 0000 4000 4001 b74a c0a8 0102 c0a8  .T..@.@..J......&lt;br /&gt; 0x0020:  010c 0800 7b2e 32f3 0002 c342 f250 0000  ....{.2....B.P..&lt;br /&gt; 0x0030:  0000 ce75 0700 0000 0000 1011 1213 1415  ...u............&lt;br /&gt; 0x0040:  1617 1819 1a1b 1c1d 1e1f 2021 2223 2425  ...........!"#$%&lt;br /&gt; 0x0050:  2627 2829 2a2b 2c2d 2e2f 3031 3233 3435  &amp;amp;'()*+,-./012345&lt;br /&gt; 0x0060:  3637                                     67&lt;br /&gt;05:14:43.583067 bc:76:4e:10:5a:89 (oui Unknown) &amp;gt; bc:76:4e:10:5c:74 (oui Unknown), ethertype IPv4 (0x0800), length 98: (tos 0x0, ttl 64, id 43536, offset 0, flags [none], proto ICMP (1), length 84)&lt;br /&gt;    test-ord &amp;gt; 192.168.1.2: ICMP echo reply, id 13043, seq 2, length 64&lt;br /&gt; 0x0000:  bc76 4e10 5c74 bc76 4e10 5a89 0800 4500  .vN.\t.vN.Z...E.&lt;br /&gt; 0x0010:  0054 aa10 0000 4001 4d3a c0a8 010c c0a8  .T....@.M:......&lt;br /&gt; 0x0020:  0102 0000 832e 32f3 0002 c342 f250 0000  ......2....B.P..&lt;br /&gt; 0x0030:  0000 ce75 0700 0000 0000 1011 1213 1415  ...u............&lt;br /&gt; 0x0040:  1617 1819 1a1b 1c1d 1e1f 2021 2223 2425  ...........!"#$%&lt;br /&gt; 0x0050:  2627 2829 2a2b 2c2d 2e2f 3031 3233 3435  &amp;amp;'()*+,-./012345&lt;br /&gt; 0x0060:  3637                                     67&lt;br /&gt;05:14:44.584026 bc:76:4e:10:5c:74 (oui Unknown) &amp;gt; bc:76:4e:10:5a:89 (oui Unknown), ethertype IPv4 (0x0800), length 98: (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto ICMP (1), length 84)&lt;br /&gt;    192.168.1.2 &amp;gt; test-ord: ICMP echo request, id 13043, seq 3, length 64&lt;br /&gt; 0x0000:  bc76 4e10 5a89 bc76 4e10 5c74 0800 4500  .vN.Z..vN.\t..E.&lt;br /&gt; 0x0010:  0054 0000 4000 4001 b74a c0a8 0102 c0a8  .T..@.@..J......&lt;br /&gt; 0x0020:  010c 0800 8628 32f3 0003 c442 f250 0000  .....(2....B.P..&lt;br /&gt; 0x0030:  0000 c27a 0700 0000 0000 1011 1213 1415  ...z............&lt;br /&gt; 0x0040:  1617 1819 1a1b 1c1d 1e1f 2021 2223 2425  ...........!"#$%&lt;br /&gt; 0x0050:  2627 2829 2a2b 2c2d 2e2f 3031 3233 3435  &amp;amp;'()*+,-./012345&lt;br /&gt; 0x0060:  3637                                     67&lt;br /&gt;5 packets captured&lt;br /&gt;6 packets received by filter&lt;br /&gt;0 packets dropped by kernel&lt;/pre&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/723114321668679170/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2013/01/rackspace-cloud-servers-and-networks_12.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/723114321668679170'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/723114321668679170'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2013/01/rackspace-cloud-servers-and-networks_12.html' title='Rackspace Cloud Servers and Networks with Open vSwitch and VXLANbetween Data Centers'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://4.bp.blogspot.com/-0k5TpTmrbVY/XK-Kmu9Nw_I/AAAAAAAA2GY/E_kf328n2sIM2dC2GeW5IcFnpdIn1v9DACLcBGAs/s72-c/VXLAN-LAB.png' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5562736739311635423</id><published>2012-12-29T18:04:00.001-06:00</published><updated>2019-04-11T11:09:53.891-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='Software Defined Networking'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='SDN'/><category scheme='http://www.blogger.com/atom/ns#' term='openvswitch'/><title type='text'>Playing with Openvswitch.</title><content type='html'>I've been playing with openvswitch a little bit this evening. Here are some notes that I took for a very basic configuration on Ubuntu 12.04.&lt;br/&gt;&lt;br/&gt;------------------------------------------------------------&lt;br/&gt;Documentation References&lt;br/&gt;------------------------------------------------------------&lt;br/&gt;&lt;br/&gt;&lt;a href="http://networkstatic.net/openflow-openvswitch-lab/"&gt;http://networkstatic.net/openflow-openvswitch-lab/&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;a href="http://openvswitch.org/support/config-cookbooks/vlan-configuration-cookbook/"&gt;http://openvswitch.org/support/config-cookbooks/vlan-configuration-cookbook/&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;a href="https://help.ubuntu.com/community/BridgingNetworkInterfaces"&gt;https://help.ubuntu.com/community/BridgingNetworkInterfaces&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;------------------------------------------------------------&lt;br/&gt;Install, Update, and Configure Ubuntu&lt;br/&gt;------------------------------------------------------------&lt;br/&gt;&lt;br/&gt;Installed Ubuntu 12.04 from a thumb drive.&lt;br/&gt;- Started with an 80 GB drive / 4 GB RAM&lt;br/&gt;- Chose custom partitioning&lt;br/&gt;- 500 MB /boot partition&lt;br/&gt;- 4 GB swap partition&lt;br/&gt;- 10 GB / partition&lt;br/&gt;- remaining untouched (~65 GB) will be converted to LVM later.&lt;br/&gt;&lt;br/&gt;&lt;code&gt;&lt;span style="background-color: #ffff00;"&gt;apt-get -y install vim openssh-server lvm2&lt;br/&gt;apt-get -y update&lt;br/&gt;apt-get -y dist-upgrade&lt;br/&gt;reboot&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;br/&gt;&lt;code&gt;&lt;span style="background-color: #ffff00;"&gt;apt-get -y purge network-manager&lt;/span&gt;&lt;/code&gt;&lt;br/&gt;&lt;code&gt;&lt;span style="background-color: #ffff00;"&gt;&lt;br/&gt;echo "auto eth0&lt;br/&gt;iface eth0 inet static&lt;br/&gt;address 172.16.2.11&lt;br/&gt;netmask 255.255.255.0&lt;br/&gt;network 172.16.2.0&lt;br/&gt;broadcast 172.16.2.255&lt;br/&gt;dns-nameservers 172.16.2.1&lt;br/&gt;gateway 172.16.2.1" &amp;gt;&amp;gt; /etc/network/interfaces&lt;/span&gt;&lt;/code&gt;&lt;br/&gt;&lt;br/&gt;&lt;code&gt;&lt;span style="background-color: #ffff00;"&gt;/etc/init.d/networking restart&lt;/span&gt;&lt;/code&gt;&lt;br/&gt;&lt;br/&gt;------------------------------------------------------------&lt;br/&gt;Install Openvswitch&lt;br/&gt;------------------------------------------------------------&lt;br/&gt;&lt;br/&gt;&lt;code&gt;&lt;span style="background-color: #ffff00;"&gt;apt-get -y install openvswitch-datapath-source bridge-utils&lt;br/&gt;module-assistant auto-install openvswitch-datapath&lt;br/&gt;apt-get -y install openvswitch-brcompat openvswitch-common&lt;/span&gt;&lt;/code&gt;&lt;br/&gt;&lt;br/&gt;------------------------------------------------------------&lt;br/&gt;Test Openvswitch Install&lt;br/&gt;------------------------------------------------------------&lt;br/&gt;&lt;br/&gt;&lt;code&gt;&lt;span style="background-color: #ffff00;"&gt;service openvswitch-switch status&lt;br/&gt;ovs-vsctl show&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;br/&gt;------------------------------------------------------------&lt;br/&gt;Configure Openvswitch&lt;br/&gt;------------------------------------------------------------&lt;br/&gt;&lt;br/&gt;The first thing that we'll want to do is enable bridging compatibility.&lt;br/&gt;Bridging will act as the interface between the hypervisor physical network cards and the virtual machines. This will be controlled by openvswitch.&lt;br/&gt;&lt;br/&gt;&lt;code&gt;&lt;span style="background-color: #ffff00;"&gt;sed -i 's/# BRCOMPAT=no/BRCOMPAT=yes/g' /etc/default/openvswitch-switch&lt;br/&gt;service openvswitch-switch restart&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;br/&gt;Once the bridging compatibility has been enabled and openvswitch restarted, we'll need to define a bridging interface and add the physical nic to the bridge.&lt;br/&gt;&lt;br/&gt;*/ NOTE: This should be performed on the physical computer as it will bring down the networking to the host /*&lt;br/&gt;&lt;br/&gt;&lt;code&gt;&lt;span style="background-color: #ffff00;"&gt;sed -i 's/eth0/br0/g' /etc/network/interfaces&lt;br/&gt;echo "auto eth0&lt;br/&gt;iface eth0 inet manual&lt;br/&gt;up ip link set eth0 up" &amp;gt;&amp;gt; /etc/network/interfaces&lt;br/&gt;ovs-vsctl add-br br0&lt;br/&gt;ovs-vsctl add-port br0 eth0&lt;br/&gt;/etc/init.d/networking restart&lt;/span&gt;&lt;/code&gt;&lt;br/&gt;&lt;br/&gt;At this point, the networking should be working again and you should be able to log into the host remotely.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5562736739311635423/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/12/playing-with-openvswitch_29.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5562736739311635423'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5562736739311635423'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/12/playing-with-openvswitch_29.html' title='Playing with Openvswitch.'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4377541711235490124</id><published>2012-11-02T07:18:00.001-05:00</published><updated>2019-04-11T11:09:53.632-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='IPv6'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>The Nerdiest IPv6 related domain name on the Internet</title><content type='html'>I purchased a new domain last night. The site is &lt;a title="3.4028237e+38" href="http://www.3.4028237e38.com" target="_blank"&gt;3.4028237e38.com&lt;/a&gt;. I don't actually have any plans for it, yet. It will most likely just have a bunch of IPv6 related information on it. :) Check it out! &lt;a title="3.4028237e+38" href="http://www.3.4028237e38.com" target="_blank"&gt;www.3.4028237e38.com&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4377541711235490124/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/11/the-nerdiest-ipv6-related-domain-name_2.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4377541711235490124'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4377541711235490124'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/11/the-nerdiest-ipv6-related-domain-name_2.html' title='The Nerdiest IPv6 related domain name on the Internet'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4190103605659228409</id><published>2012-10-30T10:32:00.001-05:00</published><updated>2019-04-11T11:09:53.373-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Subnetting'/><category scheme='http://www.blogger.com/atom/ns#' term='IPv6'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>IPv6 Subnetting</title><content type='html'>Subnetting IPv6 is just like IPv4, that is it uses the powers of two to determine the subnet mask. IPv6 doesn't use a subnet mask, per say. Instead it uses slash notation. For example /64, /48, etc. The slash notation is known as a prefix.&lt;br /&gt;&lt;br /&gt;IPv6 has 8 x 16 bit, colon (:) separated addresses that are 128 bits in length. In IPv6, if a 16 bit field has leading zeros, the leading zeros are dropped from the address. Also, if a 16 bit field has all zeros, then all the zeros can be dropped from the address and will be represented as with a double colon (::). However, the double colon can only occur once. If there are multiple fields that contain all zeros, then one field can be represented with the double colon (::), while the remaining fields will be represented with a single zero (:0:) Another thing to notice is that IPv6 uses Hexadecimal addresses, rather than plain decimal.&lt;br /&gt;&lt;br /&gt;For instance, the example below has a leading zero in the second 16 bit field.&lt;br /&gt;&lt;br /&gt;2001:&lt;span style="background-color: yellow;"&gt;0470&lt;/span&gt;:1f0f/48&lt;br /&gt;&lt;br /&gt;Another way to write that network out is to drop the leading zero:&lt;br /&gt;&lt;br /&gt;2001:&lt;span style="background-color: yellow;"&gt;470&lt;/span&gt;:1f0f/48&lt;br /&gt;&lt;br /&gt;However, if the last two fields contained all zeros. The second field could be represented with the double colon (::), while the third field could be represented with a single 0.&lt;br /&gt;&lt;br /&gt;2001::0/48&lt;br /&gt;&lt;br /&gt;Easy, right? Now, I know what you're thinking. You're thinking, "James, didn't you say that IPv6 Addresses contained 128 bit addresses? I only see 48 bits."&lt;br /&gt;&lt;br /&gt;You're correct. The difference is the prefix, or slash notation at the end of the address. The address 2001:470:1f0f/48 represents a network and not a complete address. The equivalent, in IPv4, would be 192.168.1.0/24. That also represents a network and could tell a network engineer what the usable IP Address range is. IPv6 isn't different, except we do not have to list out the remaining address space for the host bits. However, we could do that by doing 2001:470:1f0f::0:0:0:0/48, which has a usable host IP Address range of 2001:470:1f0f:0:0:0 - 2001:470:1f0f:ffff:ffff:ffff:ffff.&lt;br /&gt;&lt;br /&gt;Now again, I know what you're thinking. "How many addresses does that represent". The answer is 2^80 or 1.2089258e+24.&lt;br /&gt;&lt;br /&gt;Now consider that the IPv4 address space has approximately 4.3 billion addresses (2^32 = 4,294,967,296). Out of those, only about 250 million addresses are usable. That's because the address space has been broken up into smaller chunks, and as you know, each subnet has a network address and a broadcast address that can be assigned to computers. There is also private address ranges (RFC 1918 - 10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16) which can't be routed through the Internet, but only reside on private LAN's and only access the Internet through NAT. There is the 127.0.0.0/8 network used for loop back addresses, Class D networks which is used for multicast, and Class E which is 'experimental' and isn't used. That's a whole lot of wasted address space.&lt;br /&gt;&lt;br /&gt;IPv6 on the other hand is a lot more efficient with address space and there is more address space than any one person will ever need. In fact, every single individual can have an entire Internet worth of address space, in IPv6, and everybody will still have unique addresses. Even better, there will be room to spare. For reference, the IPv6 Address space is 2^128 or 3.4028237e+38. I can't even count that high. :)&lt;br /&gt;&lt;br /&gt;So, enough rambling. How do you subnet the darn things? Simple.&lt;br /&gt;&lt;br /&gt;Let's pretend that your ISP assigns you, 2001:470:1f0f/48. Great! You have more addresses than you'll ever need, but I hope that you're network is layer two only, as that doesn't help you much. :)&lt;br /&gt;&lt;br /&gt;Right now, it's a common practice for your ISP to hand you a /48 prefix, and then you can take that and break it down to /64 prefixes.&lt;br /&gt;&lt;br /&gt;Let's do this.&lt;br /&gt;&lt;br /&gt;2001:470:1f0f:&lt;span style="background-color: yellow;"&gt;0&lt;/span&gt;:0:0:0:0/48&lt;br /&gt;&lt;br /&gt;The /64 prefix would pertain to the fourth 16 bit field, or the first zero, colon separated field in the example above. 48 + 16 = 64, after all. :) Breaking the /48 prefix into multiple /64 prefixes will allot you 65536 networks, each network will provide you with 1.8446744e+19 address. Do you think that you can manage? :)&lt;br /&gt;&lt;br /&gt;Let's list a few of those networks out:&lt;br /&gt;&lt;br /&gt;2001:470:1f0f:0/64&lt;br /&gt;2001:470:1f0f:1/64&lt;br /&gt;...&lt;br /&gt;2001:470:1f0f:ffff/64&lt;br /&gt;&lt;br /&gt;Get the idea? You can also break that out into even smaller networks by going to the next 16 bit field separator, like /80 or /96 or /112&lt;br /&gt;&lt;br /&gt;A /80 prefix, out of a /48 will allot you 4294967296 networks with a total address space of 2.8147498e+14 addresses.&lt;br /&gt;&lt;br /&gt;A /96 prefix, out of a /48 will allot you 2.8147498e+14 networks with a total address space of 4294967296 addresses&lt;br /&gt;&lt;br /&gt;And a /112 prefix, out of a /48 will allot you 1.8446744e+19 networks with a total address space of 65536 addresses.&lt;br /&gt;&lt;br /&gt;Tell me, how could you possibly run out of addresses?&lt;br /&gt;&lt;br /&gt;I hope that you're getting the grasp of this. However, let me try to break this down even further. Let's go back to our taking a/48 prefix and breaking it down int /64 prefixes.&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: orange;"&gt;2001:470:1f0f&lt;/span&gt;:&lt;span style="background-color: lime;"&gt;0&lt;/span&gt;:&lt;span style="background-color: yellow;"&gt;0:0:0:0&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;I've broken the above address into three colors. The first color is &lt;span style="background-color: orange;"&gt;orange&lt;/span&gt; and consists of 2001:470:1f0f, the second color is &lt;span style="background-color: lime;"&gt;green&lt;/span&gt; and consists of the first colon separated 0, and the third color is &lt;span style="background-color: yellow;"&gt;yellow&lt;/span&gt; and consists of the remaining colon separated zeros.&lt;br /&gt;&lt;br /&gt;The first section consists of the global prefix. This section of the address space is called a global prefix and is the network space that your ISP provides to you as the /48 prefix. Now, if your ISP provided you with a /64, the global prefix would be 2001:470:1f0f:0 and the same shift would occur for a /80, a /96, and a /112, etc, but we're focused on a /48 prefix.&lt;br /&gt;&lt;br /&gt;The second field, is the subnet. and this number will increment from 0 - ffff (remember hexadecimal numbers instead of binary). This is the field that you will use to define your networks with layer three boundaries. You can compare this to IPv4 networks, like 192.168.0.0/24 and 192.168.1.0/24 are two different networks that are separated by layer three boundaries. To make the networks communicate with each other, you'll need to add a router to the mix.&lt;br /&gt;&lt;br /&gt;Lastly, the remaining address space, in yellow, is dedicated to host addresses. 0:0:0:0 - ffff:ffff:ffff:ffff is the usable host range. IPv6 has a really cool feature, that will most likely replace DHCP (even though there is DHCPv6 for IPv6 networks), called Autoconf. Autoconf allows automatic allocation of IPv6 Addresses and the host portion of the IPv6 address will be your computers mac address. Each mac address is unique to each computer, which is perfect! For example, if my mac address is 123:456:789:0ab, then my IPv6 address via autoconf would be 2001:470:1f0f:0:123:456:789:ab, assuming that my subnet was 0. If you've been around the IT industry long enough to remember IPX/SPX from the novel days, then this should be a familiar concept to you.&lt;br /&gt;&lt;br /&gt;Whoo.... That was a lot of rambling. I'm sure that I'll come back and edit this soon, as I just did this off the top of my head and I'm sure that there are some errors. If you have any questions, please ask and I'll attempt to clarify. :)</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4190103605659228409/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/ipv6-subnetting_35.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4190103605659228409'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4190103605659228409'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/ipv6-subnetting_35.html' title='IPv6 Subnetting'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-2536026112018301061</id><published>2012-10-29T20:58:00.001-05:00</published><updated>2019-04-11T11:09:48.211-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Subnetting'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='IPv4'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNA Study Notes'/><title type='text'>IPv4 Subnetting Made Easy</title><content type='html'>Many people are intimidated by the idea of subnetting a block of IP Addresses. In reality, it's much easier than what it appears and with some practice it can be easily done in a persons head, on the fly.&lt;br /&gt;&lt;br /&gt;There are two things that a person needs to know, so that they understand how the process works. Those two things are binary and the powers of two. We use binary and the powers of two to calculate the block size of a subnet, the number of hosts a subnet will have, and the number of subnets that a sub-network can accommodate.&lt;br /&gt;&lt;br /&gt;An IP Address of made up of four numbers, separated by a period. Each number represents an octet, which is one byte long. Eight bits make up a byte. Binary is a computer language that has two functions; on or off. The "1" in binary is "on" and the "0" is "off". These binary digits are counted from right to left to determine what an decimal number value is of an octet.&lt;br /&gt;&lt;br /&gt;Each byte can have a value of up to 255, starting with zero. Counting in binary goes against logic to those of us who were taught that we read left to right. Counting in binary is done right to left.&lt;br /&gt;&lt;br /&gt;As an example, &lt;span style="background-color: yellow;"&gt;00110000&lt;/span&gt; has a decimal value of 48. Starting at the 0 on the right, you count 1, 2, 4, 8, 16, 32, 64, 128. Or if you want to go backwards (left to right), 128, 64, 32, 16, 8, 4, 2, 1 See what I mean with the powers of two? Now, the only binary digits that you count are the 1's. You take the binary digits and add them together. In this example, binary digits in position 32 and 16 are turned on (1) and the remaining digits are turned off (0). So, add 32 and 16 together to get the value of 48.&lt;br /&gt;&lt;br /&gt;Let's write out a subnet mask in binary format.&lt;br /&gt;&lt;br /&gt;11111111.11111111.11111111.11000000&lt;br /&gt;&lt;br /&gt;In this example, the decimal format for the subnet mask is:&lt;br /&gt;&lt;br /&gt;255.255.255.192&lt;br /&gt;&lt;br /&gt;Now let's  look at the last octet to determine:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;How we determine the subnet mask&lt;/li&gt;&lt;li&gt;1 bits on, 6 bits off&lt;/li&gt;&lt;li&gt;Block size, that is the size of a subnet&lt;/li&gt;&lt;li&gt;Number of subnets and hosts.&lt;/li&gt;&lt;/ol&gt;We determined the subnet mask by looking at the octet that has off (0) bits, which is the last octet.&lt;br /&gt;&lt;br /&gt;.&lt;span style="background-color: yellow;"&gt;11&lt;/span&gt;000000&lt;br /&gt;&lt;br /&gt;Counting the on bits, 128 + 64 = 192.&lt;br /&gt;&lt;br /&gt;Now, to determine how many the size of a subnet (block size), we'll use the powers of two and count the off bits.&lt;br /&gt;&lt;br /&gt;.11&lt;span style="background-color: yellow;"&gt;000000&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;2^6 (or 1,2,4,8,16,32) The block size in this case is 32.&lt;br /&gt;&lt;br /&gt;To determine the number of subnets, you have to use the powers of two and count the on bits.&lt;br /&gt;&lt;br /&gt;2^2 = 4. So the number of subnets is 4.&lt;br /&gt;&lt;br /&gt;Which IPv4 IP Addresses, each subnet has a network address (the first address in a subnet and defines the start position of a network) and a broadcast address (the last address in a subnet and is used for broadcasting in a network). These addresses can not be assigned to computers.&lt;br /&gt;&lt;br /&gt;For instance: 192.168.1.0/24, The network address is 192.168.1.0, while the broadcast address is 192.168.1.255. This means that the only addresses that are able to be assigned to computers are 192.168.1.1 - 192.168.1.254. The network address and broadcast address are determined by the subnet mask.&lt;br /&gt;&lt;br /&gt;Class A and B networks are subnetted the exact same way. The difference is that you will also utilize the trailing octets in your calculations for the block size and usable number of hosts (computer assignable addresses).&lt;br /&gt;&lt;br /&gt;For instance,&lt;br /&gt;&lt;br /&gt;11111111.11111111.&lt;span style="background-color: yellow;"&gt;1111&lt;/span&gt;&lt;span style="background-color: lime;"&gt;0000.00000000&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The decimal notation for this subnet mask is 255.255.240.0.&lt;br /&gt;&lt;br /&gt;It's block size is 4096. The number of subnets available are 16 and the usable hosts per subnet are 4094 addresses.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/2536026112018301061/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/ipv4-subnetting-made-easy_29.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2536026112018301061'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2536026112018301061'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/ipv4-subnetting-made-easy_29.html' title='IPv4 Subnetting Made Easy'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5228367025349564978</id><published>2012-10-29T10:02:00.001-05:00</published><updated>2019-04-11T11:09:48.470-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='SELinux'/><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>SELinux - Listing Available Contexts</title><content type='html'>As you know, I've been studying for the RHCE exam. One of the things that I was unsure about with SELinux was how to find all the available contexts. It's easy to find booleans with the 'getsebool' command, but what about a context?&lt;br/&gt;&lt;pre&gt;[root@sgnhv ~]# ls -Z /var/lib/ | grep virt&lt;br/&gt;drwxr-xr-x. root    root    system_u:object_r:virt_var_lib_t:s0 libvirt&lt;/pre&gt;&lt;br/&gt;There are TONS of contexts. Today, I found my answer. It's the 'seinfo' command.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;[root@sgnhv ~]# yum provides "*/seinfo"&lt;br/&gt;Loaded plugins: fastestmirror, refresh-packagekit, security&lt;br/&gt;Determining fastest mirrors&lt;br/&gt;epel/metalink                                                                                                                                                 |  13 kB     00:00     &lt;br/&gt; * base: bay.uchicago.edu&lt;br/&gt; * epel: www.gtlib.gatech.edu&lt;br/&gt; * extras: mirrors.easynews.com&lt;br/&gt; * updates: centosmirror.quintex.com&lt;br/&gt;base                                                                                                                                                          | 3.7 kB     00:00     &lt;br/&gt;epel                                                                                                                                                          | 4.3 kB     00:00     &lt;br/&gt;extras                                                                                                                                                        | 3.5 kB     00:00     &lt;br/&gt;updates                                                                                                                                                       | 3.5 kB     00:00     &lt;br/&gt;setools-console-3.3.7-4.el6.x86_64 : Policy analysis command-line tools for SELinux&lt;br/&gt;Repo        : base&lt;br/&gt;Matched from:&lt;br/&gt;Filename    : /usr/bin/seinfo&lt;br/&gt;[root@sgnhv ~]# yum install setools-console&lt;br/&gt;...&lt;br/&gt;Installed:&lt;br/&gt;  setools-console.x86_64 0:3.3.7-4.el6 &lt;br/&gt;[root@sgnhv ~]# seinfo -t | grep samba&lt;br/&gt;   samba_secrets_t&lt;br/&gt;   samba_unconfined_script_exec_t&lt;br/&gt;   samba_net_t&lt;br/&gt;   samba_var_t&lt;br/&gt;   samba_net_exec_t&lt;br/&gt;   samba_net_tmp_t&lt;br/&gt;   samba_unconfined_net_t&lt;br/&gt;   samba_unconfined_script_t&lt;br/&gt;   sambagui_exec_t&lt;br/&gt;   samba_share_t&lt;br/&gt;   samba_initrc_exec_t&lt;br/&gt;   sambagui_t&lt;br/&gt;   samba_etc_t&lt;br/&gt;   samba_log_t&lt;/pre&gt;&lt;br/&gt;&amp;nbsp;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5228367025349564978/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/selinux-listing-available-contexts_29.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5228367025349564978'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5228367025349564978'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/selinux-listing-available-contexts_29.html' title='SELinux - Listing Available Contexts'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-2419214468961370660</id><published>2012-10-27T18:54:00.001-05:00</published><updated>2019-04-11T11:09:38.214-05:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='CIFS'/><category scheme='http://www.blogger.com/atom/ns#' term='SMB'/><title type='text'>RHCE Series: SMB</title><content type='html'>&lt;ul&gt;&lt;li&gt;  Provide network shares to specific clients.&lt;/li&gt;&lt;li&gt;  Provide network shares suitable for group collaboration.&lt;/li&gt;&lt;/ul&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2419214468961370660'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2419214468961370660'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-6251949114016729984</id><published>2012-10-27T18:51:00.001-05:00</published><updated>2019-04-11T11:09:48.728-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Sendmail'/><category scheme='http://www.blogger.com/atom/ns#' term='SMTP'/><category scheme='http://www.blogger.com/atom/ns#' term='Postfix'/><title type='text'>RHCE Series: SMTP</title><content type='html'>&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Configure a mail transfer agent (MTA) to accept inbound email from other systems.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Configure an MTA to forward (relay) email through a smart host.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 postfix]# vim /etc/postfix/main.cf&lt;br/&gt;[root@server1 postfix]# service postfix restart&lt;br/&gt;Shutting down postfix:                                     [  OK  ]&lt;br/&gt;Starting postfix:                                          [  OK  ]&lt;br/&gt;[root@server1 postfix]# egrep 'myhostname|mydomain|inet_interfaces|mydestination' /etc/postfix/main.cf &lt;br/&gt;myhostname = server1.example.com&lt;br/&gt;mydomain = example.com&lt;br/&gt;inet_interfaces = localhost, $myhostname &lt;br/&gt;mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain&lt;/pre&gt;&lt;br/&gt;Now that postfix is setup, let's send mail.&lt;br/&gt;&lt;pre&gt;[root@client1 ~]# mail root@example.com&lt;br/&gt;Subject: test&lt;br/&gt;Hello. This is a test.&lt;br/&gt;.&lt;br/&gt;EOT&lt;/pre&gt;&lt;br/&gt;Now to check the logs on the mail server and check the message.&lt;br/&gt;&lt;pre&gt;&lt;/pre&gt;&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;&lt;pre&gt;Oct 28 00:33:19 server1 postfix/smtpd[4556]: connect from client1.example.com[192.168.1.11]&lt;br/&gt;Oct 28 00:33:19 server1 postfix/smtpd[4556]: A312D4D42: client=client1.example.com[192.168.1.11]&lt;br/&gt;Oct 28 00:33:19 server1 postfix/cleanup[4559]: A312D4D42: message-id=&amp;lt;20121028053319 .81b8f3fccc=".81b8f3fccc" client1.example.com="client1.example.com"&amp;gt;&lt;br/&gt;Oct 28 00:33:19 server1 postfix/qmgr[4554]: A312D4D42: from=, size=649, nrcpt=1 (queue active)&lt;br/&gt;Oct 28 00:33:19 server1 postfix/smtpd[4556]: disconnect from client1.example.com[192.168.1.11]&lt;br/&gt;Oct 28 00:33:20 server1 postfix/local[4560]: A312D4D42: to=, relay=local, delay=0.59, delays=0.24/0.22/0/0.14, dsn=2.0.0, status=sent (delivered to mailbox)&lt;br/&gt;Oct 28 00:33:20 server1 postfix/qmgr[4554]: A312D4D42: removed&lt;br/&gt;&lt;br/&gt;[root@server1 postfix]# mail&lt;br/&gt;Heirloom Mail version 12.4 7/29/08.  Type ? for help.&lt;br/&gt;"/var/spool/mail/root": 1 message 1 new&lt;br/&gt;&amp;gt;N  1 root                  Sun Oct 28 00:33  21/793   "test"&lt;br/&gt;&amp;amp; 1&lt;br/&gt;Message  1:&lt;br/&gt;From root@client1.example.com  Sun Oct 28 00:33:20 2012&lt;br/&gt;Return-Path: &lt;br/&gt;X-Original-To: root@example.com&lt;br/&gt;Delivered-To: root@example.com&lt;br/&gt;Date: Sun, 28 Oct 2012 00:33:19 -0500&lt;br/&gt;To: root@example.com&lt;br/&gt;Subject: test&lt;br/&gt;User-Agent: Heirloom mailx 12.4 7/29/08&lt;br/&gt;Content-Type: text/plain; charset=us-ascii&lt;br/&gt;From: root@client1.example.com (root)&lt;br/&gt;Status: R&lt;br/&gt;&lt;br/&gt;Hello. This is a test.&lt;/pre&gt;&lt;br/&gt;&lt;pre&gt;&lt;!--20121028053319--&gt;&lt;/pre&gt;&lt;br/&gt;Now, let's set up a mail relay to forward mail to client1.example.com&lt;br/&gt;&lt;br/&gt;We need to add an entry called 'relayhost' to &lt;span style="background-color: lime;"&gt;/etc/postfix/main.cf&lt;/span&gt; on server1.example.com. Then restart postfix.&lt;br/&gt;&lt;pre&gt;relayhost = client1.example.com&lt;/pre&gt;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# mail root@example.com&lt;br/&gt;Subject: test &lt;br/&gt;this is a test.&lt;br/&gt;.&lt;br/&gt;EOT&lt;br/&gt;[root@server1 ~]# tail -f /var/log/maillog &lt;br/&gt;Oct 28 00:45:37 server1 postfix/postfix-script[4797]: starting the Postfix mail system&lt;br/&gt;Oct 28 00:45:37 server1 postfix/master[4798]: daemon started -- version 2.6.6, configuration /etc/postfix&lt;br/&gt;Oct 28 00:45:37 server1 postfix/qmgr[4801]: 590394D43: from=&amp;lt;&amp;gt;, size=2479, nrcpt=1 (queue active)&lt;br/&gt;Oct 28 00:45:42 server1 postfix/smtp[4803]: 590394D43: to=, relay=client1.example.com[192.168.1.11]:25, delay=856, delays=851/0.03/5/0.08, dsn=2.0.0, status=sent (250 2.0.0 Ok: queued as 5B1293FCCD)&lt;br/&gt;Oct 28 00:45:42 server1 postfix/qmgr[4801]: 590394D43: removed&lt;br/&gt;Oct 28 00:45:57 server1 postfix/pickup[4800]: 00CB44D43: uid=0 from=&lt;br/&gt;Oct 28 00:45:57 server1 postfix/cleanup[4809]: 00CB44D43: message-id=&amp;lt;20121028054557 .00cb44d43=".00cb44d43" server1.example.com="server1.example.com"&amp;gt;&lt;br/&gt;Oct 28 00:45:57 server1 postfix/qmgr[4801]: 00CB44D43: from=, size=444, nrcpt=1 (queue active)&lt;br/&gt;Oct 28 00:45:57 server1 postfix/smtp[4803]: 00CB44D43: to=, relay=client1.example.com[192.168.1.11]:25, delay=0.26, delays=0.21/0/0/0.04, dsn=2.0.0, status=sent (250 2.0.0 Ok: queued as 1B9B43FCCD)&lt;br/&gt;Oct 28 00:45:57 server1 postfix/qmgr[4801]: 00CB44D43: removed&lt;/pre&gt;&lt;br/&gt;&lt;pre&gt;Oct 28 00:45:57 localhost postfix/smtpd[2980]: connect from unknown[192.168.1.1]&lt;br/&gt;Oct 28 00:45:57 localhost postfix/smtpd[2980]: 1B9B43FCCD: client=unknown[192.168.1.1]&lt;br/&gt;Oct 28 00:45:57 localhost postfix/cleanup[2984]: 1B9B43FCCD: message-id=&amp;lt;20121028054557 .00cb44d43=".00cb44d43" server1.example.com="server1.example.com"&amp;gt;&lt;br/&gt;Oct 28 00:45:57 localhost postfix/qmgr[2978]: 1B9B43FCCD: from=, size=628, nrcpt=1 (queue active)&lt;br/&gt;Oct 28 00:45:57 localhost postfix/smtpd[2980]: disconnect from unknown[192.168.1.1]&lt;br/&gt;Oct 28 00:45:57 localhost postfix/local[2985]: 1B9B43FCCD: to=, relay=local, delay=0.07, delays=0.04/0/0/0.03, dsn=2.0.0, status=sent (delivered to mailbox)&lt;br/&gt;Oct 28 00:45:57 localhost postfix/qmgr[2978]: 1B9B43FCCD: removed&lt;br/&gt;&lt;br/&gt;[root@client1 postfix]# mail&lt;br/&gt;Heirloom Mail version 12.4 7/29/08.  Type ? for help.&lt;br/&gt;"/var/spool/mail/root": 2 messages 2 new&lt;br/&gt;&amp;gt;N  1 Mail Delivery System  Sun Oct 28 00:45  78/2739  "Undelivered Mail Returned to Sender"&lt;br/&gt; N  2 root                  Sun Oct 28 00:45  21/772   "test"&lt;br/&gt;&amp;amp; 2&lt;br/&gt;Message  2:&lt;br/&gt;From root@server1.example.com  Sun Oct 28 00:45:57 2012&lt;br/&gt;Return-Path: &lt;br/&gt;X-Original-To: root@example.com&lt;br/&gt;Delivered-To: root@example.com&lt;br/&gt;Date: Sun, 28 Oct 2012 00:45:56 -0500&lt;br/&gt;To: root@example.com&lt;br/&gt;Subject: test&lt;br/&gt;User-Agent: Heirloom mailx 12.4 7/29/08&lt;br/&gt;Content-Type: text/plain; charset=us-ascii&lt;br/&gt;From: root@server1.example.com (root)&lt;br/&gt;Status: R&lt;br/&gt;&lt;br/&gt;this is a test.&lt;/pre&gt;&lt;br/&gt;Be sure to chkconfig postfix to ensure it will be persistent at boot and you'll need to make sure that iptables will allow the smtp traffic as well.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/6251949114016729984/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-smtp_27.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6251949114016729984'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6251949114016729984'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-smtp_27.html' title='RHCE Series: SMTP'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4937556699505140366</id><published>2012-10-27T17:38:00.001-05:00</published><updated>2019-04-11T11:09:48.988-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='NTP'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='OpenSSH'/><category scheme='http://www.blogger.com/atom/ns#' term='SSH'/><title type='text'>RHCE Series: SSH and NTP</title><content type='html'>SSH&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Configure key-based authentication.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Configure additional options described in documentation.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;NTP&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Synchronize time using other NTP peers.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;In Red Hat 6 (and I'm sure in 5 as well), public key authentication is enabled by default, but if you're unsure, you can uncomment the option and verify that it is set to yes.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# vim /etc/ssh/sshd_config &lt;br/&gt;[root@server1 ~]# egrep 'PubkeyAuthentication|AuthorizedKeysFile' /etc/ssh/sshd_config &lt;br/&gt;PubkeyAuthentication yes&lt;br/&gt;AuthorizedKeysFile .ssh/authorized_keys&lt;br/&gt;[root@server1 ~]# service sshd restart&lt;br/&gt;Stopping sshd:                                             [  OK  ]&lt;br/&gt;Starting sshd:                                             [  OK  ]&lt;/pre&gt;&lt;br/&gt;Once that is complete. We can go to our client pc, generate keys, and copy the public key over.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@client1 ~]# ssh-keygen -t rsa&lt;br/&gt;Generating public/private rsa key pair.&lt;br/&gt;Enter file in which to save the key (/root/.ssh/id_rsa): &lt;br/&gt;Enter passphrase (empty for no passphrase): &lt;br/&gt;Enter same passphrase again: &lt;br/&gt;Your identification has been saved in /root/.ssh/id_rsa.&lt;br/&gt;Your public key has been saved in /root/.ssh/id_rsa.pub.&lt;br/&gt;The key fingerprint is:&lt;br/&gt;c6:83:f5:86:ad:cf:06:d3:73:f6:22:8f:0a:a7:06:99 root@client1.example.com&lt;br/&gt;The key's randomart image is:&lt;br/&gt;+--[ RSA 2048]----+&lt;br/&gt;|                 |&lt;br/&gt;|                 |&lt;br/&gt;|        .        |&lt;br/&gt;|       + +       |&lt;br/&gt;|     o. S.+      |&lt;br/&gt;|    E  .o+o o    |&lt;br/&gt;|     .. oo + .   |&lt;br/&gt;|      .+ oo.. .  |&lt;br/&gt;|     .. .o+o..   |&lt;br/&gt;+-----------------+&lt;br/&gt;[root@client1 ~]# ssh-copy-id -i ~/.ssh/id_rsa.pub 192.168.1.1&lt;br/&gt;The authenticity of host '192.168.1.1 (192.168.1.1)' can't be established.&lt;br/&gt;RSA key fingerprint is 40:f4:04:4b:68:53:92:55:82:f2:f4:68:db:0a:14:4f.&lt;br/&gt;Are you sure you want to continue connecting (yes/no)? yes&lt;br/&gt;Warning: Permanently added '192.168.1.1' (RSA) to the list of known hosts.&lt;br/&gt;root@192.168.1.1's password: &lt;br/&gt;Now try logging into the machine, with "ssh '192.168.1.1'", and check in:&lt;br/&gt;&lt;br/&gt;  .ssh/authorized_keys&lt;br/&gt;&lt;br/&gt;to make sure we haven't added extra keys that you weren't expecting.&lt;/pre&gt;&lt;br/&gt;Once that has completed, we can ssh to 192.168.1.1 (server1) from client1 without a password, but use a private / public key exchange.&lt;br/&gt;&lt;br/&gt;Now, let's configure ntp.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre class="crayon-selected"&gt;[root@client1 ~]# date&lt;br/&gt;Sun Oct 28 04:32:13 CDT 2012&lt;br/&gt;[root@client1 ~]# yum -y install ntp&lt;br/&gt;[root@client1 ~]# grep server /etc/ntp.conf &lt;br/&gt;# Use public servers from the pool.ntp.org project.&lt;br/&gt;server 0.centos.pool.ntp.org&lt;br/&gt;server 1.centos.pool.ntp.org&lt;br/&gt;server 2.centos.pool.ntp.org&lt;br/&gt;#broadcast 192.168.1.255 autokey # broadcast server&lt;br/&gt;#broadcast 224.0.1.1 autokey  # multicast server&lt;br/&gt;#manycastserver 239.255.254.254  # manycast server&lt;br/&gt;#server 127.127.1.0 # local clock&lt;br/&gt;[root@client1 ~]# ntpdate 0.centos.pool.ntp.org&lt;br/&gt;27 Oct 23:33:34 ntpdate[2707]: step time server 66.241.101.63 offset -17998.779036 sec&lt;br/&gt;[root@client1 ~]# date&lt;br/&gt;Sat Oct 27 23:33:37 CDT 2012&lt;br/&gt;[root@client1 ~]# service ntpd start&lt;br/&gt;Starting ntpd:                                             [  OK  ]&lt;br/&gt;[root@client1 ~]# ntpq -p&lt;br/&gt;     remote           refid      st t when poll reach   delay   offset  jitter&lt;br/&gt;==============================================================================&lt;br/&gt; mirror          204.9.54.119     2 u    8   64    1   48.895    1.225   0.000&lt;br/&gt; 71.19.224.242   131.107.13.100   2 u    7   64    1   54.330    0.806   0.000&lt;br/&gt; ntp1.Housing.Be 128.32.206.55    2 u    6   64    1   51.920   -6.134   0.000&lt;/pre&gt;&lt;br/&gt;If you want to use other peers, you can modify the 'server' directive in /etc/ntpd.conf. Besure to use 'chkconfig' to make ntpd persistent.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4937556699505140366/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-ssh-and-ntp_27.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4937556699505140366'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4937556699505140366'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-ssh-and-ntp_27.html' title='RHCE Series: SSH and NTP'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4325617279771370502</id><published>2012-10-27T17:16:00.001-05:00</published><updated>2019-04-11T11:09:49.249-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Apache'/><category scheme='http://www.blogger.com/atom/ns#' term='http'/><title type='text'>RHCE Series: HTTP</title><content type='html'>&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Configure a virtual host.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Configure private directories.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Deploy a basic CGI application.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Configure group-managed content.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;Install apache:&lt;br/&gt;&lt;br/&gt;yum -y install httpd httpd-manual links&lt;br/&gt;&lt;br/&gt;The httpd-manual is a great resource for information, but isn't needed. The links package is needed for the server-status utilities.&lt;br/&gt;&lt;br/&gt;First, let's create our virtual hosts. We'll need to create our DocumentRoot directories.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# mkdir /var/www/{server1.example.com,vhost.server1.example.com}&lt;br/&gt;[root@server1 ~]# ls /var/www/&lt;br/&gt;cgi-bin  error  html  icons  manual  server1.example.com  vhost.server1.example.com&lt;/pre&gt;&lt;br/&gt;Next, you'll need to edit the /etc/httpd/conf/httpd.conf&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# cd /etc/httpd/conf&lt;br/&gt;[root@server1 conf]# vim httpd.conf &lt;br/&gt;[root@server1 conf]# tail httpd.conf &lt;br/&gt;#&lt;br/&gt;NameVirtualHost *:80&lt;br/&gt;&lt;br/&gt; DocumentRoot /var/www/server1.example.com&lt;br/&gt; ServerName server1.example.com&lt;br/&gt;&lt;br/&gt;&lt;br/&gt; DocumentRoot /var/www/vhost.server1.example.com&lt;br/&gt; ServerName vhost.server1.example.com&lt;/pre&gt;&lt;br/&gt;When you enable virtual hosts in apache, the default website in /var/www/html will not work. You will have to add another virtual host if you want to serve content from that directory. In this configuration, apache will intercept the http headers and look at the destination url and direct traffic based upon that information.&lt;br/&gt;&lt;br/&gt;Now that the httpd.conf has been modified, we'll need to restart apache.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# service httpd restart&lt;br/&gt;Stopping httpd:                                            [  OK  ]&lt;br/&gt;Starting httpd:                                            [  OK  ]&lt;br/&gt;[root@server1 ~]# httpd -S&lt;br/&gt;VirtualHost configuration:&lt;br/&gt;wildcard NameVirtualHosts and _default_ servers:&lt;br/&gt;_default_:8443         server1.example.com (/etc/httpd/conf.d/nss.conf:84)&lt;br/&gt;*:80                   is a NameVirtualHost&lt;br/&gt;         default server server1.example.com (/etc/httpd/conf/httpd.conf:1011)&lt;br/&gt;         port 80 namevhost server1.example.com (/etc/httpd/conf/httpd.conf:1011)&lt;br/&gt;         port 80 namevhost vhost.server1.example.com (/etc/httpd/conf/httpd.conf:1015)&lt;br/&gt;Syntax OK&lt;br/&gt;[root@server1 ~]# apachectl status&lt;br/&gt;                                   Not Found&lt;br/&gt;&lt;br/&gt;   The requested URL /server-status was not found on this server.&lt;br/&gt;&lt;br/&gt;     ----------------------------------------------------------------------&lt;br/&gt;&lt;br/&gt;    Apache/2.2.15 (CentOS) Server at localhost Port 80&lt;/pre&gt;&lt;br/&gt;You'll notice that you can use the 'httpd -S' command to show the virtual hosts residing on the server. Let's create some content to view in the virtual hosts.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# echo "server1.example.com" &amp;gt; /var/www/server1.example.com/index.htm&lt;br/&gt;[root@server1 ~]# echo "vhost.server1.example.com" &amp;gt; /var/www/vhost.server1.example.com/index.htm&lt;/pre&gt;&lt;br/&gt;Now, let's try to view the content.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# ping -c 1 server1.example.com&lt;br/&gt;PING server1.example.com (192.168.1.1) 56(84) bytes of data.&lt;br/&gt;64 bytes from server1.example.com (192.168.1.1): icmp_seq=1 ttl=64 time=0.042 ms&lt;br/&gt;&lt;br/&gt;--- server1.example.com ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.042/0.042/0.042/0.000 ms&lt;br/&gt;[root@server1 ~]# ping -c 1 vhost.server1.example.com&lt;br/&gt;PING server1.example.com (192.168.1.1) 56(84) bytes of data.&lt;br/&gt;64 bytes from server1.example.com (192.168.1.1): icmp_seq=1 ttl=64 time=0.028 ms&lt;br/&gt;&lt;br/&gt;--- server1.example.com ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.028/0.028/0.028/0.000 ms&lt;br/&gt;[root@server1 ~]# curl -I server1.example.com&lt;br/&gt;HTTP/1.1 403 Forbidden&lt;br/&gt;Date: Sun, 28 Oct 2012 02:54:16 GMT&lt;br/&gt;Server: Apache/2.2.15 (CentOS)&lt;br/&gt;Accept-Ranges: bytes&lt;br/&gt;Content-Length: 5039&lt;br/&gt;Connection: close&lt;br/&gt;Content-Type: text/html; charset=UTF-8&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# curl -I vhost.server1.example.com&lt;br/&gt;HTTP/1.1 403 Forbidden&lt;br/&gt;Date: Sun, 28 Oct 2012 02:54:24 GMT&lt;br/&gt;Server: Apache/2.2.15 (CentOS)&lt;br/&gt;Accept-Ranges: bytes&lt;br/&gt;Content-Length: 5039&lt;br/&gt;Connection: close&lt;br/&gt;Content-Type: text/html; charset=UTF-8&lt;/pre&gt;&lt;br/&gt;A quick peak at the error_log shows why we can't view the page(s).&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# tail -f /var/log/httpd/error_log &lt;br/&gt;[Sat Oct 27 21:48:58 2012] [notice] SELinux policy enabled; httpd running as context unconfined_u:system_r:httpd_t:s0&lt;br/&gt;[Sat Oct 27 21:48:58 2012] [notice] suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)&lt;br/&gt;[Sat Oct 27 21:48:58 2012] [notice] Digest: generating secret for digest authentication ...&lt;br/&gt;[Sat Oct 27 21:48:58 2012] [notice] Digest: done&lt;br/&gt;[Sat Oct 27 21:48:59 2012] [notice] Apache/2.2.15 (Unix) DAV/2 mod_nss/2.2.15 NSS/3.13.1.0 Basic ECC configured -- resuming normal operations&lt;br/&gt;[Sat Oct 27 21:49:06 2012] [error] [client 127.0.0.1] File does not exist: /var/www/server1.example.com/server-status&lt;br/&gt;[Sat Oct 27 21:54:16 2012] [error] [client 192.168.1.1] Directory index forbidden by Options directive: /var/www/server1.example.com/&lt;br/&gt;[Sat Oct 27 21:54:24 2012] [error] [client 192.168.1.1] Directory index forbidden by Options directive: /var/www/vhost.server1.example.com/&lt;br/&gt;[Sat Oct 27 21:54:56 2012] [error] [client 192.168.1.1] Directory index forbidden by Options directive: /var/www/server1.example.com/&lt;br/&gt;[Sat Oct 27 21:55:06 2012] [error] [client 192.168.1.1] Directory index forbidden by Options directive: /var/www/vhost.server1.example.com/&lt;/pre&gt;&lt;br/&gt;Notice, that I labeled the index files index.htm. Be default, index.html and index.html.var are the default index pages AND apache, by default, doesn't print a directory listing as a default index page if a index.html or index.html.var page doesn't exist. So, to fix this, I had to add index.htm to the "DirectoryIndex" directive in the httpd.conf&lt;br/&gt;&lt;pre&gt;#&lt;br/&gt;# DirectoryIndex: sets the file that Apache will serve if a directory&lt;br/&gt;# is requested.&lt;br/&gt;#&lt;br/&gt;# The index.html.var file (a type-map) is used to deliver content-&lt;br/&gt;# negotiated documents.  The MultiViews Option can be used for the &lt;br/&gt;# same purpose, but it is much slower.&lt;br/&gt;#&lt;br/&gt;DirectoryIndex index.html index.html.var index.htm&lt;/pre&gt;&lt;br/&gt;Now, let's try this again.&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# vim /etc/httpd/conf/httpd.conf &lt;br/&gt;[root@server1 ~]# service httpd restart&lt;br/&gt;Stopping httpd:                                            [  OK  ]&lt;br/&gt;Starting httpd:                                            [  OK  ]&lt;br/&gt;[root@server1 ~]# &lt;br/&gt;[root@server1 ~]# &lt;br/&gt;[root@server1 ~]# curl -I server1.example.com&lt;br/&gt;HTTP/1.1 200 OK&lt;br/&gt;Date: Sun, 28 Oct 2012 03:05:43 GMT&lt;br/&gt;Server: Apache/2.2.15 (CentOS)&lt;br/&gt;Last-Modified: Sun, 28 Oct 2012 02:52:13 GMT&lt;br/&gt;ETag: "4d12-14-4cd15a3d274c1"&lt;br/&gt;Accept-Ranges: bytes&lt;br/&gt;Content-Length: 20&lt;br/&gt;Connection: close&lt;br/&gt;Content-Type: text/html; charset=UTF-8&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# curl -I vhost.server1.example.com&lt;br/&gt;HTTP/1.1 200 OK&lt;br/&gt;Date: Sun, 28 Oct 2012 03:05:54 GMT&lt;br/&gt;Server: Apache/2.2.15 (CentOS)&lt;br/&gt;Last-Modified: Sun, 28 Oct 2012 02:52:26 GMT&lt;br/&gt;ETag: "4d32-1a-4cd15a49dd342"&lt;br/&gt;Accept-Ranges: bytes&lt;br/&gt;Content-Length: 26&lt;br/&gt;Connection: close&lt;br/&gt;Content-Type: text/html; charset=UTF-8&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# curl vhost.server1.example.com&lt;br/&gt;vhost.server1.example.com&lt;br/&gt;[root@server1 ~]# curl server1.example.com&lt;br/&gt;server1.example.com&lt;br/&gt;[root@server1 ~]# ls -Z /var/www/&lt;br/&gt;drwxr-xr-x. root root system_u:object_r:httpd_sys_script_exec_t:s0 cgi-bin&lt;br/&gt;drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 error&lt;br/&gt;drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 html&lt;br/&gt;drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 icons&lt;br/&gt;drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 manual&lt;br/&gt;drwxr-xr-x. root root unconfined_u:object_r:httpd_sys_content_t:s0 server1.example.com&lt;br/&gt;drwxr-xr-x. root root unconfined_u:object_r:httpd_sys_content_t:s0 vhost.server1.example.com&lt;br/&gt;[root@server1 ~]# ls -Z /var/www/*example.com/&lt;br/&gt;/var/www/server1.example.com/:&lt;br/&gt;-rw-r--r--. root root unconfined_u:object_r:httpd_sys_content_t:s0 index.htm&lt;br/&gt;&lt;br/&gt;/var/www/vhost.server1.example.com/:&lt;br/&gt;-rw-r--r--. root root unconfined_u:object_r:httpd_sys_content_t:s0 index.htm&lt;/pre&gt;&lt;br/&gt;Now, the sites are working. So, let's go on to the next objective of configuring private directories.&lt;br/&gt;&lt;br/&gt;We'll set up vhost.server1.example.com to create a private directory with.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# htpasswd -cm /var/www/vhost.server1.example.com/.htpasswd james&lt;br/&gt;New password: &lt;br/&gt;Re-type new password: &lt;br/&gt;Adding password for user james&lt;br/&gt;[root@server1 ~]# cat /var/www/vhost.server1.example.com/.htpasswd &lt;br/&gt;james:$apr1$dTUr3R1T$l77COVCwfP0ZKoF05Vq081&lt;br/&gt;[root@server1 ~]# vim /etc/httpd/conf/httpd.conf &lt;br/&gt;[root@server1 ~]# tail -6 /etc/httpd/conf/httpd.conf &lt;br/&gt;&lt;br/&gt; AuthType Basic&lt;br/&gt; AuthName "Private"&lt;br/&gt; AuthUserFile /var/www/vhost.server1.example.com/.htpasswd&lt;br/&gt; Require valid-user&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# service httpd restart&lt;br/&gt;Stopping httpd:                                            [  OK  ]&lt;br/&gt;Starting httpd:                                            [  OK  ]&lt;br/&gt;[root@server1 ~]# curl -I vhost.server1.example.com&lt;br/&gt;HTTP/1.1 401 Authorization Required&lt;br/&gt;Date: Sun, 28 Oct 2012 03:42:59 GMT&lt;br/&gt;Server: Apache/2.2.15 (CentOS)&lt;br/&gt;WWW-Authenticate: Basic realm="Private"&lt;br/&gt;Connection: close&lt;br/&gt;Content-Type: text/html; charset=iso-8859-1&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# curl --user james:testuser vhost.server1.example.com&lt;br/&gt;vhost.server1.example.com&lt;/pre&gt;&lt;br/&gt;Now, let's go ahead and set up group managed content, then we'll deploy a cgi application.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# echo "sysadmin: james user1 user2" &amp;gt; /var/www/vhost.server1.example.com/.htgroup &lt;br/&gt;[root@server1 ~]# cat /var/www/vhost.server1.example.com/.htgroup &lt;br/&gt;sysadmin: james user1 user2&lt;br/&gt;[root@server1 ~]# vim /etc/httpd/conf/httpd.conf &lt;br/&gt;[root@server1 ~]# tail -7 /etc/httpd/conf/httpd.conf &lt;br/&gt;&lt;br/&gt; AuthType Basic&lt;br/&gt; AuthName "Private"&lt;br/&gt; AuthUserFile /var/www/vhost.server1.example.com/.htpasswd&lt;br/&gt; AuthGroupFile /var/www/vhost.server1.example.com/.htgroup&lt;br/&gt; Require group sysadmin&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# service httpd restart&lt;br/&gt;Stopping httpd:                                            [  OK  ]&lt;br/&gt;Starting httpd:                                            [  OK  ]&lt;br/&gt;[root@server1 ~]# curl -I vhost.server1.example.com&lt;br/&gt;HTTP/1.1 401 Authorization Required&lt;br/&gt;Date: Sun, 28 Oct 2012 03:49:50 GMT&lt;br/&gt;Server: Apache/2.2.15 (CentOS)&lt;br/&gt;WWW-Authenticate: Basic realm="Private"&lt;br/&gt;Connection: close&lt;br/&gt;Content-Type: text/html; charset=iso-8859-1&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# curl --user james:testuser vhost.server1.example.com&lt;br/&gt;vhost.server1.example.com&lt;/pre&gt;&lt;br/&gt;This time, the user 'james' was allowed because the user was in the 'sysadmin' group. Now the cgi application.&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# vim /var/www/cgi-bin/hello.cgi&lt;br/&gt;[root@server1 ~]# chmod +x /var/www/cgi-bin/hello.cgi &lt;br/&gt;[root@server1 ~]# cat /var/www/cgi-bin/hello.cgi &lt;br/&gt;#!/usr/bin/perl&lt;br/&gt;&lt;br/&gt;print "Content-type: text/html\r\n\n";&lt;br/&gt;&lt;br/&gt;print "Hello!\n";&lt;br/&gt;[root@server1 ~]# curl -I server1.example.com/cgi-bin/hello.cgi&lt;br/&gt;HTTP/1.1 200 OK&lt;br/&gt;Date: Sun, 28 Oct 2012 04:01:36 GMT&lt;br/&gt;Server: Apache/2.2.15 (CentOS)&lt;br/&gt;Connection: close&lt;br/&gt;Content-Type: text/html; charset=UTF-8&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# curl server1.example.com/cgi-bin/hello.cgi&lt;br/&gt;Hello!&lt;/pre&gt;&lt;br/&gt;The last and final objective, though not on the RHCE offical list, it's a useful tool for working with httpd servers. Setting up the server-status tool.&lt;br/&gt;&lt;br/&gt;First, you'll need to edit the httpd.conf.&lt;br/&gt;&lt;pre class="crayon-selected"&gt;#&lt;br/&gt;# Allow server status reports generated by mod_status,&lt;br/&gt;# with the URL of http://servername/server-status&lt;br/&gt;# Change the ".example.com" to match your domain to enable.&lt;br/&gt;#&lt;br/&gt;ExtendedStatus On&lt;br/&gt;&lt;br/&gt;    SetHandler server-status&lt;br/&gt;    Order deny,allow&lt;br/&gt;    Deny from all&lt;br/&gt;    Allow from 127.0.0.1 &lt;br/&gt;&lt;br/&gt;[root@server1 ~]# service httpd restart&lt;br/&gt;Stopping httpd:                                            [  OK  ]&lt;br/&gt;Starting httpd:                                            [  OK  ]&lt;br/&gt;[root@server1 ~]# apachectl fullstatus&lt;br/&gt;                       Apache Server Status for localhost&lt;br/&gt;&lt;br/&gt;   Server Version: Apache/2.2.15 (Unix) DAV/2 mod_nss/2.2.15 NSS/3.13.1.0&lt;br/&gt;   Basic ECC&lt;br/&gt;&lt;br/&gt;   Server Built: Feb 13 2012 22:31:42&lt;br/&gt;&lt;br/&gt;     ----------------------------------------------------------------------&lt;br/&gt;&lt;br/&gt;   Current Time: Saturday, 27-Oct-2012 23:07:09 CDT&lt;br/&gt;&lt;br/&gt;   Restart Time: Saturday, 27-Oct-2012 23:06:51 CDT&lt;br/&gt;&lt;br/&gt;   Parent Server Generation: 0&lt;br/&gt;&lt;br/&gt;   Server uptime: 18 seconds&lt;br/&gt;&lt;br/&gt;   Total accesses: 1 - Total Traffic: 2 kB&lt;br/&gt;&lt;br/&gt;   CPU Usage: u.08 s.01 cu0 cs0 - .5% CPU load&lt;br/&gt;&lt;br/&gt;   .0556 requests/sec - 113 B/second - 2048 B/request&lt;br/&gt;&lt;br/&gt;   1 requests currently being processed, 7 idle workers&lt;br/&gt;&lt;br/&gt; __W_____........................................................&lt;br/&gt; ................................................................&lt;br/&gt; ................................................................&lt;br/&gt; ................................................................&lt;br/&gt;&lt;br/&gt;   Scoreboard Key:&lt;br/&gt;   "_" Waiting for Connection, "S" Starting up, "R" Reading Request,&lt;br/&gt;   "W" Sending Reply, "K" Keepalive (read), "D" DNS Lookup,&lt;br/&gt;   "C" Closing connection, "L" Logging, "G" Gracefully finishing,&lt;br/&gt;   "I" Idle cleanup of worker, "." Open slot with no current process&lt;br/&gt;&lt;br/&gt;Srv PID   Acc  M CPU  SS Req Conn Child Slot  Client          VHost           Request     &lt;br/&gt;                                                                           GET            &lt;br/&gt;0-0 3474 0/1/1 _ 0.09 4  5   0.0  0.00  0.00 127.0.0.1 server1.example.com /server-status &lt;br/&gt;                                                                           HTTP/1.1       &lt;br/&gt;                                                                           GET            &lt;br/&gt;2-0 3476 0/0/0 W 0.00 0  0   0.0  0.00  0.00 127.0.0.1 server1.example.com /server-status &lt;br/&gt;                                                                           HTTP/1.1       &lt;br/&gt;&lt;br/&gt;     ----------------------------------------------------------------------&lt;br/&gt;&lt;br/&gt;    Srv  Child Server number - generation                            &lt;br/&gt;    PID  OS process ID                                               &lt;br/&gt;    Acc  Number of accesses this connection / this child / this slot &lt;br/&gt;     M   Mode of operation                                           &lt;br/&gt;    CPU  CPU usage, number of seconds                                &lt;br/&gt;    SS   Seconds since beginning of most recent request              &lt;br/&gt;    Req  Milliseconds required to process most recent request        &lt;br/&gt;   Conn  Kilobytes transferred this connection                       &lt;br/&gt;   Child Megabytes transferred this child                            &lt;br/&gt;   Slot  Total megabytes transferred this slot                       &lt;br/&gt;&lt;br/&gt;     ----------------------------------------------------------------------&lt;br/&gt;&lt;br/&gt;    Apache/2.2.15 (CentOS) Server at localhost Port 80&lt;/pre&gt;&lt;br/&gt;You can use 'apachectl status|fullstatus' to get real time statistics of the web server utilization.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4325617279771370502/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-http_27.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4325617279771370502'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4325617279771370502'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-http_27.html' title='RHCE Series: HTTP'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1201644634062079262</id><published>2012-10-26T18:41:00.001-05:00</published><updated>2019-04-11T11:09:49.511-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='vsftpd'/><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='FTP'/><title type='text'>RHCE Series: FTP</title><content type='html'>&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Configure anonymous-only download.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;Install vsftpd:&lt;br/&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;yum -y install vsftpd&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;vsftpd is configured to allow anonymous downloads by default. So you'll need to disable non-anonymous logins.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 vsftpd]# pwd&lt;br/&gt;/etc/vsftpd&lt;br/&gt;[root@server1 vsftpd]# cat vsftpd.conf &lt;br/&gt;# Example config file /etc/vsftpd/vsftpd.conf&lt;br/&gt;#&lt;br/&gt;# The default compiled in settings are fairly paranoid. This sample file&lt;br/&gt;# loosens things up a bit, to make the ftp daemon more usable.&lt;br/&gt;# Please see vsftpd.conf.5 for all compiled in defaults.&lt;br/&gt;#&lt;br/&gt;# READ THIS: This example file is NOT an exhaustive list of vsftpd options.&lt;br/&gt;# Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd's&lt;br/&gt;# capabilities.&lt;br/&gt;#&lt;br/&gt;# Allow anonymous FTP? (Beware - allowed by default if you comment this out).&lt;br/&gt;anonymous_enable=YES&lt;br/&gt;#&lt;br/&gt;# Uncomment this to allow local users to log in.&lt;br/&gt;local_enable=YES&lt;br/&gt;#&lt;br/&gt;# Uncomment this to enable any form of FTP write command.&lt;br/&gt;write_enable=YES&lt;/pre&gt;&lt;br/&gt;We need to change the highlighted options to NO.&lt;br/&gt;&lt;br/&gt;Open the firewall and make persistent at boot.&lt;br/&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;iptables -I INPUT -p tcp --dport 21 -j ACCEPT&lt;/span&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;service iptables save&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;Start vsftpd and make it persistent at boot:&lt;br/&gt;&lt;span style="background-color: lime;"&gt;&lt;br/&gt;&lt;/span&gt;&lt;span style="background-color: lime;"&gt;service vsftpd start&lt;/span&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;chkconfig vsftpd on&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;Let's test out the anonymous ftp. I created a 10MB file in /var/ftp/pub.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 vsftpd]# cd /var/ftp/pub/&lt;br/&gt;[root@server1 pub]# ls&lt;br/&gt;[root@server1 pub]# dd if=/dev/urandom of=data bs=1M count=10&lt;br/&gt;10+0 records in&lt;br/&gt;10+0 records out&lt;br/&gt;10485760 bytes (10 MB) copied, 1.3125 s, 8.0 MB/s&lt;br/&gt;[root@server1 pub]# ls -alh&lt;br/&gt;total 11M&lt;br/&gt;drwxr-xr-x. 2 root root 4.0K Oct 26 23:47 .&lt;br/&gt;drwxr-xr-x. 3 root root 4.0K Oct 26 23:34 ..&lt;br/&gt;-rw-r--r--. 1 root root  10M Oct 26 23:47 data&lt;/pre&gt;&lt;br/&gt;&lt;pre&gt;[root@client1 ~]# ftp 192.168.1.1&lt;br/&gt;Connected to 192.168.1.1 (192.168.1.1).&lt;br/&gt;220 (vsFTPd 2.2.2)&lt;br/&gt;Name (192.168.1.1:root): anonymous&lt;br/&gt;331 Please specify the password.&lt;br/&gt;Password:&lt;br/&gt;230 Login successful.&lt;br/&gt;Remote system type is UNIX.&lt;br/&gt;Using binary mode to transfer files.&lt;br/&gt;ftp&amp;gt; ls&lt;br/&gt;227 Entering Passive Mode (192,168,1,1,223,231).&lt;br/&gt;ftp: connect: No route to host&lt;/pre&gt;&lt;br/&gt;What happened above is that by default the ftp server uses passive ftp mode and the firewall is blocking the &amp;gt; 1024 port that the connection is trying to open.&lt;br/&gt;&lt;br/&gt;What we'll need to do is enable ftp connection tracking and make it persistent at boot.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 log]# modprobe -l | grep ftp&lt;br/&gt;kernel/net/netfilter/nf_conntrack_ftp.ko&lt;br/&gt;kernel/net/netfilter/nf_conntrack_tftp.ko&lt;br/&gt;kernel/net/netfilter/ipvs/ip_vs_ftp.ko&lt;br/&gt;kernel/net/ipv4/netfilter/nf_nat_ftp.ko&lt;br/&gt;kernel/net/ipv4/netfilter/nf_nat_tftp.ko&lt;br/&gt;[root@server1 log]# modprobe nf_conntrack_ftp&lt;/pre&gt;&lt;br/&gt;&lt;pre&gt;[root@client1 ~]# ftp 192.168.1.1&lt;br/&gt;Connected to 192.168.1.1 (192.168.1.1).&lt;br/&gt;220 (vsFTPd 2.2.2)&lt;br/&gt;Name (192.168.1.1:root): anonymous&lt;br/&gt;331 Please specify the password.&lt;br/&gt;Password:&lt;br/&gt;230 Login successful.&lt;br/&gt;Remote system type is UNIX.&lt;br/&gt;Using binary mode to transfer files.&lt;br/&gt;ftp&amp;gt; ls&lt;br/&gt;227 Entering Passive Mode (192,168,1,1,163,155).&lt;br/&gt;150 Here comes the directory listing.&lt;br/&gt;drwxr-xr-x    2 0        0            4096 Oct 27 04:47 pub&lt;br/&gt;226 Directory send OK.&lt;br/&gt;ftp&amp;gt; cd pub&lt;br/&gt;250 Directory successfully changed.&lt;br/&gt;ftp&amp;gt; ls&lt;br/&gt;227 Entering Passive Mode (192,168,1,1,98,124).&lt;br/&gt;150 Here comes the directory listing.&lt;br/&gt;-rw-r--r--    1 0        0        10485760 Oct 27 04:47 data&lt;br/&gt;226 Directory send OK.&lt;br/&gt;ftp&amp;gt; get data&lt;br/&gt;local: data remote: data&lt;br/&gt;227 Entering Passive Mode (192,168,1,1,232,180).&lt;br/&gt;150 Opening BINARY mode data connection for data (10485760 bytes).&lt;br/&gt;226 Transfer complete.&lt;br/&gt;10485760 bytes received in 0.139 secs (75407.82 Kbytes/sec)&lt;/pre&gt;&lt;br/&gt;To make the changes persistent, you'll need to add an entry in /etc/sysconfig/iptables-config:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre class="crayon-selected"&gt;[root@server1 sysconfig]# grep MODULES iptables-config&lt;br/&gt;IPTABLES_MODULES="ip_conntrack_ftp"&lt;br/&gt;IPTABLES_MODULES_UNLOAD="yes"&lt;br/&gt;[root@server1 sysconfig]# service iptables restart&lt;br/&gt;iptables: Flushing firewall rules:                         [  OK  ]&lt;br/&gt;iptables: Setting chains to policy ACCEPT: filter nat      [  OK  ]&lt;br/&gt;iptables: Unloading modules:                               [  OK  ]&lt;br/&gt;iptables: Applying firewall rules:                         [  OK  ]&lt;br/&gt;iptables: Loading additional modules: ip_conntrack_ftp     [  OK  ]&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/1201644634062079262/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-ftp_26.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1201644634062079262'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1201644634062079262'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-ftp_26.html' title='RHCE Series: FTP'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-3937025862304586578</id><published>2012-10-26T17:19:00.001-05:00</published><updated>2019-04-11T11:09:49.767-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='DNS'/><category scheme='http://www.blogger.com/atom/ns#' term='Bind'/><title type='text'>RHCE Series: DNS</title><content type='html'>&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Configure a caching-only name server.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Configure a caching-only name server to forward DNS queries.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Note: Candidates are not expected to configure master or slave name servers.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;Install bind:&lt;br/&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;yum -y install bind&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;Setup caching-only name server with forwarders.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre class="crayon-selected"&gt;[root@server1 etc]# cat named.conf&lt;br/&gt;//&lt;br/&gt;// named.conf&lt;br/&gt;//&lt;br/&gt;// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS&lt;br/&gt;// server as a caching only nameserver (as a localhost DNS resolver only).&lt;br/&gt;//&lt;br/&gt;// See /usr/share/doc/bind*/sample/ for example named configuration files.&lt;br/&gt;//&lt;br/&gt;&lt;br/&gt;options {&lt;br/&gt; listen-on port 53 { any; }; //listen on any network&lt;br/&gt; listen-on-v6 port 53 { any; }; //listen on any network&lt;br/&gt; directory  "/var/named";&lt;br/&gt; dump-file  "/var/named/data/cache_dump.db";&lt;br/&gt;        statistics-file "/var/named/data/named_stats.txt";&lt;br/&gt;        memstatistics-file "/var/named/data/named_mem_stats.txt";&lt;br/&gt; allow-query     { 192.168.1.0/24; }; //define who to allow queries from&lt;br/&gt; forwarders { 8.8.8.8; }; //add this line to forward queries&lt;br/&gt; recursion yes;&lt;br/&gt;&lt;br/&gt; dnssec-enable yes;&lt;br/&gt; dnssec-validation yes;&lt;br/&gt; dnssec-lookaside auto;&lt;br/&gt;&lt;br/&gt; /* Path to ISC DLV key */&lt;br/&gt; bindkeys-file "/etc/named.iscdlv.key";&lt;br/&gt;&lt;br/&gt; managed-keys-directory "/var/named/dynamic";&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;logging {&lt;br/&gt;        channel default_debug {&lt;br/&gt;                file "data/named.run";&lt;br/&gt;                severity dynamic;&lt;br/&gt;        };&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;zone "." IN {&lt;br/&gt; type hint;&lt;br/&gt; file "named.ca";&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;include "/etc/named.rfc1912.zones";&lt;br/&gt;include "/etc/named.root.key";&lt;/pre&gt;&lt;br/&gt;Open up the firewall:&lt;br/&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;iptables -I INPUT -p udp --dport 53 -j ACCEPT&lt;/span&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;service iptables save&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;Start the service and make it persistent at boot:&lt;br/&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;service named start&lt;/span&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;chkconfig named on&lt;/span&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/3937025862304586578/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-dns_26.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3937025862304586578'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3937025862304586578'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-dns_26.html' title='RHCE Series: DNS'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-479065899129818886</id><published>2012-10-26T15:41:00.001-05:00</published><updated>2019-04-11T11:09:50.023-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='IPTables'/><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Firewall'/><category scheme='http://www.blogger.com/atom/ns#' term='NAT'/><title type='text'>Making NAT work with the default Red Hat iptables ruleset</title><content type='html'>Just a mental note. &lt;br /&gt;&lt;br /&gt;&lt;pre&gt;sysctl -w net.ipv4.ip_forward=1 &gt;&gt; /etc/sysctl.conf&lt;br /&gt;iptables -I POSTROUTING -t nat -o eth0 -j MASQUERADE&lt;br /&gt;iptables -I FORWARD -i eth1 -o eth0 -m state --state NEW -j ACCEPT&lt;br /&gt;iptables -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT&lt;br /&gt;service iptables save&lt;br /&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/479065899129818886/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/making-nat-work-with-default-red-hat_26.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/479065899129818886'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/479065899129818886'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/making-nat-work-with-default-red-hat_26.html' title='Making NAT work with the default Red Hat iptables ruleset'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4655568240441755243</id><published>2012-10-25T21:45:00.001-05:00</published><updated>2019-04-11T11:09:50.280-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>RHCE Series: Configure the service to start when the system is booted.</title><content type='html'>&lt;pre&gt;[root@server1 ~]# chkconfig --list httpd&lt;br /&gt;httpd           0:off 1:off 2:off 3:off 4:off 5:off 6:off&lt;br /&gt;[root@server1 ~]# chkconfig --level 345 httpd on&lt;br /&gt;[root@server1 ~]# chkconfig --list httpd&lt;br /&gt;httpd           0:off 1:off 2:off 3:on 4:on 5:on 6:off&lt;br /&gt;[root@server1 ~]# chkconfig --level 345 httpd off&lt;br /&gt;[root@server1 ~]# chkconfig --list httpd&lt;br /&gt;httpd           0:off 1:off 2:off 3:off 4:off 5:off 6:off&lt;br /&gt;[root@server1 ~]# chkconfig httpd off&lt;br /&gt;[root@server1 ~]# chkconfig --list httpd&lt;br /&gt;httpd           0:off 1:off 2:off 3:off 4:off 5:off 6:off&lt;br /&gt;[root@server1 ~]# chkconfig --list&lt;br /&gt;auditd          0:off 1:off 2:on 3:on 4:on 5:on 6:off&lt;br /&gt;crond           0:off 1:off 2:on 3:on 4:on 5:on 6:off&lt;br /&gt;httpd           0:off 1:off 2:off 3:off 4:off 5:off 6:off&lt;br /&gt;ip6tables       0:off 1:off 2:on 3:on 4:on 5:on 6:off&lt;br /&gt;iptables        0:off 1:off 2:on 3:on 4:on 5:on 6:off&lt;br /&gt;lvm2-monitor    0:off 1:on 2:on 3:on 4:on 5:on 6:off&lt;br /&gt;named           0:off 1:off 2:off 3:off 4:off 5:off 6:off&lt;br /&gt;netconsole      0:off 1:off 2:off 3:off 4:off 5:off 6:off&lt;br /&gt;netfs           0:off 1:off 2:off 3:on 4:on 5:on 6:off&lt;br /&gt;network         0:off 1:off 2:on 3:on 4:on 5:on 6:off&lt;br /&gt;portreserve     0:off 1:off 2:on 3:on 4:on 5:on 6:off&lt;br /&gt;postfix         0:off 1:off 2:on 3:on 4:on 5:on 6:off&lt;br /&gt;rdisc           0:off 1:off 2:off 3:off 4:off 5:off 6:off&lt;br /&gt;restorecond     0:off 1:off 2:off 3:off 4:off 5:off 6:off&lt;br /&gt;rsyslog         0:off 1:off 2:on 3:on 4:on 5:on 6:off&lt;br /&gt;saslauthd       0:off 1:off 2:off 3:off 4:off 5:off 6:off&lt;br /&gt;sshd            0:off 1:off 2:on 3:on 4:on 5:on 6:off&lt;br /&gt;svnserve        0:off 1:off 2:off 3:off 4:off 5:off 6:off&lt;br /&gt;sysstat         0:off 1:on 2:on 3:on 4:on 5:on 6:off&lt;br /&gt;udev-post       0:off 1:on 2:on 3:on 4:on 5:on 6:off&lt;br /&gt;xinetd          0:off 1:off 2:off 3:off 4:off 5:off 6:off&lt;br /&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4655568240441755243/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-configure-service-to-start_25.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4655568240441755243'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4655568240441755243'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-configure-service-to-start_25.html' title='RHCE Series: Configure the service to start when the system is booted.'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4014979646720655447</id><published>2012-10-25T21:41:00.001-05:00</published><updated>2019-04-11T11:09:50.542-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='SELinux'/><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>RHCE Series: Configure SELinux to support the service.</title><content type='html'>&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Every process or object has a SELinux context:&lt;/span&gt;&lt;br/&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;identity:role:domain/type&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;The SELinux policy controls:&lt;/span&gt;&lt;br/&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;What identities can use which roles&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;What roles can enter which domains&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;What domains can access which types&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;To change the context of a file, you can use the chcon command:&lt;/span&gt;&lt;br/&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;chcon -R --reference=/var/www/html &lt;/span&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;To restore the default labeling from the policy and apply the contexts to file:&lt;/span&gt;&lt;br/&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;restorecon -R &lt;/span&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;To change the SELinux mode during boot, you can pass the ‘enforcing=0’ option to the kernel in GRUB.&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Tools:&lt;/span&gt;&lt;br/&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;sestatus&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;setenforce | getenforce&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;br/&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;policycoreutils&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;setroubleshoot&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;system-config-selinux &amp;lt;- part of policycoreutils-gui in RHEL.&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;setsebool | getsebool&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;chcon&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;restorecon&lt;/span&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;When troubleshooting potential SELinux issues, you can turn off SELinux while troubleshooting.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# sestatus &lt;br/&gt;SELinux status:                 enabled&lt;br/&gt;SELinuxfs mount:                /selinux&lt;br/&gt;Current mode:                   enforcing&lt;br/&gt;Mode from config file:          enforcing&lt;br/&gt;Policy version:                 24&lt;br/&gt;Policy from config file:        targeted&lt;br/&gt;[root@server1 ~]# curl -I localhost&lt;br/&gt;HTTP/1.1 403 Forbidden&lt;br/&gt;Date: Fri, 26 Oct 2012 13:23:10 GMT&lt;br/&gt;Server: Apache/2.2.15 (CentOS)&lt;br/&gt;Accept-Ranges: bytes&lt;br/&gt;Content-Length: 5039&lt;br/&gt;Connection: close&lt;br/&gt;Content-Type: text/html; charset=UTF-8&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# setenforce 0&lt;br/&gt;[root@server1 ~]# curl -I localhost&lt;br/&gt;HTTP/1.1 200 OK&lt;br/&gt;Date: Fri, 26 Oct 2012 13:23:18 GMT&lt;br/&gt;Server: Apache/2.2.15 (CentOS)&lt;br/&gt;Last-Modified: Fri, 26 Oct 2012 13:22:45 GMT&lt;br/&gt;ETag: "4401a-0-4ccf637181f21"&lt;br/&gt;Accept-Ranges: bytes&lt;br/&gt;Connection: close&lt;br/&gt;Content-Type: text/html; charset=UTF-8&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# ls -Z /var/www/html/&lt;br/&gt;-rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 index.html&lt;br/&gt;[root@server1 ~]# chcon --reference=/var/www/html/ /var/www/html/index.html &lt;br/&gt;[root@server1 ~]# ls -Z /var/www/html/&lt;br/&gt;-rw-r--r--. root root system_u:object_r:httpd_sys_content_t:s0 index.html&lt;br/&gt;[root@server1 ~]# setenforce 1&lt;br/&gt;[root@server1 ~]# curl -I localhost&lt;br/&gt;HTTP/1.1 200 OK&lt;br/&gt;Date: Fri, 26 Oct 2012 13:24:06 GMT&lt;br/&gt;Server: Apache/2.2.15 (CentOS)&lt;br/&gt;Last-Modified: Fri, 26 Oct 2012 13:22:45 GMT&lt;br/&gt;ETag: "4401a-0-4ccf637181f21"&lt;br/&gt;Accept-Ranges: bytes&lt;br/&gt;Connection: close&lt;br/&gt;Content-Type: text/html; charset=UTF-8&lt;/pre&gt;&lt;br/&gt;You can also use the 'restorecon' command to restore default context values to the contents of a folder or file.&lt;br/&gt;&lt;br/&gt;You can use booleans to enable or disable specific actions. To view the booleans and their status, use the getsebool command.&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# getsebool -a&lt;br/&gt;abrt_anon_write --&amp;gt; off&lt;br/&gt;abrt_handle_event --&amp;gt; off&lt;br/&gt;allow_console_login --&amp;gt; on&lt;br/&gt;allow_cvs_read_shadow --&amp;gt; off&lt;br/&gt;allow_daemons_dump_core --&amp;gt; on&lt;br/&gt;allow_daemons_use_tcp_wrapper --&amp;gt; off&lt;br/&gt;allow_daemons_use_tty --&amp;gt; on&lt;br/&gt;allow_domain_fd_use --&amp;gt; on&lt;br/&gt;allow_execheap --&amp;gt; off&lt;br/&gt;allow_execmem --&amp;gt; on&lt;br/&gt;allow_execmod --&amp;gt; on&lt;br/&gt;allow_execstack --&amp;gt; on&lt;br/&gt;allow_ftpd_anon_write --&amp;gt; off&lt;br/&gt;allow_ftpd_full_access --&amp;gt; off&lt;br/&gt;allow_ftpd_use_cifs --&amp;gt; off&lt;br/&gt;allow_ftpd_use_nfs --&amp;gt; off&lt;br/&gt;allow_gssd_read_tmp --&amp;gt; on&lt;br/&gt;allow_guest_exec_content --&amp;gt; off&lt;br/&gt;allow_httpd_anon_write --&amp;gt; off&lt;br/&gt;allow_httpd_mod_auth_ntlm_winbind --&amp;gt; off&lt;br/&gt;allow_httpd_mod_auth_pam --&amp;gt; off&lt;br/&gt;allow_httpd_sys_script_anon_write --&amp;gt; off&lt;br/&gt;allow_java_execstack --&amp;gt; off&lt;br/&gt;allow_kerberos --&amp;gt; on&lt;br/&gt;allow_mount_anyfile --&amp;gt; on&lt;br/&gt;allow_mplayer_execstack --&amp;gt; off&lt;br/&gt;allow_nsplugin_execmem --&amp;gt; on&lt;br/&gt;allow_polyinstantiation --&amp;gt; off&lt;br/&gt;allow_postfix_local_write_mail_spool --&amp;gt; on&lt;br/&gt;allow_ptrace --&amp;gt; off&lt;br/&gt;allow_rsync_anon_write --&amp;gt; off&lt;br/&gt;allow_saslauthd_read_shadow --&amp;gt; off&lt;br/&gt;allow_smbd_anon_write --&amp;gt; off&lt;br/&gt;allow_ssh_keysign --&amp;gt; off&lt;br/&gt;allow_staff_exec_content --&amp;gt; on&lt;br/&gt;allow_sysadm_exec_content --&amp;gt; on&lt;br/&gt;allow_unconfined_nsplugin_transition --&amp;gt; off&lt;br/&gt;allow_user_exec_content --&amp;gt; on&lt;br/&gt;allow_user_mysql_connect --&amp;gt; off&lt;br/&gt;allow_user_postgresql_connect --&amp;gt; off&lt;br/&gt;allow_write_xshm --&amp;gt; off&lt;br/&gt;allow_xguest_exec_content --&amp;gt; off&lt;br/&gt;allow_xserver_execmem --&amp;gt; off&lt;br/&gt;allow_ypbind --&amp;gt; off&lt;br/&gt;allow_zebra_write_config --&amp;gt; on&lt;br/&gt;authlogin_radius --&amp;gt; off&lt;br/&gt;cdrecord_read_content --&amp;gt; off&lt;br/&gt;clamd_use_jit --&amp;gt; off&lt;br/&gt;cobbler_anon_write --&amp;gt; off&lt;br/&gt;cobbler_can_network_connect --&amp;gt; off&lt;br/&gt;cobbler_use_cifs --&amp;gt; off&lt;br/&gt;cobbler_use_nfs --&amp;gt; off&lt;br/&gt;condor_domain_can_network_connect --&amp;gt; off&lt;br/&gt;cron_can_relabel --&amp;gt; off&lt;br/&gt;dhcpc_exec_iptables --&amp;gt; off&lt;br/&gt;domain_kernel_load_modules --&amp;gt; off&lt;br/&gt;exim_can_connect_db --&amp;gt; off&lt;br/&gt;exim_manage_user_files --&amp;gt; off&lt;br/&gt;exim_read_user_files --&amp;gt; off&lt;br/&gt;fcron_crond --&amp;gt; off&lt;br/&gt;fenced_can_network_connect --&amp;gt; off&lt;br/&gt;fenced_can_ssh --&amp;gt; off&lt;br/&gt;ftp_home_dir --&amp;gt; off&lt;br/&gt;ftpd_connect_db --&amp;gt; off&lt;br/&gt;ftpd_use_passive_mode --&amp;gt; off&lt;br/&gt;git_cgit_read_gitosis_content --&amp;gt; off&lt;br/&gt;git_session_bind_all_unreserved_ports --&amp;gt; off&lt;br/&gt;git_system_enable_homedirs --&amp;gt; off&lt;br/&gt;git_system_use_cifs --&amp;gt; off&lt;br/&gt;git_system_use_nfs --&amp;gt; off&lt;br/&gt;global_ssp --&amp;gt; off&lt;br/&gt;gpg_agent_env_file --&amp;gt; off&lt;br/&gt;gpg_web_anon_write --&amp;gt; off&lt;br/&gt;httpd_builtin_scripting --&amp;gt; on&lt;br/&gt;httpd_can_check_spam --&amp;gt; off&lt;br/&gt;httpd_can_network_connect --&amp;gt; off&lt;br/&gt;httpd_can_network_connect_cobbler --&amp;gt; off&lt;br/&gt;httpd_can_network_connect_db --&amp;gt; off&lt;br/&gt;httpd_can_network_memcache --&amp;gt; off&lt;br/&gt;httpd_can_network_relay --&amp;gt; off&lt;br/&gt;httpd_can_sendmail --&amp;gt; off&lt;br/&gt;httpd_dbus_avahi --&amp;gt; on&lt;br/&gt;httpd_enable_cgi --&amp;gt; on&lt;br/&gt;httpd_enable_ftp_server --&amp;gt; off&lt;br/&gt;httpd_enable_homedirs --&amp;gt; off&lt;br/&gt;httpd_execmem --&amp;gt; off&lt;br/&gt;httpd_manage_ipa --&amp;gt; off&lt;br/&gt;httpd_read_user_content --&amp;gt; off&lt;br/&gt;httpd_setrlimit --&amp;gt; off&lt;br/&gt;httpd_ssi_exec --&amp;gt; off&lt;br/&gt;httpd_tmp_exec --&amp;gt; off&lt;br/&gt;httpd_tty_comm --&amp;gt; on&lt;br/&gt;httpd_unified --&amp;gt; on&lt;br/&gt;httpd_use_cifs --&amp;gt; off&lt;br/&gt;httpd_use_gpg --&amp;gt; off&lt;br/&gt;httpd_use_nfs --&amp;gt; on&lt;br/&gt;httpd_use_openstack --&amp;gt; off&lt;br/&gt;icecast_connect_any --&amp;gt; off&lt;br/&gt;init_upstart --&amp;gt; on&lt;br/&gt;irssi_use_full_network --&amp;gt; off&lt;br/&gt;logging_syslogd_can_sendmail --&amp;gt; off&lt;br/&gt;mmap_low_allowed --&amp;gt; off&lt;br/&gt;mozilla_read_content --&amp;gt; off&lt;br/&gt;mysql_connect_any --&amp;gt; off&lt;br/&gt;named_write_master_zones --&amp;gt; off&lt;br/&gt;ncftool_read_user_content --&amp;gt; off&lt;br/&gt;nscd_use_shm --&amp;gt; on&lt;br/&gt;nsplugin_can_network --&amp;gt; on&lt;br/&gt;openvpn_enable_homedirs --&amp;gt; on&lt;br/&gt;piranha_lvs_can_network_connect --&amp;gt; off&lt;br/&gt;pppd_can_insmod --&amp;gt; off&lt;br/&gt;pppd_for_user --&amp;gt; off&lt;br/&gt;privoxy_connect_any --&amp;gt; on&lt;br/&gt;puppet_manage_all_files --&amp;gt; off&lt;br/&gt;puppetmaster_use_db --&amp;gt; off&lt;br/&gt;qemu_full_network --&amp;gt; on&lt;br/&gt;qemu_use_cifs --&amp;gt; on&lt;br/&gt;qemu_use_comm --&amp;gt; off&lt;br/&gt;qemu_use_nfs --&amp;gt; on&lt;br/&gt;qemu_use_usb --&amp;gt; on&lt;br/&gt;racoon_read_shadow --&amp;gt; off&lt;br/&gt;rgmanager_can_network_connect --&amp;gt; off&lt;br/&gt;rsync_client --&amp;gt; off&lt;br/&gt;rsync_export_all_ro --&amp;gt; off&lt;br/&gt;rsync_use_cifs --&amp;gt; off&lt;br/&gt;rsync_use_nfs --&amp;gt; off&lt;br/&gt;samba_create_home_dirs --&amp;gt; off&lt;br/&gt;samba_domain_controller --&amp;gt; off&lt;br/&gt;samba_enable_home_dirs --&amp;gt; off&lt;br/&gt;samba_export_all_ro --&amp;gt; off&lt;br/&gt;samba_export_all_rw --&amp;gt; off&lt;br/&gt;samba_run_unconfined --&amp;gt; off&lt;br/&gt;samba_share_fusefs --&amp;gt; off&lt;br/&gt;samba_share_nfs --&amp;gt; off&lt;br/&gt;sanlock_use_nfs --&amp;gt; off&lt;br/&gt;sanlock_use_samba --&amp;gt; off&lt;br/&gt;secure_mode --&amp;gt; off&lt;br/&gt;secure_mode_insmod --&amp;gt; off&lt;br/&gt;secure_mode_policyload --&amp;gt; off&lt;br/&gt;sepgsql_enable_users_ddl --&amp;gt; on&lt;br/&gt;sepgsql_unconfined_dbadm --&amp;gt; on&lt;br/&gt;sge_domain_can_network_connect --&amp;gt; off&lt;br/&gt;sge_use_nfs --&amp;gt; off&lt;br/&gt;smartmon_3ware --&amp;gt; off&lt;br/&gt;spamassassin_can_network --&amp;gt; off&lt;br/&gt;spamd_enable_home_dirs --&amp;gt; on&lt;br/&gt;squid_connect_any --&amp;gt; on&lt;br/&gt;squid_use_tproxy --&amp;gt; off&lt;br/&gt;ssh_chroot_rw_homedirs --&amp;gt; off&lt;br/&gt;ssh_sysadm_login --&amp;gt; off&lt;br/&gt;telepathy_tcp_connect_generic_network_ports --&amp;gt; off&lt;br/&gt;tftp_anon_write --&amp;gt; off&lt;br/&gt;tor_bind_all_unreserved_ports --&amp;gt; off&lt;br/&gt;unconfined_login --&amp;gt; on&lt;br/&gt;unconfined_mmap_zero_ignore --&amp;gt; off&lt;br/&gt;unconfined_mozilla_plugin_transition --&amp;gt; off&lt;br/&gt;use_fusefs_home_dirs --&amp;gt; off&lt;br/&gt;use_lpd_server --&amp;gt; off&lt;br/&gt;use_nfs_home_dirs --&amp;gt; on&lt;br/&gt;use_samba_home_dirs --&amp;gt; off&lt;br/&gt;user_direct_dri --&amp;gt; on&lt;br/&gt;user_direct_mouse --&amp;gt; off&lt;br/&gt;user_ping --&amp;gt; on&lt;br/&gt;user_rw_noexattrfile --&amp;gt; on&lt;br/&gt;user_setrlimit --&amp;gt; on&lt;br/&gt;user_tcp_server --&amp;gt; off&lt;br/&gt;user_ttyfile_stat --&amp;gt; off&lt;br/&gt;varnishd_connect_any --&amp;gt; off&lt;br/&gt;vbetool_mmap_zero_ignore --&amp;gt; off&lt;br/&gt;virt_use_comm --&amp;gt; off&lt;br/&gt;virt_use_fusefs --&amp;gt; off&lt;br/&gt;virt_use_nfs --&amp;gt; off&lt;br/&gt;virt_use_samba --&amp;gt; off&lt;br/&gt;virt_use_sanlock --&amp;gt; off&lt;br/&gt;virt_use_sysfs --&amp;gt; on&lt;br/&gt;virt_use_usb --&amp;gt; on&lt;br/&gt;virt_use_xserver --&amp;gt; off&lt;br/&gt;webadm_manage_user_files --&amp;gt; off&lt;br/&gt;webadm_read_user_files --&amp;gt; off&lt;br/&gt;wine_mmap_zero_ignore --&amp;gt; off&lt;br/&gt;xdm_exec_bootloader --&amp;gt; off&lt;br/&gt;xdm_sysadm_login --&amp;gt; off&lt;br/&gt;xen_use_nfs --&amp;gt; off&lt;br/&gt;xguest_connect_network --&amp;gt; on&lt;br/&gt;xguest_mount_media --&amp;gt; on&lt;br/&gt;xguest_use_bluetooth --&amp;gt; on&lt;br/&gt;xserver_object_manager --&amp;gt; off&lt;br/&gt;&lt;br/&gt;&lt;/pre&gt;&lt;br/&gt;To change a boolean, you can use the setsebool command.&lt;br/&gt;&lt;pre class="crayon-selected"&gt;[root@server1 ~]# getsebool httpd_use_nfs&lt;br/&gt;httpd_use_nfs --&amp;gt; off&lt;br/&gt;[root@server1 ~]# setsebool -P httpd_use_nfs=1&lt;br/&gt;[root@server1 ~]# getsebool httpd_use_nfs&lt;br/&gt;httpd_use_nfs --&amp;gt; on&lt;br/&gt;[root@server1 ~]#&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4014979646720655447/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-configure-selinux-to_25.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4014979646720655447'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4014979646720655447'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-configure-selinux-to_25.html' title='RHCE Series: Configure SELinux to support the service.'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1160825835375227972</id><published>2012-10-25T19:06:00.001-05:00</published><updated>2019-04-11T11:09:38.412-05:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='NFS'/><title type='text'>RHCE Series: NFS</title><content type='html'></content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1160825835375227972'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1160825835375227972'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-274106309717394161</id><published>2012-10-25T18:56:00.001-05:00</published><updated>2019-04-11T11:09:50.808-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='F5'/><category scheme='http://www.blogger.com/atom/ns#' term='training'/><title type='text'>Free Web-Based F5 Training</title><content type='html'>F5 offers a free web-based course! How cool is that?&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.f5.com/support/training-certification/web-based-training/"&gt;http://www.f5.com/support/training-certification/web-based-training/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/274106309717394161/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/free-web-based-f5-training_25.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/274106309717394161'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/274106309717394161'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/free-web-based-f5-training_25.html' title='Free Web-Based F5 Training'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-8368647045680883820</id><published>2012-10-24T21:54:00.001-05:00</published><updated>2019-04-11T11:09:51.067-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Logging'/><category scheme='http://www.blogger.com/atom/ns#' term='Remote Logging'/><title type='text'>RHCE Series: Remote Logging</title><content type='html'>I'll be combining two objectives into one, as I feel that they are very closely related.&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;Configure a system to log to a remote system.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Configure a system to accept logging from a remote system.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 etc]# cat rsyslog.conf &lt;br/&gt;# rsyslog v5 configuration file&lt;br/&gt;&lt;br/&gt;# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html&lt;br/&gt;# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html&lt;br/&gt;&lt;br/&gt;#### MODULES ####&lt;br/&gt;&lt;br/&gt;$ModLoad imuxsock # provides support for local system logging (e.g. via logger command)&lt;br/&gt;$ModLoad imklog   # provides kernel logging support (previously done by rklogd)&lt;br/&gt;#$ModLoad immark  # provides --MARK-- message capability&lt;br/&gt;&lt;br/&gt;# Provides UDP syslog reception&lt;br/&gt;#$ModLoad imudp&lt;br/&gt;#$UDPServerRun 514&lt;br/&gt;&lt;br/&gt;# Provides TCP syslog reception&lt;br/&gt;#$ModLoad imtcp&lt;br/&gt;#$InputTCPServerRun 514&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;#### GLOBAL DIRECTIVES ####&lt;br/&gt;&lt;br/&gt;# Use default timestamp format&lt;br/&gt;$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat&lt;br/&gt;&lt;br/&gt;# File syncing capability is disabled by default. This feature is usually not required,&lt;br/&gt;# not useful and an extreme performance hit&lt;br/&gt;#$ActionFileEnableSync on&lt;br/&gt;&lt;br/&gt;# Include all config files in /etc/rsyslog.d/&lt;br/&gt;$IncludeConfig /etc/rsyslog.d/*.conf&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;#### RULES ####&lt;br/&gt;&lt;br/&gt;# Log all kernel messages to the console.&lt;br/&gt;# Logging much else clutters up the screen.&lt;br/&gt;#kern.*                                                 /dev/console&lt;br/&gt;&lt;br/&gt;# Log anything (except mail) of level info or higher.&lt;br/&gt;# Don't log private authentication messages!&lt;br/&gt;*.info;mail.none;authpriv.none;cron.none                /var/log/messages&lt;br/&gt;&lt;br/&gt;# The authpriv file has restricted access.&lt;br/&gt;authpriv.*                                              /var/log/secure&lt;br/&gt;&lt;br/&gt;# Log all the mail messages in one place.&lt;br/&gt;mail.*                                                  -/var/log/maillog&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;# Log cron stuff&lt;br/&gt;cron.*                                                  /var/log/cron&lt;br/&gt;&lt;br/&gt;# Everybody gets emergency messages&lt;br/&gt;*.emerg                                                 *&lt;br/&gt;&lt;br/&gt;# Save news errors of level crit and higher in a special file.&lt;br/&gt;uucp,news.crit                                          /var/log/spooler&lt;br/&gt;&lt;br/&gt;# Save boot messages also to boot.log&lt;br/&gt;local7.*                                                /var/log/boot.log&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;# ### begin forwarding rule ###&lt;br/&gt;# The statement between the begin ... end define a SINGLE forwarding&lt;br/&gt;# rule. They belong together, do NOT split them. If you create multiple&lt;br/&gt;# forwarding rules, duplicate the whole block!&lt;br/&gt;# Remote Logging (we use TCP for reliable delivery)&lt;br/&gt;#&lt;br/&gt;# An on-disk queue is created for this action. If the remote host is&lt;br/&gt;# down, messages are spooled to disk and sent when it is up again.&lt;br/&gt;#$WorkDirectory /var/lib/rsyslog # where to place spool files&lt;br/&gt;#$ActionQueueFileName fwdRule1 # unique name prefix for spool files&lt;br/&gt;#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)&lt;br/&gt;#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown&lt;br/&gt;#$ActionQueueType LinkedList   # run asynchronously&lt;br/&gt;#$ActionResumeRetryCount -1    # infinite retries if host is down&lt;br/&gt;# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional&lt;br/&gt;#*.* @@remote-host:514&lt;br/&gt;# ### end of the forwarding rule ###&lt;/pre&gt;&lt;br/&gt;&lt;tt&gt;To configure a system to log to a remote system, you'll need to configure your rsyslog.conf to send local logs to a remote server, which is the last highlighted option from the rsyslog.conf:&lt;/tt&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;&lt;tt&gt;*.* @@192.168.0.1:514 &lt;/tt&gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;tt&gt;To make the server accept logs from a remote device, you'll need to uncomment one or both of the first two highlighted options. Generally, remote syslogging works on udp 514, so usually just uncommenting:&lt;/tt&gt;&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre class="crayon-selected"&gt;#$ModLoad imudp&lt;br/&gt;#$UDPServerRun 514&lt;/pre&gt;&lt;br/&gt;will usually work. Making changes to the rsyslog.conf requires a restart of the rsyslogd service&lt;br/&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;service rsyslog restart&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;tt&gt;You will also need to be sure to open the firewall&lt;/tt&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;&lt;tt&gt;iptables -A INPUT -p udp --dport 514 -j ACCEPT&lt;/tt&gt;&lt;/span&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;&lt;tt&gt;iptables -A INPUT -p tcp --dport 514 -j ACCEPT&lt;/tt&gt;&lt;/span&gt;&lt;br/&gt;&lt;span style="background-color: lime;"&gt;&lt;tt&gt;service iptables save &lt;/tt&gt;&lt;/span&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/8368647045680883820/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-remote-logging_24.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8368647045680883820'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8368647045680883820'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-remote-logging_24.html' title='RHCE Series: Remote Logging'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-7358676780564743194</id><published>2012-10-24T21:43:00.001-05:00</published><updated>2019-04-11T11:09:51.327-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='System Administration'/><title type='text'>RHCE Series: Produce and deliver reports on system utilization</title><content type='html'>The sysstat package provides several utilities for system monitoring and generating reports based upon system utilization. &lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@server1 ~]# yum -y install sysstat&lt;br /&gt;&lt;br /&gt;....&lt;br /&gt;&lt;br /&gt;Installed:&lt;br /&gt;  sysstat.x86_64 0:9.0.4-20.el6                                                                                             &lt;br /&gt;&lt;br /&gt;Complete!&lt;br /&gt;&lt;br /&gt;[root@server1 ~]# rpm -qi sysstat&lt;br /&gt;Name        : sysstat                      Relocations: (not relocatable)&lt;br /&gt;Version     : 9.0.4                             Vendor: CentOS&lt;br /&gt;Release     : 20.el6                        Build Date: Fri 22 Jun 2012 05:12:35 AM CDT&lt;br /&gt;Install Date: Thu 25 Oct 2012 08:35:39 AM CDT      Build Host: c6b7.bsys.dev.centos.org&lt;br /&gt;Group       : Applications/System           Source RPM: sysstat-9.0.4-20.el6.src.rpm&lt;br /&gt;Size        : 826040                           License: GPLv2+&lt;br /&gt;Signature   : RSA/SHA1, Sun 24 Jun 2012 05:19:23 PM CDT, Key ID 0946fca2c105b9de&lt;br /&gt;Packager    : CentOS BuildSystem &lt;http: bugs.centos.org="bugs.centos.org"&gt;&lt;br /&gt;URL         : http://perso.orange.fr/sebastien.godard/&lt;br /&gt;Summary     : The sar and iostat system monitoring commands&lt;br /&gt;Description :&lt;br /&gt;This package provides the sar and iostat commands for Linux. Sar and&lt;br /&gt;iostat enable system monitoring of disk, network, and other IO&lt;br /&gt;activity.&lt;br /&gt;[root@server1 ~]# rpm -ql sysstat&lt;br /&gt;/etc/cron.d/sysstat&lt;br /&gt;/etc/rc.d/init.d/sysstat&lt;br /&gt;/etc/sysconfig/sysstat&lt;br /&gt;/etc/sysconfig/sysstat.ioconf&lt;br /&gt;/usr/bin/cifsiostat&lt;br /&gt;/usr/bin/iostat&lt;br /&gt;/usr/bin/mpstat&lt;br /&gt;/usr/bin/pidstat&lt;br /&gt;/usr/bin/sadf&lt;br /&gt;/usr/bin/sar&lt;br /&gt;/usr/lib64/sa&lt;br /&gt;/usr/lib64/sa/sa1&lt;br /&gt;/usr/lib64/sa/sa2&lt;br /&gt;/usr/lib64/sa/sadc&lt;br /&gt;/usr/share/doc/sysstat-9.0.4&lt;br /&gt;/usr/share/doc/sysstat-9.0.4/CHANGES&lt;br /&gt;/usr/share/doc/sysstat-9.0.4/COPYING&lt;br /&gt;/usr/share/doc/sysstat-9.0.4/CREDITS&lt;br /&gt;/usr/share/doc/sysstat-9.0.4/FAQ&lt;br /&gt;/usr/share/doc/sysstat-9.0.4/README&lt;br /&gt;/usr/share/doc/sysstat-9.0.4/TODO&lt;br /&gt;/usr/share/locale/af/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/da/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/de/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/es/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/fi/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/fr/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/id/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/it/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/ja/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/ky/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/lv/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/mt/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/nb/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/nl/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/nn/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/pl/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/pt/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/pt_BR/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/ro/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/ru/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/sk/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/sv/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/vi/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/zh_CN/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/locale/zh_TW/LC_MESSAGES/sysstat.mo&lt;br /&gt;/usr/share/man/man1/cifsiostat.1.gz&lt;br /&gt;/usr/share/man/man1/iostat.1.gz&lt;br /&gt;/usr/share/man/man1/mpstat.1.gz&lt;br /&gt;/usr/share/man/man1/pidstat.1.gz&lt;br /&gt;/usr/share/man/man1/sadf.1.gz&lt;br /&gt;/usr/share/man/man1/sar.1.gz&lt;br /&gt;/usr/share/man/man8/sa1.8.gz&lt;br /&gt;/usr/share/man/man8/sa2.8.gz&lt;br /&gt;/usr/share/man/man8/sadc.8.gz&lt;br /&gt;/var/log/sa&lt;br /&gt;&lt;br /&gt;[root@server1 ~]# iostat&lt;br /&gt;Linux 2.6.32-279.el6.x86_64 (server1.sgn.local)  10/25/2012  _x86_64_ (1 CPU)&lt;br /&gt;&lt;br /&gt;avg-cpu:  %user   %nice %system %iowait  %steal   %idle&lt;br /&gt;           0.01    0.00    0.01    0.23    0.00   99.76&lt;br /&gt;&lt;br /&gt;Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn&lt;br /&gt;sda               0.00         0.12         0.12     244551     239834&lt;br /&gt;vda               0.11         0.22         1.39     455274    2848540&lt;br /&gt;dm-0              0.18         0.21         1.39     439698    2848448&lt;br /&gt;dm-1              0.00         0.00         0.00       3952          0&lt;br /&gt;&lt;br /&gt;[root@server1 ~]# mpstat &lt;br /&gt;Linux 2.6.32-279.el6.x86_64 (server1.sgn.local)  10/25/2012  _x86_64_ (1 CPU)&lt;br /&gt;&lt;br /&gt;08:39:18 AM  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest   %idle&lt;br /&gt;08:39:18 AM  all    0.01    0.00    0.01    0.23    0.00    0.00    0.00    0.00   99.76&lt;br /&gt;[root@server1 ~]# pidstat&lt;br /&gt;Linux 2.6.32-279.el6.x86_64 (server1.sgn.local)  10/25/2012  _x86_64_ (1 CPU)&lt;br /&gt;&lt;br /&gt;08:39:28 AM       PID    %usr %system  %guest    %CPU   CPU  Command&lt;br /&gt;08:39:28 AM         1    0.00    0.00    0.00    0.00     0  init&lt;br /&gt;08:39:28 AM         4    0.00    0.00    0.00    0.00     0  ksoftirqd/0&lt;br /&gt;08:39:28 AM         6    0.00    0.00    0.00    0.00     0  watchdog/0&lt;br /&gt;08:39:28 AM         7    0.00    0.00    0.00    0.00     0  events/0&lt;br /&gt;08:39:28 AM        13    0.00    0.00    0.00    0.00     0  sync_supers&lt;br /&gt;08:39:28 AM        14    0.00    0.00    0.00    0.00     0  bdi-default&lt;br /&gt;08:39:28 AM        16    0.00    0.00    0.00    0.00     0  kblockd/0&lt;br /&gt;08:39:28 AM        23    0.00    0.00    0.00    0.00     0  khubd&lt;br /&gt;08:39:28 AM        24    0.00    0.00    0.00    0.00     0  kseriod&lt;br /&gt;08:39:28 AM        27    0.00    0.00    0.00    0.00     0  khungtaskd&lt;br /&gt;08:39:28 AM        28    0.00    0.00    0.00    0.00     0  kswapd0&lt;br /&gt;08:39:28 AM       354    0.00    0.00    0.00    0.00     0  kdmflush&lt;br /&gt;08:39:28 AM       375    0.00    0.00    0.00    0.00     0  jbd2/dm-0-8&lt;br /&gt;08:39:28 AM       450    0.00    0.00    0.00    0.00     0  udevd&lt;br /&gt;08:39:28 AM       853    0.00    0.00    0.00    0.00     0  kauditd&lt;br /&gt;08:39:28 AM      1013    0.00    0.00    0.00    0.00     0  flush-253:0&lt;br /&gt;08:39:28 AM      1071    0.00    0.00    0.00    0.00     0  auditd&lt;br /&gt;08:39:28 AM      1096    0.00    0.00    0.00    0.00     0  rsyslogd&lt;br /&gt;08:39:28 AM      1130    0.00    0.00    0.00    0.00     0  sshd&lt;br /&gt;08:39:28 AM      1207    0.00    0.00    0.00    0.00     0  master&lt;br /&gt;08:39:28 AM      1216    0.00    0.00    0.00    0.00     0  qmgr&lt;br /&gt;08:39:28 AM      1217    0.00    0.00    0.00    0.00     0  crond&lt;br /&gt;08:39:28 AM      1230    0.00    0.00    0.00    0.00     0  mingetty&lt;br /&gt;08:39:28 AM      1542    0.00    0.00    0.00    0.00     0  dmeventd&lt;br /&gt;08:39:28 AM     21155    0.00    0.00    0.00    0.00     0  xinetd&lt;br /&gt;08:39:28 AM     25169    0.00    0.00    0.00    0.00     0  sshd&lt;br /&gt;08:39:28 AM     25173    0.00    0.00    0.00    0.00     0  bash&lt;br /&gt;08:39:28 AM     25223    0.00    0.00    0.00    0.00     0  pickup&lt;br /&gt;08:39:28 AM     25237    0.00    0.00    0.00    0.00     0  pidstat&lt;br /&gt;&lt;br /&gt;[root@server1 ~]# man sar&lt;br /&gt;&lt;br /&gt;       count  records at interval second intervals. If the count parameter is not set, all the records saved in&lt;br /&gt;       the file will be selected.  Collection of data in this manner is useful  to  characterize  system  usage&lt;br /&gt;       over a period of time and determine peak usage hours.&lt;br /&gt;&lt;br /&gt;       Note:     The sar command only reports on local activities.&lt;br /&gt;&lt;br /&gt;&lt;/http:&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/7358676780564743194/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-produce-and-deliver-reports_24.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7358676780564743194'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7358676780564743194'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-produce-and-deliver-reports_24.html' title='RHCE Series: Produce and deliver reports on system utilization'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-7325106752138568855</id><published>2012-10-24T21:31:00.001-05:00</published><updated>2019-04-11T11:09:51.587-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='OpenNHRP'/><category scheme='http://www.blogger.com/atom/ns#' term='RPM'/><title type='text'>RHCE Series: Build a simple RPM that packages a single file.</title><content type='html'>Alright, so this is a little more in depth than creating a simple package, but I figured I could full-fill the Red Hat requirement and create a little bit of documentation on how to create the rpm for OpenNHRP in one swoop. :)&lt;br/&gt;&lt;pre class="crayon-selected"&gt;[root@build ~]# yum install rpmdevtools&lt;br/&gt;Loaded plugins: fastestmirror&lt;br/&gt;Loading mirror speeds from cached hostfile&lt;br/&gt; * base: centos.mirror.lstn.net&lt;br/&gt; * extras: centos.mirror.lstn.net&lt;br/&gt; * updates: centos.mirror.lstn.net&lt;br/&gt;&lt;br/&gt;...&lt;br/&gt;&lt;br/&gt;Installed:&lt;br/&gt;  rpmdevtools.noarch 0:7.5-1.el6                                                                                            &lt;br/&gt;Complete!&lt;br/&gt;&lt;br/&gt;[root@build ~]# adduser rpmuser&lt;br/&gt;[root@build ~]# su - rpmuser&lt;br/&gt;[rpmuser@build ~]$ rpmdev-setuptree &lt;br/&gt;[rpmuser@build ~]$ ls&lt;br/&gt;rpmbuild&lt;br/&gt;[rpmuser@build ~]$ ls rpmbuild/&lt;br/&gt;BUILD  RPMS  SOURCES  SPECS  SRPMS&lt;br/&gt;[rpmuser@build ~]$ cd rpmbuild/SOURCES/&lt;br/&gt;[rpmuser@build SOURCES]$ ls&lt;br/&gt;opennhrp-0.13.1.tar.bz2&lt;br/&gt;&lt;br/&gt;[root@build ~]# yum -y install c-ares-devel&lt;br/&gt;[root@build ~]# yum -y groupinstall "Development Tools"&lt;br/&gt;&lt;br/&gt;[rpmuser@build rpmbuild]$ cd SPECS/&lt;br/&gt;[rpmuser@build SPECS]$ &lt;br/&gt;[rpmuser@build SPECS]$ vim opennhrp.spec&lt;br/&gt;[rpmuser@build SPECS]$ cat opennhrp.spec &lt;br/&gt;Name:  opennhrp&lt;br/&gt;Version: 0.13.1&lt;br/&gt;Release: 1%{?dist}&lt;br/&gt;Summary: OpenNHRP implements NBMA Next Hop Resolution Protocol (as defined in RFC 2332). It makes it possible to create dynamic multipoint VPN Linux router using NHRP, GRE and IPsec. It aims to be Cisco DMVPN compatible.&lt;br/&gt;&lt;br/&gt;#Group:  &lt;br/&gt;License: GNU GPL&lt;br/&gt;URL:  http://sourceforge.net/projects/opennhrp&lt;br/&gt;Source0: ~/rpmbuild/SOURCES/opennhrp-0.13.1.tar.bz2 &lt;br/&gt;BuildRoot: %(mktemp -ud %{_tmppath}/%{name}-%{version}-%{release}-XXXXXX)&lt;br/&gt;&lt;br/&gt;#BuildRequires: &lt;br/&gt;#Requires: &lt;br/&gt;&lt;br/&gt;%description&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;%prep&lt;br/&gt;%setup -q&lt;br/&gt;touch ~/rpmbuild/BUILD/%{name}-%{version}/configure &amp;amp;&amp;amp; chmod +x ~/rpmbuild/BUILD/%{name}-%{version}/configure &lt;br/&gt;&lt;br/&gt;%build&lt;br/&gt;%configure&lt;br/&gt;make %{?_smp_mflags}&lt;br/&gt;&lt;br/&gt;%install&lt;br/&gt;rm -rf %{buildroot}&lt;br/&gt;make install DESTDIR=%{buildroot}&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;%clean&lt;br/&gt;rm -rf %{buildroot}&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;%files&lt;br/&gt;%defattr(-,root,root,-)&lt;br/&gt;%doc&lt;br/&gt;%config(noreplace) /etc/opennhrp/*&lt;br/&gt;/usr/sbin/opennhrp&lt;br/&gt;/usr/sbin/opennhrpctl&lt;br/&gt;/usr/share/doc/opennhrp/README&lt;br/&gt;/usr/share/man/man5/*&lt;br/&gt;/usr/share/man/man8/*&lt;br/&gt;&lt;br/&gt;%changelog&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;[rpmuser@build SPECS]$ rpmbuild -bb opennhrp.spec&lt;br/&gt;&lt;br/&gt;[rpmuser@build SPECS]$ cd ../RPMS/&lt;br/&gt;[rpmuser@build RPMS]$ ls&lt;br/&gt;x86_64&lt;br/&gt;[rpmuser@build RPMS]$ cd x86_64/&lt;br/&gt;[rpmuser@build x86_64]$ ls&lt;br/&gt;opennhrp-0.13.1-1.el6.x86_64.rpm  opennhrp-debuginfo-0.13.1-1.el6.x86_64.rpm&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/7325106752138568855/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-build-simple-rpm-that_24.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7325106752138568855'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7325106752138568855'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-build-simple-rpm-that_24.html' title='RHCE Series: Build a simple RPM that packages a single file.'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5403748701614648310</id><published>2012-10-16T19:29:00.001-05:00</published><updated>2019-04-11T11:09:51.862-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='LUKS'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCSA Study Notes'/><category scheme='http://www.blogger.com/atom/ns#' term='SELinux'/><category scheme='http://www.blogger.com/atom/ns#' term='Kernel Tuning'/><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Apache'/><category scheme='http://www.blogger.com/atom/ns#' term='NFS'/><category scheme='http://www.blogger.com/atom/ns#' term='Cron'/><category scheme='http://www.blogger.com/atom/ns#' term='Autofs'/><category scheme='http://www.blogger.com/atom/ns#' term='upstart'/><category scheme='http://www.blogger.com/atom/ns#' term='LVM'/><title type='text'>RHCSA Class Notes</title><content type='html'>Here are some notes from a recent RHCSA class. &lt;br /&gt;&lt;div dir="ltr"&gt;&lt;span style="background-color: transparent; color: #666666; font-family: Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span style="background-color: transparent; color: #666666; font-family: Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;/div&gt;&lt;h3 dir="ltr"&gt;&lt;span style="background-color: transparent; color: #666666; font-family: Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;"&gt;Boot process&lt;/span&gt;&lt;/h3&gt;&lt;br /&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;RHEL 6 uses upstart instead of init. Upstart is setup to call the init scripts.&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;a href="http://upstart.ubuntu.com/"&gt;&lt;span style="background-color: transparent; color: #1155cc; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: underline; vertical-align: baseline;"&gt;http://upstart.ubuntu.com&lt;/span&gt;&lt;/a&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;h3 dir="ltr"&gt;&lt;span style="background-color: transparent; color: #666666; font-family: Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;"&gt;Networking&lt;/span&gt;&lt;/h3&gt;&lt;br /&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;disable NetworkManager and edit /etc/sysconfig/network and /etc/sysconfig/network-scripts/ifcfg-* by hand.&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;for i in NetworkManager; do service $i stop; chkconfig $i off; done&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;h3 dir="ltr"&gt;&lt;span style="background-color: transparent; color: #666666; font-family: Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;"&gt;Cron&lt;/span&gt;&lt;/h3&gt;&lt;br /&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Time  statements are OR’ed together, NOT AND’ed together. So Sunday, January 2  would be January 2 OR Sunday. To get around that, you’ll need to script  out the day of the week. &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;h3 dir="ltr"&gt;&lt;span style="background-color: transparent; color: #666666; font-family: Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;"&gt;Disk Encryption&lt;/span&gt;&lt;/h3&gt;&lt;br /&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;LUKS - Linux Unified Key Setup&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Create a new LUKS encrypted device:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;cryptsetup luksFormat &lt;device&gt;&lt;/device&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Establish access to the device:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;cryptsetup luksOpen &lt;device&gt; &lt;mapname&gt;&lt;/mapname&gt;&lt;/device&gt;&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;/dev/mapper/&lt;mapname&gt;&lt;/mapname&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Create the filesystem:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;mkfs -t ext4 /dev/mapper/&lt;mapname&gt;&lt;/mapname&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Mount the filesystem:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;mount /dev/mapper/&lt;mapname&gt; /mnt&lt;/mapname&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Make filesystem persistant:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;vim /etc/fstab&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;/dev/mapper/&lt;mapname&gt; /cryptomount ext4 defaults 1 2&lt;/mapname&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Removing access to an encrypted device:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Umount the filesystem, if mounted:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;umount /mnt&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;cryptsetup luksClose mapname&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;To make LUKS devices available at boot time (persistance):&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;/etc/crypttab&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;mapname&gt; &lt;device&gt; [keyfile] [options]&lt;/device&gt;&lt;/mapname&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;To create a keyfile:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;dd if=/dev/urandom of=/etc/keyfile bs=1k count=4&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;cryptsetup luksAddKey &lt;device&gt; /etc/keyfile&lt;/device&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;chmod 400 /etc/keyfile&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;To test LUKS functionality for persistance:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;umount /cryptfs&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;cryptsetup luksClose mapname&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;#&gt; bash&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;#&gt; . /etc/init.d/functions&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;#&gt; init_crypto 1&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;#&gt; mount -a&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;#&gt; ls /cryptfs&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;h3 dir="ltr"&gt;&lt;span style="background-color: transparent; color: #666666; font-family: Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;"&gt;SELinux&lt;/span&gt;&lt;/h3&gt;&lt;br /&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Every process or object has a SELinux context:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;identity:role:domain/type&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;The SELinux policy controls:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;What identities can use which roles&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;What roles can enter which domains&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;What domains can access which types&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;To change the context of a file, you can use the chcon command:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;chcon -R --reference=/var/www/html &lt;file&gt;&lt;/file&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;To restore the default labeling from the policy and apply the contexts to file:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;restorecon -R &lt;path&gt;&lt;/path&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;To change the SELinux mode during boot, you can pass the ‘enforcing=0’ option to the kernel in GRUB.&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Tools:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;sestatus&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;setenforce | getenforce&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;policycoreutils&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;setroubleshoot&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;system-config-selinux &lt;- part of policycoreutils-gui in RHEL.&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;setsebool | getsebool&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;chcon&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;restorecon&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;h3 dir="ltr"&gt;&lt;span style="background-color: transparent; color: #666666; font-family: Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;"&gt;Kernel Tuning&lt;/span&gt;&lt;/h3&gt;&lt;br /&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Kernel documentation package: kernel-doc&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;yum -y install kernel-doc&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;/usr/share/doc/kernel-doc-2.6.32/Documentation/sysctl&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;sysctl -a&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;displays all current values&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;sysctl -w &lt;kernel_option&gt;&lt;/kernel_option&gt;&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;sets a value&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;sysctl -p&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;reads the /etc/sysctl.conf and loads the values into the kernel&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;/etc/sysctl.conf&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;File location to make changes persistent&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;sysctl -w &lt;kernel_option&gt; &gt;&gt; /etc/sysctl.conf&lt;/kernel_option&gt;&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;best practice&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;h3 dir="ltr"&gt;&lt;span style="background-color: transparent; color: #666666; font-family: Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;"&gt;LVM&lt;/span&gt;&lt;/h3&gt;&lt;br /&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Create a Volume&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;pvcreate /dev/sda4&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;vgcreate VolGroup01 /dev/sda4&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;-s flag will allow you to change the physical extent size. Default is 4MB and can be changed in increments of power of 2.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;lvcreate -n Volname01 [ -L 10G || -l +100%FREE || -l +50 {# of extents} ] VolGroup01&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Resizing a volume&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;vgextend &lt;volume group="group" name="name"&gt; &lt;new path="path" pv="pv"&gt;&lt;/new&gt;&lt;/volume&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;lvextend { -l &lt;+extents&gt; | -L &lt;+size&gt; } &lt;lv&gt;&lt;/lv&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;resize2fs &lt;logical name="name" volume="volume"&gt;&lt;/logical&gt;&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;lvresize -r {-l &lt;+extents&gt; | -L &lt;+size&gt;} &lt;lv&gt;&lt;/lv&gt;&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;‘-r’ - Resize logical volume and filesystem at the sametime.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;lvreduce -r { -l &lt;extents&gt; | -L &lt;size&gt; } &lt;lv&gt;&lt;/lv&gt;&lt;/size&gt;&lt;/extents&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Snapshots&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;create snapshots&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;lvcreate -s &lt;lv&gt; { -l &lt;extents&gt; | -L &lt;size&gt; } -n &lt;snapshot_lv&gt;&lt;/snapshot_lv&gt;&lt;/size&gt;&lt;/extents&gt;&lt;/lv&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;remove snapshots&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;lvremove -f &lt;lv&gt;&lt;/lv&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;You  will need space available in the volume group of your logical volume to  be able to create a snapshot. A snapshot logical volume does not need  to be the same size of the logical volume, but will need to be large  enough to contain the data of the logical volume.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;You can grow the file system while it is mounted, but before shrinking it must first be unmounted.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;h3 dir="ltr"&gt;&lt;span style="background-color: transparent; color: #666666; font-family: Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;"&gt;NFS&lt;/span&gt;&lt;/h3&gt;&lt;br /&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;showmount -e server1&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Confirm that services are running on the machine.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;rpcinfo -p server1&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;See shared filesystems.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;h3 dir="ltr"&gt;&lt;span style="background-color: transparent; color: #666666; font-family: Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;"&gt;Apache&lt;/span&gt;&lt;/h3&gt;&lt;br /&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Documentation Package:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;httpd-manual&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Documentation Location:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;a href="http://localhost/manual"&gt;&lt;span style="background-color: transparent; color: #1155cc; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: underline; vertical-align: baseline;"&gt;http://localhost/manual&lt;/span&gt;&lt;/a&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;h3 dir="ltr"&gt;&lt;span style="background-color: transparent; color: #666666; font-family: Arial; font-size: 16px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;"&gt;Autofs&lt;/span&gt;&lt;/h3&gt;&lt;br /&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Mounting NFS Home directories:&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;vi /etc/auto.master&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;/home/nfs    /etc/auto.nfs&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: circle; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;vi /etc/auto.nfs&lt;/span&gt;&lt;/li&gt;&lt;ul style="margin-bottom: 0pt; margin-top: 0pt;"&gt;&lt;li style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: square; text-decoration: none; vertical-align: baseline;"&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;*    server:/home/nfs/&amp;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5403748701614648310/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhcsa-class-notes_16.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5403748701614648310'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5403748701614648310'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhcsa-class-notes_16.html' title='RHCSA Class Notes'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5393195239516529917</id><published>2012-10-16T19:04:00.001-05:00</published><updated>2019-04-11T11:09:52.143-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='ISCSI'/><title type='text'>RHCE Series: Configure a system as an iSCSI initiator that persistently
mounts an iSCSI target.</title><content type='html'>Creating an iscsi target isn't part of the RHCE objectives, but I'll show my commands here so that you can create your own target for testing.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# yum -y install scsi-target-utils&lt;br/&gt;Loaded plugins: fastestmirror, refresh-packagekit, security&lt;br/&gt;Loading mirror speeds from cached hostfile&lt;br/&gt; * base: mirrors.versaweb.com&lt;br/&gt; * extras: mirror.rackspace.com&lt;br/&gt; * updates: mirrors.greenmountainaccess.net&lt;br/&gt;....&lt;br/&gt;Installed:&lt;br/&gt;  scsi-target-utils.x86_64 0:1.0.24-2.el6 &lt;br/&gt;&lt;br/&gt;Complete!&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# dd if=/dev/zero of=/targetfs bs=1M count=512&lt;br/&gt;512+0 records in&lt;br/&gt;512+0 records out&lt;br/&gt;536870912 bytes (537 MB) copied, 15.153 s, 35.4 MB/s&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# vim /etc/tgt/targets.conf &lt;br/&gt;[root@server1 ~]# tail -4 /etc/tgt/targets.conf &lt;br/&gt;&lt;br/&gt; backing-store /targetfs&lt;br/&gt; initiator 192.168.101.0/24&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# service tgtd start&lt;br/&gt;Starting SCSI target daemon:                               [  OK  ]&lt;br/&gt;[root@server1 ~]# chkconfig tgtd on&lt;br/&gt;[root@server1 ~]# tgtadm --mode target --op show&lt;br/&gt;Target 1: iqn.192.168.101.1.target&lt;br/&gt;    System information:&lt;br/&gt;        Driver: iscsi&lt;br/&gt;        State: ready&lt;br/&gt;    I_T nexus information:&lt;br/&gt;    LUN information:&lt;br/&gt;        LUN: 0&lt;br/&gt;            Type: controller&lt;br/&gt;            SCSI ID: IET     00010000&lt;br/&gt;            SCSI SN: beaf10&lt;br/&gt;            Size: 0 MB, Block size: 1&lt;br/&gt;            Online: Yes&lt;br/&gt;            Removable media: No&lt;br/&gt;            Prevent removal: No&lt;br/&gt;            Readonly: No&lt;br/&gt;            Backing store type: null&lt;br/&gt;            Backing store path: None&lt;br/&gt;            Backing store flags: &lt;br/&gt;        LUN: 1&lt;br/&gt;            Type: disk&lt;br/&gt;            SCSI ID: IET     00010001&lt;br/&gt;            SCSI SN: beaf11&lt;br/&gt;            Size: 537 MB, Block size: 512&lt;br/&gt;            Online: Yes&lt;br/&gt;            Removable media: No&lt;br/&gt;            Prevent removal: No&lt;br/&gt;            Readonly: Yes&lt;br/&gt;            Backing store type: rdwr&lt;br/&gt;            Backing store path: /targetfs&lt;br/&gt;            Backing store flags: &lt;br/&gt;    Account information:&lt;br/&gt;    ACL information:&lt;br/&gt;        ALL&lt;/pre&gt;&lt;br/&gt;Once you have your target created. You can get to the actual portion of the RHCE objective. The first thing that you'll need to do is make sure that the iscsi initiator utilities are installed.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@client1 ~]# yum -y install iscsi-initiator-utils&lt;br/&gt;Loaded plugins: fastestmirror, refresh-packagekit, security&lt;br/&gt;Loading mirror speeds from cached hostfile&lt;br/&gt; * base: centos.mirror.constant.com&lt;br/&gt; * extras: mirror.trouble-free.net&lt;br/&gt; * updates: mirror.flhsi.com&lt;br/&gt;...&lt;br/&gt;Running Transaction&lt;br/&gt;  Installing : iscsi-initiator-utils-6.2.0.872-41.el6.x86_64                                                                                                                         1/1 &lt;br/&gt;  Verifying  : iscsi-initiator-utils-6.2.0.872-41.el6.x86_64                                                                                                                         1/1 &lt;br/&gt;&lt;br/&gt;Installed:&lt;br/&gt;  iscsi-initiator-utils.x86_64 0:6.2.0.872-41.el6                                                                                                                                        &lt;br/&gt;&lt;br/&gt;Complete!&lt;/pre&gt;&lt;br/&gt;Now, you're ready to start playing with iscsi!&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@client1 ~]# iscsiadm -m discovery -t sendtargets -p 192.168.101.1&lt;br/&gt;Starting iscsid:                                           [  OK  ]&lt;br/&gt;192.168.101.1:3260,1 iqn.192.168.101.1.target&lt;br/&gt;[root@client1 ~]# chkconfig iscsid --list&lt;br/&gt;iscsid          0:off 1:off 2:off 3:on 4:on 5:on 6:off&lt;/pre&gt;&lt;br/&gt;The iscsid service is controlled by the iscsi service. iscsid controls iscsi communications and iscsi automatically logs in and out of targets.&lt;br/&gt;&lt;br/&gt;Once a target is discovered, it will be remembered. You can see your known targets with:&lt;br/&gt;&lt;br/&gt;iscsiadm -m node -o show&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@client1 ~]# service iscsi start&lt;br/&gt;Starting iscsi:                                            [  OK  ]&lt;br/&gt;[root@client1 ~]# dmesg | tail -20&lt;br/&gt;libcxgbi:ddp_setup_host_page_size: system PAGE 4096, ddp idx 0.&lt;br/&gt;Chelsio T3 iSCSI Driver cxgb3i v2.0.0 (Jun. 2010)&lt;br/&gt;iscsi: registered transport (cxgb3i)&lt;br/&gt;Chelsio T4 iSCSI Driver cxgb4i v0.9.1 (Aug. 2010)&lt;br/&gt;iscsi: registered transport (cxgb4i)&lt;br/&gt;cnic: Broadcom NetXtreme II CNIC Driver cnic v2.5.10 (March 21, 2012)&lt;br/&gt;Broadcom NetXtreme II iSCSI Driver bnx2i v2.7.2.2 (Apr 26, 2012)&lt;br/&gt;iscsi: registered transport (bnx2i)&lt;br/&gt;iscsi: registered transport (be2iscsi)&lt;br/&gt;scsi2 : iSCSI Initiator over TCP/IP&lt;br/&gt;scsi 2:0:0:0: RAID              IET      Controller       0001 PQ: 0 ANSI: 5&lt;br/&gt;scsi 2:0:0:1: Direct-Access     IET      VIRTUAL-DISK     0001 PQ: 0 ANSI: 5&lt;br/&gt;sd 2:0:0:1: [sda] 1048576 512-byte logical blocks: (536 MB/512 MiB)&lt;br/&gt;sd 2:0:0:1: [sda] Write Protect is on&lt;br/&gt;sd 2:0:0:1: [sda] Mode Sense: 49 00 80 08&lt;br/&gt;sd 2:0:0:1: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA&lt;br/&gt; sda: unknown partition table&lt;br/&gt;sd 2:0:0:1: [sda] Attached SCSI disk&lt;br/&gt;scsi 2:0:0:0: Attached scsi generic sg0 type 12&lt;br/&gt;sd 2:0:0:1: Attached scsi generic sg1 type 0&lt;br/&gt;[root@client1 ~]# chkconfig iscsi on&lt;/pre&gt;&lt;br/&gt;To make sure that your iscsi drives are mounted persistent on each boot, you'll need to make sure that the iscsi service starts at boot.&lt;br/&gt;&lt;br/&gt;As you can see, my iscsi presented drive is sda. From here, the drive is handled just like you would any other drive - fdisk, mkfs, mount, and add it to the /etc/fstab.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre class="crayon-selected"&gt;[root@client1 ~]# fdisk -l /dev/sda&lt;br/&gt;&lt;br/&gt;Disk /dev/sda: 536 MB, 536870912 bytes&lt;br/&gt;17 heads, 61 sectors/track, 1011 cylinders&lt;br/&gt;Units = cylinders of 1037 * 512 = 530944 bytes&lt;br/&gt;Sector size (logical/physical): 512 bytes / 512 bytes&lt;br/&gt;I/O size (minimum/optimal): 512 bytes / 512 bytes&lt;br/&gt;Disk identifier: 0x00000000&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5393195239516529917/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-configure-system-as-iscsi_16.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5393195239516529917'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5393195239516529917'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-configure-system-as-iscsi_16.html' title='RHCE Series: Configure a system as an iSCSI initiator that persistently&#xA;mounts an iSCSI target.'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-7909349013843096826</id><published>2012-10-16T17:18:00.001-05:00</published><updated>2019-04-11T11:09:52.403-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Kernel Tuning'/><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>RHCE Series: Use /proc/sys and sysctl to modify and set kernel runtime
parameters.</title><content type='html'>Kernel tuning is pretty easy. There are a couple of ways of doing it. The old way of modifying kernel perimeters was by modifying the /proc.&lt;br/&gt;&lt;br/&gt;For example:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# cat /proc/sys/net/ipv4/icmp_echo_ignore_all &lt;br/&gt;0&lt;/pre&gt;&lt;br/&gt;If I were to change that to a 0 to a 1, server1 would drop all icmp echo packets, thus ignoring ping requests.&lt;br/&gt;&lt;pre&gt;[root@client1 ~]# echo "Before kernel tuning" &amp;amp;&amp;amp; ping -c 1 192.168.101.1&lt;br/&gt;Before kernel tuning&lt;br/&gt;PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=0.598 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.1 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.598/0.598/0.598/0.000 ms&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# echo 1 &amp;gt; /proc/sys/net/ipv4/icmp_echo_ignore_all &lt;br/&gt;[root@server1 ~]# &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;[root@client1 ~]# echo "After kernel tuning" &amp;amp;&amp;amp; ping -c 1 192.168.101.1&lt;br/&gt;After kernel tuning&lt;br/&gt;PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.&lt;br/&gt;&lt;br/&gt;--- 192.168.101.1 ping statistics ---&lt;br/&gt;1 packets transmitted, 0 received, 100% packet loss, time 10000ms&lt;/pre&gt;&lt;br/&gt;You can also use the sysctl command to do the same thing:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# sysctl -a | grep icmp | grep echo&lt;br/&gt;net.ipv4.icmp_echo_ignore_all = 1&lt;br/&gt;net.ipv4.icmp_echo_ignore_broadcasts = 1&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;[root@client1 ~]# echo "Before kernel tuning" &amp;amp;&amp;amp; ping -c 1 192.168.101.1&lt;br/&gt;Before kernel tuning&lt;br/&gt;PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.&lt;br/&gt;&lt;br/&gt;--- 192.168.101.1 ping statistics ---&lt;br/&gt;1 packets transmitted, 0 received, 100% packet loss, time 10000ms&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# sysctl net.ipv4.icmp_echo_ignore_all=0&lt;br/&gt;net.ipv4.icmp_echo_ignore_all = 0&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;[root@client1 ~]# echo "After kernel tuning" &amp;amp;&amp;amp; ping -c 1 192.168.101.1&lt;br/&gt;After kernel tuning&lt;br/&gt;PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=0.590 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.1 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.590/0.590/0.590/0.000 ms&lt;/pre&gt;&lt;br/&gt;To make any changes persistent on boot up, you'll need to put them in the /etc/sysctl.conf&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre class="crayon-selected"&gt;[root@server1 ~]# sysctl net.ipv4.icmp_echo_ignore_all=0 &amp;gt;&amp;gt; /etc/sysctl.conf &lt;br/&gt;[root@server1 ~]# tail -1 /etc/sysctl.conf &lt;br/&gt;net.ipv4.icmp_echo_ignore_all = 0&lt;/pre&gt;&lt;br/&gt;Practice care when outputting kernel paremeters to the /etc/sysctl.conf. There are already some values specified and you output using &amp;gt; instead of &amp;gt;&amp;gt;, then you'll overwrite those values. Got backups?&lt;br/&gt;&lt;br/&gt;You can also see all kernel tunable values by issuing a 'sysctl -a'.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/7909349013843096826/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-use-procsys-and-sysctl-to_16.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7909349013843096826'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7909349013843096826'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-use-procsys-and-sysctl-to_16.html' title='RHCE Series: Use /proc/sys and sysctl to modify and set kernel runtime&#xA;parameters.'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-8117676357235170238</id><published>2012-10-15T19:53:00.001-05:00</published><updated>2019-04-11T11:09:52.660-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='IPTables'/><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>RHCE Series: Use iptables to implement packet filtering and configure
network address translation (NAT): Part 2</title><content type='html'>In this second part, we'll discuss how to set up a NAT in Linux, using iptables. As in the previous blog, here are the stats of my VM's:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;server1:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;eth0: dhcp has access to the Internet&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;eth1: static address of 192.168.101.1/24, internal network.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Server1 acts as the firewall / NAT router&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;client1:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;eth0: static address of 192.168.101.101&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Client1 acts as a computer on an internal network.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;client2:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;eth0: static address of 192.168.101.102&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Client2 acts as a computer on an internal network.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;The first thing that we'll need to do is allow the computer to forward traffic between interfaces.&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# sysctl -a | grep net.ipv4| grep forward&lt;br/&gt;net.ipv4.conf.all.forwarding = 0&lt;br/&gt;net.ipv4.conf.all.mc_forwarding = 0&lt;br/&gt;net.ipv4.conf.default.forwarding = 0&lt;br/&gt;net.ipv4.conf.default.mc_forwarding = 0&lt;br/&gt;net.ipv4.conf.lo.forwarding = 0&lt;br/&gt;net.ipv4.conf.lo.mc_forwarding = 0&lt;br/&gt;net.ipv4.conf.eth0.forwarding = 0&lt;br/&gt;net.ipv4.conf.eth0.mc_forwarding = 0&lt;br/&gt;net.ipv4.conf.eth1.forwarding = 0&lt;br/&gt;net.ipv4.conf.eth1.mc_forwarding = 0&lt;br/&gt;net.ipv4.ip_forward = 0&lt;br/&gt;[root@server1 ~]# sysctl net.ipv4.ip_forward=1&lt;br/&gt;net.ipv4.ip_forward = 1&lt;br/&gt;[root@server1 ~]# vim /etc/sysctl.conf &lt;br/&gt;[root@server1 ~]# grep net.ipv4.ip_forward /etc/sysctl.conf &lt;br/&gt;net.ipv4.ip_forward = 1&lt;/pre&gt;&lt;br/&gt;Editing the /etc/sysctl.conf makes the setting persistent across reboots.&lt;br/&gt;&lt;br/&gt;Since we made changes to iptables in the previous blog, I'll again give myself a clean slate to work with.&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# iptables -F&lt;br/&gt;[root@server1 ~]# iptables -F -t nat&lt;br/&gt;[root@server1 ~]# iptables -L&lt;br/&gt;Chain INPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain FORWARD (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain OUTPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;[root@server1 ~]# iptables -L -t nat&lt;br/&gt;Chain PREROUTING (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain POSTROUTING (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain OUTPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination&lt;/pre&gt;&lt;br/&gt;I'll verify that my client computers can ping the gateway, each other, but can not get to the internet.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@client1 ~]# for i in 192.168.101.1 \&lt;br/&gt;192.168.101.102 \&lt;br/&gt;4.2.2.2; \&lt;br/&gt;do ping -c 1 $i; done&lt;br/&gt;PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=0.543 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.1 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.543/0.543/0.543/0.000 ms&lt;br/&gt;PING 192.168.101.102 (192.168.101.102) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.102: icmp_seq=1 ttl=64 time=0.412 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.102 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.412/0.412/0.412/0.000 ms&lt;br/&gt;PING 4.2.2.2 (4.2.2.2) 56(84) bytes of data.&lt;br/&gt;&lt;br/&gt;--- 4.2.2.2 ping statistics ---&lt;br/&gt;1 packets transmitted, 0 received, 100% packet loss, time 10000ms&lt;/pre&gt;&lt;br/&gt;&lt;pre&gt;[root@client2 ~]# for i in 192.168.101.1 \&lt;br/&gt;192.168.101.101 \&lt;br/&gt;4.2.2.2; \&lt;br/&gt;do ping -c 1 $i; done&lt;br/&gt;PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=0.402 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.1 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.402/0.402/0.402/0.000 ms&lt;br/&gt;PING 192.168.101.101 (192.168.101.101) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.101: icmp_seq=1 ttl=64 time=0.224 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.101 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.224/0.224/0.224/0.000 ms&lt;br/&gt;PING 4.2.2.2 (4.2.2.2) 56(84) bytes of data.&lt;br/&gt;&lt;br/&gt;--- 4.2.2.2 ping statistics ---&lt;br/&gt;1 packets transmitted, 0 received, 100% packet loss, time 10000ms&lt;/pre&gt;&lt;br/&gt;Now, I'll implement the NAT.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE&lt;br/&gt;[root@server1 ~]# iptables -L&lt;br/&gt;Chain INPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain FORWARD (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain OUTPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;[root@server1 ~]# iptables -L -t nat&lt;br/&gt;Chain PREROUTING (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain POSTROUTING (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;MASQUERADE  all  --  anywhere             anywhere            &lt;br/&gt;&lt;br/&gt;Chain OUTPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination&lt;/pre&gt;&lt;br/&gt;Now my client PC's can get out to the Internet:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@client1 ~]# ping -c 2 4.2.2.2&lt;br/&gt;PING 4.2.2.2 (4.2.2.2) 56(84) bytes of data.&lt;br/&gt;64 bytes from 4.2.2.2: icmp_seq=1 ttl=56 time=10.2 ms&lt;br/&gt;64 bytes from 4.2.2.2: icmp_seq=2 ttl=56 time=9.96 ms&lt;br/&gt;&lt;br/&gt;--- 4.2.2.2 ping statistics ---&lt;br/&gt;2 packets transmitted, 2 received, 0% packet loss, time 1011ms&lt;br/&gt;rtt min/avg/max/mdev = 9.960/10.103/10.246/0.143 ms&lt;br/&gt;&lt;br/&gt;[root@client2 ~]# ping -c 2 4.2.2.2&lt;br/&gt;PING 4.2.2.2 (4.2.2.2) 56(84) bytes of data.&lt;br/&gt;64 bytes from 4.2.2.2: icmp_seq=1 ttl=56 time=10.3 ms&lt;br/&gt;64 bytes from 4.2.2.2: icmp_seq=2 ttl=56 time=9.98 ms&lt;br/&gt;&lt;br/&gt;--- 4.2.2.2 ping statistics ---&lt;br/&gt;2 packets transmitted, 2 received, 0% packet loss, time 1011ms&lt;br/&gt;rtt min/avg/max/mdev = 9.986/10.144/10.303/0.187 ms&lt;/pre&gt;&lt;br/&gt;This only works with the single line:&lt;br/&gt;&lt;br/&gt;iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE&lt;br/&gt;&lt;br/&gt;because the default rule for the INPUT and FORWARD chains are to ACCEPT the traffic:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre class="crayon-selected"&gt;[root@client2 ~]# iptables -L&lt;br/&gt;Chain INPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain FORWARD (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain OUTPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;[root@client2 ~]# iptables -L -t nat&lt;br/&gt;Chain PREROUTING (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain POSTROUTING (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain OUTPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination&lt;/pre&gt;&lt;br/&gt;Otherwise, you would need a couple extra rules to allow the traffic.&lt;br/&gt;&lt;br/&gt;Those rules would be:&lt;br/&gt;iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE&lt;br/&gt;iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT&lt;br/&gt;iptables -A FORWARD -i eth1 -o eth0 -j ACCEPT</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/8117676357235170238/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-use-iptables-to-implement_15.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8117676357235170238'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8117676357235170238'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-use-iptables-to-implement_15.html' title='RHCE Series: Use iptables to implement packet filtering and configure&#xA;network address translation (NAT): Part 2'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5336756992297447355</id><published>2012-10-12T19:22:00.001-05:00</published><updated>2019-04-11T11:09:52.859-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Virtualization'/><category scheme='http://www.blogger.com/atom/ns#' term='KVM'/><title type='text'>Making a VM boot at VM host boot in KVM</title><content type='html'>&lt;div style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em; text-align: center;"&gt;&lt;/div&gt;&lt;div style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em; text-align: center;"&gt;&lt;/div&gt;&lt;div style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em; text-align: center;"&gt;&lt;/div&gt;&lt;div style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em; text-align: center;"&gt;&lt;/div&gt;&lt;div style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em; text-align: center;"&gt;&lt;a href="https://lh6.googleusercontent.com/-WsRQTYAVX_A/UHkGVT3jkbI/AAAAAAAAGqU/XyXRqs-Zulg/s800/KVM-VM-Persistant-boot.png" target="_blank"&gt;&lt;img border="0" height="320" src="http://3.bp.blogspot.com/-WsRQTYAVX_A/UHkGVT3jkbI/AAAAAAAAGqU/XyXRqs-Zulg/s400/KVM-VM-Persistant-boot.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;From virt-manager, you can follow the screen shot:&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt; &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;You can also do it from the command line:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@jtdub-workstation ~]# virsh autostart&lt;br /&gt;error: command 'autostart' requires &lt;domain&gt; option&lt;br /&gt;[root@jtdub-workstation ~]# virsh autostart 1&lt;br /&gt;Domain 1 marked as autostarted&lt;br /&gt;&lt;/domain&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5336756992297447355/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/making-vm-boot-at-vm-host-boot-in-kvm_12.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5336756992297447355'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5336756992297447355'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/making-vm-boot-at-vm-host-boot-in-kvm_12.html' title='Making a VM boot at VM host boot in KVM'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://3.bp.blogspot.com/-WsRQTYAVX_A/UHkGVT3jkbI/AAAAAAAAGqU/XyXRqs-Zulg/s72-c/KVM-VM-Persistant-boot.png' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-8210516761062177368</id><published>2012-10-12T19:09:00.001-05:00</published><updated>2019-04-11T11:09:53.117-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Security'/><category scheme='http://www.blogger.com/atom/ns#' term='RPM'/><title type='text'>Think that you have a compromised Red Hat based system?</title><content type='html'>Use RPM to search for modified binaries.&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: yellow;"&gt;rpm -Va | grep ^..5&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This one-liner will use the RPM database to compare md5sums of all installed files and will give you a report of all files that have been changed from the default install. Configuration files may not be a big deal, but binaries with md5sums that don't match is a dead give away of a compromised system.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/8210516761062177368/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/think-that-you-have-compromised-red-hat_12.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8210516761062177368'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8210516761062177368'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/think-that-you-have-compromised-red-hat_12.html' title='Think that you have a compromised Red Hat based system?'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5978179258534353817</id><published>2012-10-12T18:59:00.001-05:00</published><updated>2019-04-11T11:09:42.955-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='IPTables'/><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>RHCE Series: Use iptables to implement packet filtering and configure
network address translation (NAT): Part 1</title><content type='html'>This section is on using IPTables to create a packet filtering firewall as well as implementing NAT with IPTables. My test environment are two stock installs of CentOS 6.3 in a virtualized environment.&lt;br/&gt;&lt;br/&gt;The VM's:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;server1:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;eth0: dhcp has access to the Internet&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;eth1: static address of 192.168.101.1/24, internal network.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Server1 acts as the firewall / NAT router&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;client1:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;eth0: static address of 192.168.101.101&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Client1 acts as a computer on an internal network.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;client2:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;eth0: static address of 192.168.101.102&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;Client2 acts as a computer on an internal network.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;The first thing that I did on server1 was make sure that I had a clean slate to work with. That included making sure that my firewall had a default setting of allowing all traffic, but wasn't forwarding any traffic. I also verified my interfaces and routing table.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# iptables -F&lt;br/&gt;[root@server1 ~]# service iptables save&lt;br/&gt;iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]&lt;br/&gt;[root@server1 ~]# iptables -L&lt;br/&gt;Chain INPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain FORWARD (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain OUTPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;[root@server1 ~]# ip addr show&lt;br/&gt;1: lo:  mtu 16436 qdisc noqueue state UNKNOWN &lt;br/&gt;    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00&lt;br/&gt;    inet 127.0.0.1/8 scope host lo&lt;br/&gt;    inet6 ::1/128 scope host &lt;br/&gt;       valid_lft forever preferred_lft forever&lt;br/&gt;2: eth0:  mtu 1500 qdisc pfifo_fast state UP qlen 1000&lt;br/&gt;    link/ether 52:54:00:f0:36:20 brd ff:ff:ff:ff:ff:ff&lt;br/&gt;    inet 192.168.122.74/24 brd 192.168.122.255 scope global eth0&lt;br/&gt;    inet6 fe80::5054:ff:fef0:3620/64 scope link &lt;br/&gt;       valid_lft forever preferred_lft forever&lt;br/&gt;3: eth1:  mtu 1500 qdisc pfifo_fast state UP qlen 1000&lt;br/&gt;    link/ether 52:54:00:b3:38:d1 brd ff:ff:ff:ff:ff:ff&lt;br/&gt;    inet 192.168.101.1/24 brd 192.168.101.255 scope global eth1&lt;br/&gt;    inet6 fe80::5054:ff:feb3:38d1/64 scope link &lt;br/&gt;       valid_lft forever preferred_lft forever&lt;br/&gt;[root@server1 ~]# ip route show&lt;br/&gt;192.168.101.0/24 dev eth1  proto kernel  scope link  src 192.168.101.1 &lt;br/&gt;192.168.122.0/24 dev eth0  proto kernel  scope link  src 192.168.122.74 &lt;br/&gt;169.254.0.0/16 dev eth0  scope link  metric 1002 &lt;br/&gt;169.254.0.0/16 dev eth1  scope link  metric 1003 &lt;br/&gt;default via 192.168.122.1 dev eth0&lt;/pre&gt;&lt;br/&gt;I did the same thing on client1 and client2:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@client1 ~]# iptables -F&lt;br/&gt;[root@client1 ~]# service iptables save&lt;br/&gt;iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]&lt;br/&gt;[root@client1 ~]# ip addr show&lt;br/&gt;1: lo:  mtu 16436 qdisc noqueue state UNKNOWN &lt;br/&gt;    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00&lt;br/&gt;    inet 127.0.0.1/8 scope host lo&lt;br/&gt;    inet6 ::1/128 scope host &lt;br/&gt;       valid_lft forever preferred_lft forever&lt;br/&gt;2: eth0:  mtu 1500 qdisc pfifo_fast state UP qlen 1000&lt;br/&gt;    link/ether 52:54:00:38:28:0a brd ff:ff:ff:ff:ff:ff&lt;br/&gt;    inet 192.168.101.101/24 brd 192.168.101.255 scope global eth0&lt;br/&gt;    inet6 fe80::5054:ff:fe38:280a/64 scope link &lt;br/&gt;       valid_lft forever preferred_lft forever&lt;br/&gt;[root@client1 ~]# ip route show&lt;br/&gt;192.168.101.0/24 dev eth0  proto kernel  scope link  src 192.168.101.101 &lt;br/&gt;169.254.0.0/16 dev eth0  scope link  metric 1002 &lt;br/&gt;default via 192.168.101.1 dev eth0 &lt;br/&gt;[root@client1 ~]# ping -c 1 192.168.101.1 &amp;amp;&amp;amp; ping -c 1 4.2.2.2&lt;br/&gt;PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=0.333 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.1 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.333/0.333/0.333/0.000 ms&lt;br/&gt;PING 4.2.2.2 (4.2.2.2) 56(84) bytes of data.&lt;br/&gt;&lt;br/&gt;--- 4.2.2.2 ping statistics ---&lt;br/&gt;1 packets transmitted, 0 received, 100% packet loss, time 10000ms&lt;/pre&gt;&lt;br/&gt;Here is some of the functionality that IPTables provides:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# iptables --help&lt;br/&gt;iptables v1.4.7&lt;br/&gt;&lt;br/&gt;Usage: iptables -[AD] chain rule-specification [options]&lt;br/&gt;       iptables -I chain [rulenum] rule-specification [options]&lt;br/&gt;       iptables -R chain rulenum rule-specification [options]&lt;br/&gt;       iptables -D chain rulenum [options]&lt;br/&gt;       iptables -[LS] [chain [rulenum]] [options]&lt;br/&gt;       iptables -[FZ] [chain] [options]&lt;br/&gt;       iptables -[NX] chain&lt;br/&gt;       iptables -E old-chain-name new-chain-name&lt;br/&gt;       iptables -P chain target [options]&lt;br/&gt;       iptables -h (print this help information)&lt;br/&gt;&lt;br/&gt;Commands:&lt;br/&gt;Either long or short options are allowed.&lt;br/&gt;  --append  -A chain  Append to chain&lt;br/&gt;  --delete  -D chain  Delete matching rule from chain&lt;br/&gt;  --delete  -D chain rulenum&lt;br/&gt;    Delete rule rulenum (1 = first) from chain&lt;br/&gt;  --insert  -I chain [rulenum]&lt;br/&gt;    Insert in chain as rulenum (default 1=first)&lt;br/&gt;  --replace -R chain rulenum&lt;br/&gt;    Replace rule rulenum (1 = first) in chain&lt;br/&gt;  --list    -L [chain [rulenum]]&lt;br/&gt;    List the rules in a chain or all chains&lt;br/&gt;  --list-rules -S [chain [rulenum]]&lt;br/&gt;    Print the rules in a chain or all chains&lt;br/&gt;  --flush   -F [chain]  Delete all rules in  chain or all chains&lt;br/&gt;  --zero    -Z [chain [rulenum]]&lt;br/&gt;    Zero counters in chain or all chains&lt;br/&gt;  --new     -N chain  Create a new user-defined chain&lt;br/&gt;  --delete-chain&lt;br/&gt;            -X [chain]  Delete a user-defined chain&lt;br/&gt;  --policy  -P chain target&lt;br/&gt;    Change policy on chain to target&lt;br/&gt;  --rename-chain&lt;br/&gt;            -E old-chain new-chain&lt;br/&gt;    Change chain name, (moving any references)&lt;br/&gt;Options:&lt;br/&gt;[!] --proto -p proto protocol: by number or name, eg. `tcp'&lt;br/&gt;[!] --source -s address[/mask][...]&lt;br/&gt;    source specification&lt;br/&gt;[!] --destination -d address[/mask][...]&lt;br/&gt;    destination specification&lt;br/&gt;[!] --in-interface -i input name[+]&lt;br/&gt;    network interface name ([+] for wildcard)&lt;br/&gt; --jump -j target&lt;br/&gt;    target for rule (may load target extension)&lt;br/&gt;  --goto      -g chain&lt;br/&gt;                              jump to chain with no return&lt;br/&gt;  --match -m match&lt;br/&gt;    extended match (may load extension)&lt;br/&gt;  --numeric -n  numeric output of addresses and ports&lt;br/&gt;[!] --out-interface -o output name[+]&lt;br/&gt;    network interface name ([+] for wildcard)&lt;br/&gt;  --table -t table table to manipulate (default: `filter')&lt;br/&gt;  --verbose -v  verbose mode&lt;br/&gt;  --line-numbers  print line numbers when listing&lt;br/&gt;  --exact -x  expand numbers (display exact values)&lt;br/&gt;[!] --fragment -f  match second or further fragments only&lt;br/&gt;  --modprobe=&lt;command&gt;&lt;/command&gt;  try to insert modules using this command&lt;br/&gt;  --set-counters PKTS BYTES set the counter during insert/append&lt;br/&gt;[!] --version -V  print package version.&lt;/pre&gt;&lt;br/&gt;The remaining functionality can be found in 'man iptables'. There is A LOT of functionality! However, the RHCE objectives state that you should be able to create a packet filtering firewall. Note that it doesn't state anything about needing to create a modern stateful packet inspection firewall. It also states that you should be able to create a NAT.&lt;br/&gt;&lt;br/&gt;Let's start with a packet filtering firewall. IPtables reads the rules from the top down and will process it's responses based upon the first matching rule.&lt;br/&gt;&lt;br/&gt;In this first example. I created two rules. The first one blocks all ICMP traffic from 192.168.101.101 (client1), while the second permits all ICMP traffic from 192.168.101.102 (client2).&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# iptables -L&lt;br/&gt;Chain INPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain FORWARD (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain OUTPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;[root@server1 ~]# ping -c 1 192.168.101.101&lt;br/&gt;PING 192.168.101.101 (192.168.101.101) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.101: icmp_seq=1 ttl=64 time=0.434 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.101 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.434/0.434/0.434/0.000 ms&lt;br/&gt;[root@server1 ~]# ping -c 1 192.168.101.102&lt;br/&gt;PING 192.168.101.102 (192.168.101.102) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.102: icmp_seq=1 ttl=64 time=0.263 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.102 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.263/0.263/0.263/0.000 ms&lt;br/&gt;[root@server1 ~]# iptables -I INPUT -s 192.168.101.101/32 -p icmp -j REJECT&lt;br/&gt;[root@server1 ~]# iptables -I INPUT -s 192.168.101.102/32 -p icmp -j ACCEPT&lt;br/&gt;[root@server1 ~]# iptables -L&lt;br/&gt;Chain INPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;ACCEPT     icmp --  192.168.101.102      anywhere            &lt;br/&gt;REJECT     icmp --  192.168.101.101      anywhere            reject-with icmp-port-unreachable &lt;br/&gt;&lt;br/&gt;Chain FORWARD (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;&lt;br/&gt;Chain OUTPUT (policy ACCEPT)&lt;br/&gt;target     prot opt source               destination         &lt;br/&gt;[root@server1 ~]# ping -c 1 192.168.101.101&lt;br/&gt;PING 192.168.101.101 (192.168.101.101) 56(84) bytes of data.&lt;br/&gt;&lt;br/&gt;--- 192.168.101.101 ping statistics ---&lt;br/&gt;1 packets transmitted, 0 received, 100% packet loss, time 10000ms&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# ping -c 1 192.168.101.102&lt;br/&gt;PING 192.168.101.102 (192.168.101.102) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.102: icmp_seq=1 ttl=64 time=0.569 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.102 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.569/0.569/0.569/0.000 ms&lt;/pre&gt;&lt;br/&gt;As you can see in the example above, I started out with a default, permit anything, rule set. I then verified that I could ping both client1 and client2. Finally, I applied the two rules and attempted to ping the hosts again. The ping request to client1 failed, while was successful on client2.&lt;br/&gt;&lt;br/&gt;Now, why did the server fail to ping client1 when we wanted pings from client1 to server1 to fail? The answer is that when server1 sent a ping (echo-request), client1 responded to the ping (echo). Since the rule blocks ALL icmp types. The rule blocked the response (echo) from client1, but allowed the echo-request from server1.&lt;br/&gt;&lt;br/&gt;Below are the attempted ping requests from client1 and client2 before and after I applied the firewall rules to block icmp.&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre class="crayon-selected"&gt;###Before###&lt;br/&gt;[root@client1 ~]# ping -c 1 192.168.101.1&lt;br/&gt;PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=0.320 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.1 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.320/0.320/0.320/0.000 ms&lt;br/&gt;[root@client1 ~]# ping -c 1 192.168.101.102&lt;br/&gt;PING 192.168.101.102 (192.168.101.102) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.102: icmp_seq=1 ttl=64 time=1.16 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.102 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 1ms&lt;br/&gt;rtt min/avg/max/mdev = 1.166/1.166/1.166/0.000 ms&lt;br/&gt;###After###&lt;br/&gt;[root@client1 ~]# ping -c 1 192.168.101.1&lt;br/&gt;PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.&lt;br/&gt;From 192.168.101.1 icmp_seq=1 Destination Port Unreachable&lt;br/&gt;&lt;br/&gt;--- 192.168.101.1 ping statistics ---&lt;br/&gt;1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms&lt;br/&gt;&lt;br/&gt;[root@client1 ~]# ping -c 1 192.168.101.102&lt;br/&gt;PING 192.168.101.102 (192.168.101.102) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.102: icmp_seq=1 ttl=64 time=0.270 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.102 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.270/0.270/0.270/0.000 ms&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;###Before###&lt;br/&gt;[root@client2 ~]# ping -c 1 192.168.101.1&lt;br/&gt;PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=0.526 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.1 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.526/0.526/0.526/0.000 ms&lt;br/&gt;[root@client2 ~]# ping -c 1 192.168.101.101&lt;br/&gt;PING 192.168.101.101 (192.168.101.101) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.101: icmp_seq=1 ttl=64 time=0.236 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.101 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.236/0.236/0.236/0.000 ms&lt;br/&gt;###After###&lt;br/&gt;[root@client2 ~]# ping -c 1 192.168.101.1&lt;br/&gt;PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=0.531 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.1 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.531/0.531/0.531/0.000 ms&lt;br/&gt;[root@client2 ~]# ping -c 1 192.168.101.101&lt;br/&gt;PING 192.168.101.101 (192.168.101.101) 56(84) bytes of data.&lt;br/&gt;64 bytes from 192.168.101.101: icmp_seq=1 ttl=64 time=0.749 ms&lt;br/&gt;&lt;br/&gt;--- 192.168.101.101 ping statistics ---&lt;br/&gt;1 packets transmitted, 1 received, 0% packet loss, time 0ms&lt;br/&gt;rtt min/avg/max/mdev = 0.749/0.749/0.749/0.000 ms&lt;/pre&gt;&lt;br/&gt;Let's break down the IPTables ruleset:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;iptables -I INPUT -s 192.168.101.101/32 -p icmp -j REJECT&lt;/pre&gt;&lt;br/&gt;Directly after the iptables command, you have the '-I' switch followed by the word INPUT. iptables &lt;span style="background-color: yellow;"&gt;-I INPUT&lt;/span&gt;.&lt;br/&gt;&lt;br/&gt;The -I option specifies insert and INPUT is the chain name. INPUT is for incoming traffic.&lt;br/&gt;&lt;br/&gt;Here are some other options:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;  --append  -A chain  Append to chain&lt;br/&gt;  --delete  -D chain  Delete matching rule from chain&lt;br/&gt;  --delete  -D chain rulenum&lt;br/&gt;    Delete rule rulenum (1 = first) from chain&lt;br/&gt;  --insert  -I chain [rulenum]&lt;br/&gt;    Insert in chain as rulenum (default 1=first)&lt;br/&gt;  --replace -R chain rulenum&lt;br/&gt;    Replace rule rulenum (1 = first) in chain&lt;br/&gt;  --list    -L [chain [rulenum]]&lt;br/&gt;    List the rules in a chain or all chains&lt;br/&gt;  --list-rules -S [chain [rulenum]]&lt;br/&gt;    Print the rules in a chain or all chains&lt;br/&gt;  --flush   -F [chain]  Delete all rules in  chain or all chains&lt;br/&gt;  --zero    -Z [chain [rulenum]]&lt;br/&gt;    Zero counters in chain or all chains&lt;br/&gt;  --new     -N chain  Create a new user-defined chain&lt;br/&gt;  --delete-chain&lt;br/&gt;            -X [chain]  Delete a user-defined chain&lt;br/&gt;  --policy  -P chain target&lt;br/&gt;    Change policy on chain to target&lt;br/&gt;  --rename-chain&lt;br/&gt;            -E old-chain new-chain&lt;br/&gt;    Change chain name, (moving any references)&lt;/pre&gt;&lt;br/&gt;Be default, in the *filter table there are three chains. Those types are INPUT, FORWARD, and OUTPUT. In the *nat table there are PREROUTING, POSTROUTING, and OUTPUT. You can also create new chains with the -N switch.&lt;br/&gt;&lt;br/&gt;The next option was to specify a source with &lt;span style="background-color: yellow;"&gt;-s 192.168.101.101/32&lt;/span&gt;. With this you can specify entire subnets, individual IP Addresses, hostname, or you can get creative and specify custom chains with groups of addresses. Another common option is the -i option, which lets you specify the incoming interface.&lt;br/&gt;&lt;br/&gt;After specifying a source you need to specify a destination. If the -d is left off, all traffic will hit the filter. Next is the protocol with the -p option. In this case, &lt;span style="background-color: yellow;"&gt;-p icmp&lt;/span&gt;. You can use tcp, udp, udplite, icmp, esp, ah, sctp, or all as protocols. With tcp or udp, you will also specify port numbers with the --dport or --sport option, depending on source or destination port. You can specify a single port like &lt;span style="background-color: yellow;"&gt;--dport 22&lt;/span&gt;, a range of ports like &lt;span style="background-color: yellow;"&gt;--dport 20:23&lt;/span&gt;, or individual ports like &lt;span style="background-color: yellow;"&gt;--dport 21,22,25&lt;/span&gt;.&lt;br/&gt;&lt;br/&gt;Lastly, you decide what to do with the traffic with the -j option. The most common options are ACCEPT, DROP, and REJECT. In this case I decided to accept the traffic. &lt;span style="background-color: yellow;"&gt;-j ACCEPT&lt;/span&gt;.&lt;br/&gt;&lt;br/&gt;As this was a rather long section. I'll split this into two parts. Part two will cover NAT.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5978179258534353817/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-use-iptables-to-implement_47.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5978179258534353817'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5978179258534353817'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-use-iptables-to-implement_47.html' title='RHCE Series: Use iptables to implement packet filtering and configure&#xA;network address translation (NAT): Part 1'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-8772505238244812683</id><published>2012-10-11T08:13:00.001-05:00</published><updated>2019-04-11T11:09:43.278-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='IPv6'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Perl Tips'/><title type='text'>PPTP to HE IPv6 Network Perl Script</title><content type='html'>I forgot about this. This was a perl script that I used to use to connect to Hurricane Electric IPv6 Network via PPTP. Last I checked, their pptp servers were offline. Bummer for those who can't do IPv6 in IP tunneling. Requires the pptp-setup package.   &lt;pre&gt;#!/usr/bin/perl&lt;br /&gt;&lt;br /&gt;$pptpServer     = "HE_PPTPSERVER";&lt;br /&gt;$pptpUsername   = "USERNAME";&lt;br /&gt;$pptpPassword   = "PASSWORD";&lt;br /&gt;&lt;br /&gt;$tunRemote      = "TUN_DESTIPADDR";&lt;br /&gt;$tunClient      = "TUN_CLIENTIPADDR";&lt;br /&gt;&lt;br /&gt;$client6        = "TUN_IPV6ADDR";&lt;br /&gt;&lt;br /&gt;if(!$ARGV[0]) {&lt;br /&gt;        print "$0 [start | stop]\n";&lt;br /&gt;} elsif($ARGV[0] eq "start") {&lt;br /&gt;        `pptpsetup --create ipv6 --server $pptpServer --username $pptpUsername --password $pptpPassword --start`;&lt;br /&gt;        `ip tunnel add sixbone mode sit remote $tunRemote local $tunClient ttl 255 dev ppp0`;&lt;br /&gt;        `ip link set sixbone up`;&lt;br /&gt;        `ip addr add $client6 dev sixbone`;&lt;br /&gt;        `ip route add ::/0 dev sixbone`;&lt;br /&gt;        `ip route add 2000::/3 dev sixbone`;&lt;br /&gt;} elsif($ARGV[0] eq "stop") {&lt;br /&gt;        `ip route del ::/0 dev sixbone`;&lt;br /&gt;        `ip route del 2000::/3 dev sixbone`;&lt;br /&gt;        `ip addr del $client6 dev sixbone`;&lt;br /&gt;        `ip link set sixbone down`;&lt;br /&gt;        `ip tunnel del sixbone`;&lt;br /&gt;        `pptpsetup --delete ipv6`;&lt;br /&gt;        @ps = `ps ax | grep pptp`;&lt;br /&gt;        foreach $proc (@ps) {&lt;br /&gt;                @pid = split(/ +/,$proc);&lt;br /&gt;                `kill -9 $pid[1]`;&lt;br /&gt;        };&lt;br /&gt;} else {&lt;br /&gt;        print "$0 [start | stop]\n";&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/8772505238244812683/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/pptp-to-he-ipv6-network-perl-script_11.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8772505238244812683'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8772505238244812683'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/pptp-to-he-ipv6-network-perl-script_11.html' title='PPTP to HE IPv6 Network Perl Script'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-2788218836343081570</id><published>2012-10-10T22:48:00.001-05:00</published><updated>2019-04-11T11:09:43.535-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://www.blogger.com/atom/ns#' term='Routing Protocols'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>RHCE Series: Route IP traffic and create static routes</title><content type='html'>As I start preparing for the RHCE exam, I'm attempting to go through each exam objective one by one and put together my notes on the subjects. I'll try to go trough each exam objective in the order that it's listed on it's page, but I may skip around a little bit on the objectives that very vague on what exactly they want. This first set of notes is on routing IP traffic and static routes. Enjoy.&lt;br/&gt;&lt;br/&gt;There are two installed packages that can provide the same routing and information and allow you to create static routes. Those packages are net-tools and iproute.&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;[root@server1 ~]# yum provides /sbin/ifconfig&lt;br/&gt;Loaded plugins: fastestmirror&lt;br/&gt;Loading mirror speeds from cached hostfile&lt;br/&gt;net-tools-1.60-110.el6_2.x86_64 : Basic networking tools&lt;br/&gt;Repo        : sgn&lt;br/&gt;Matched from:&lt;br/&gt;Filename    : /sbin/ifconfig&lt;br/&gt;&lt;br/&gt;net-tools-1.60-110.el6_2.x86_64 : Basic networking tools&lt;br/&gt;Repo        : installed&lt;br/&gt;Matched from:&lt;br/&gt;Other       : Provides-match: /sbin/ifconfig&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# rpm -ql net-tools&lt;br/&gt;/bin/dnsdomainname&lt;br/&gt;/bin/domainname&lt;br/&gt;/bin/hostname&lt;br/&gt;/bin/netstat&lt;br/&gt;/bin/nisdomainname&lt;br/&gt;/bin/ypdomainname&lt;br/&gt;/etc/ethers&lt;br/&gt;/sbin/arp&lt;br/&gt;/sbin/ether-wake&lt;br/&gt;/sbin/ifconfig&lt;br/&gt;/sbin/ipmaddr&lt;br/&gt;/sbin/iptunnel&lt;br/&gt;/sbin/mii-diag&lt;br/&gt;/sbin/mii-tool&lt;br/&gt;/sbin/nameif&lt;br/&gt;/sbin/plipconfig&lt;br/&gt;/sbin/route&lt;br/&gt;/sbin/slattach&lt;br/&gt;/usr/share/doc/net-tools-1.60&lt;br/&gt;/usr/share/doc/net-tools-1.60/COPYING&lt;br/&gt;/usr/share/locale/cs/LC_MESSAGES/net-tools.mo&lt;br/&gt;/usr/share/locale/de/LC_MESSAGES/net-tools.mo&lt;br/&gt;/usr/share/locale/et_EE/LC_MESSAGES/net-tools.mo&lt;br/&gt;/usr/share/locale/fr/LC_MESSAGES/net-tools.mo&lt;br/&gt;/usr/share/locale/pt_BR/LC_MESSAGES/net-tools.mo&lt;br/&gt;/usr/share/man/de/man1/dnsdomainname.1.gz&lt;br/&gt;/usr/share/man/de/man1/domainname.1.gz&lt;br/&gt;/usr/share/man/de/man1/hostname.1.gz&lt;br/&gt;/usr/share/man/de/man1/nisdomainname.1.gz&lt;br/&gt;/usr/share/man/de/man1/ypdomainname.1.gz&lt;br/&gt;/usr/share/man/de/man5/ethers.5.gz&lt;br/&gt;/usr/share/man/de/man8/arp.8.gz&lt;br/&gt;/usr/share/man/de/man8/ifconfig.8.gz&lt;br/&gt;/usr/share/man/de/man8/netstat.8.gz&lt;br/&gt;/usr/share/man/de/man8/plipconfig.8.gz&lt;br/&gt;/usr/share/man/de/man8/route.8.gz&lt;br/&gt;/usr/share/man/de/man8/slattach.8.gz&lt;br/&gt;/usr/share/man/fr/man1/dnsdomainname.1.gz&lt;br/&gt;/usr/share/man/fr/man1/domainname.1.gz&lt;br/&gt;/usr/share/man/fr/man1/hostname.1.gz&lt;br/&gt;/usr/share/man/fr/man1/nisdomainname.1.gz&lt;br/&gt;/usr/share/man/fr/man1/ypdomainname.1.gz&lt;br/&gt;/usr/share/man/fr/man5/ethers.5.gz&lt;br/&gt;/usr/share/man/fr/man8/arp.8.gz&lt;br/&gt;/usr/share/man/fr/man8/ifconfig.8.gz&lt;br/&gt;/usr/share/man/fr/man8/netstat.8.gz&lt;br/&gt;/usr/share/man/fr/man8/plipconfig.8.gz&lt;br/&gt;/usr/share/man/fr/man8/route.8.gz&lt;br/&gt;/usr/share/man/fr/man8/slattach.8.gz&lt;br/&gt;/usr/share/man/man1/dnsdomainname.1.gz&lt;br/&gt;/usr/share/man/man1/domainname.1.gz&lt;br/&gt;/usr/share/man/man1/hostname.1.gz&lt;br/&gt;/usr/share/man/man1/nisdomainname.1.gz&lt;br/&gt;/usr/share/man/man1/ypdomainname.1.gz&lt;br/&gt;/usr/share/man/man5/ethers.5.gz&lt;br/&gt;/usr/share/man/man8/arp.8.gz&lt;br/&gt;/usr/share/man/man8/ether-wake.8.gz&lt;br/&gt;/usr/share/man/man8/ifconfig.8.gz&lt;br/&gt;/usr/share/man/man8/ipmaddr.8.gz&lt;br/&gt;/usr/share/man/man8/iptunnel.8.gz&lt;br/&gt;/usr/share/man/man8/mii-diag.8.gz&lt;br/&gt;/usr/share/man/man8/mii-tool.8.gz&lt;br/&gt;/usr/share/man/man8/nameif.8.gz&lt;br/&gt;/usr/share/man/man8/netstat.8.gz&lt;br/&gt;/usr/share/man/man8/plipconfig.8.gz&lt;br/&gt;/usr/share/man/man8/route.8.gz&lt;br/&gt;/usr/share/man/man8/slattach.8.gz&lt;br/&gt;/usr/share/man/pt/man1/dnsdomainname.1.gz&lt;br/&gt;/usr/share/man/pt/man1/domainname.1.gz&lt;br/&gt;/usr/share/man/pt/man1/hostname.1.gz&lt;br/&gt;/usr/share/man/pt/man1/nisdomainname.1.gz&lt;br/&gt;/usr/share/man/pt/man1/ypdomainname.1.gz&lt;br/&gt;/usr/share/man/pt/man8/arp.8.gz&lt;br/&gt;/usr/share/man/pt/man8/ifconfig.8.gz&lt;br/&gt;/usr/share/man/pt/man8/netstat.8.gz&lt;br/&gt;/usr/share/man/pt/man8/route.8.gz&lt;/pre&gt;&lt;br/&gt;&lt;pre class="lang:default decode:true"&gt;[root@server1 ~]# yum provides /sbin/ip&lt;br/&gt;Loaded plugins: fastestmirror&lt;br/&gt;Loading mirror speeds from cached hostfile&lt;br/&gt;iproute-2.6.32-20.el6.x86_64 : Advanced IP routing and network device configuration tools&lt;br/&gt;Repo        : sgn&lt;br/&gt;Matched from:&lt;br/&gt;Filename    : /sbin/ip&lt;br/&gt;&lt;br/&gt;iproute-2.6.32-20.el6.x86_64 : Advanced IP routing and network device configuration tools&lt;br/&gt;Repo        : installed&lt;br/&gt;Matched from:&lt;br/&gt;Other       : Provides-match: /sbin/ip&lt;br/&gt;&lt;br/&gt;[root@server1 ~]# rpm -ql iproute&lt;br/&gt;/etc/iproute2&lt;br/&gt;/etc/iproute2/ematch_map&lt;br/&gt;/etc/iproute2/rt_dsfield&lt;br/&gt;/etc/iproute2/rt_protos&lt;br/&gt;/etc/iproute2/rt_realms&lt;br/&gt;/etc/iproute2/rt_scopes&lt;br/&gt;/etc/iproute2/rt_tables&lt;br/&gt;/etc/sysconfig/cbq&lt;br/&gt;/etc/sysconfig/cbq/avpkt&lt;br/&gt;/etc/sysconfig/cbq/cbq-0000.example&lt;br/&gt;/sbin/cbq&lt;br/&gt;/sbin/ifcfg&lt;br/&gt;/sbin/ip&lt;br/&gt;/sbin/rtmon&lt;br/&gt;/sbin/tc&lt;br/&gt;/usr/lib64/tc&lt;br/&gt;/usr/lib64/tc/m_xt.so&lt;br/&gt;/usr/sbin/arpd&lt;br/&gt;/usr/sbin/lnstat&lt;br/&gt;/usr/sbin/nstat&lt;br/&gt;/usr/sbin/rtacct&lt;br/&gt;/usr/sbin/ss&lt;br/&gt;/usr/share/doc/iproute-2.6.32&lt;br/&gt;/usr/share/doc/iproute-2.6.32/README&lt;br/&gt;/usr/share/doc/iproute-2.6.32/README.decnet&lt;br/&gt;/usr/share/doc/iproute-2.6.32/README.distribution&lt;br/&gt;/usr/share/doc/iproute-2.6.32/README.iproute2+tc&lt;br/&gt;/usr/share/doc/iproute-2.6.32/README.lnstat&lt;br/&gt;/usr/share/man/man8/arpd.8.gz&lt;br/&gt;/usr/share/man/man8/cbq.8.gz&lt;br/&gt;/usr/share/man/man8/ifcfg.8.gz&lt;br/&gt;/usr/share/man/man8/ip.8.gz&lt;br/&gt;/usr/share/man/man8/lnstat.8.gz&lt;br/&gt;/usr/share/man/man8/nstat.8.gz&lt;br/&gt;/usr/share/man/man8/routel.8.gz&lt;br/&gt;/usr/share/man/man8/rtacct.8.gz&lt;br/&gt;/usr/share/man/man8/rtmon.8.gz&lt;br/&gt;/usr/share/man/man8/ss.8.gz&lt;br/&gt;/usr/share/man/man8/tc-bfifo.8.gz&lt;br/&gt;/usr/share/man/man8/tc-cbq-details.8.gz&lt;br/&gt;/usr/share/man/man8/tc-cbq.8.gz&lt;br/&gt;/usr/share/man/man8/tc-htb.8.gz&lt;br/&gt;/usr/share/man/man8/tc-pfifo.8.gz&lt;br/&gt;/usr/share/man/man8/tc-pfifo_fast.8.gz&lt;br/&gt;/usr/share/man/man8/tc-prio.8.gz&lt;br/&gt;/usr/share/man/man8/tc-red.8.gz&lt;br/&gt;/usr/share/man/man8/tc-sfq.8.gz&lt;br/&gt;/usr/share/man/man8/tc-tbf.8.gz&lt;br/&gt;/usr/share/man/man8/tc.8.gz&lt;br/&gt;/usr/share/tc&lt;br/&gt;/usr/share/tc/normal.dist&lt;br/&gt;/usr/share/tc/pareto.dist&lt;br/&gt;/usr/share/tc/paretonormal.dist&lt;/pre&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;Above, you will see the package description, as well as the files that are installed with each package. Net-tools is the old tools and are pretty much kept around for compatibility. I personally like the output of the ifconfig and the route command better than I do the ip command, but as ifconfig and route are pretty much depreciated and will be going away at some point, I'll focus my notes on the command sequence of the ip command.&lt;br/&gt;&lt;br/&gt;ip command structure:&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# ip route help&lt;br/&gt;Usage: ip route { list | flush } SELECTOR&lt;br/&gt;       ip route get ADDRESS [ from ADDRESS iif STRING ]&lt;br/&gt;                            [ oif STRING ]  [ tos TOS ]&lt;br/&gt;       ip route { add | del | change | append | replace | monitor } ROUTE&lt;br/&gt;SELECTOR := [ root PREFIX ] [ match PREFIX ] [ exact PREFIX ]&lt;br/&gt;            [ table TABLE_ID ] [ proto RTPROTO ]&lt;br/&gt;            [ type TYPE ] [ scope SCOPE ]&lt;br/&gt;ROUTE := NODE_SPEC [ INFO_SPEC ]&lt;br/&gt;NODE_SPEC := [ TYPE ] PREFIX [ tos TOS ]&lt;br/&gt;             [ table TABLE_ID ] [ proto RTPROTO ]&lt;br/&gt;             [ scope SCOPE ] [ metric METRIC ]&lt;br/&gt;INFO_SPEC := NH OPTIONS FLAGS [ nexthop NH ]...&lt;br/&gt;NH := [ via ADDRESS ] [ dev STRING ] [ weight NUMBER ] NHFLAGS&lt;br/&gt;OPTIONS := FLAGS [ mtu NUMBER ] [ advmss NUMBER ]&lt;br/&gt;           [ rtt TIME ] [ rttvar TIME ] [reordering NUMBER ]&lt;br/&gt;           [ window NUMBER] [ cwnd NUMBER ] [ initcwnd NUMBER ]&lt;br/&gt;           [ ssthresh NUMBER ] [ realms REALM ] [ src ADDRESS ]&lt;br/&gt;           [ rto_min TIME ] [ hoplimit NUMBER ] &lt;br/&gt;TYPE := [ unicast | local | broadcast | multicast | throw |&lt;br/&gt;          unreachable | prohibit | blackhole | nat ]&lt;br/&gt;TABLE_ID := [ local | main | default | all | NUMBER ]&lt;br/&gt;SCOPE := [ host | link | global | NUMBER ]&lt;br/&gt;FLAGS := [ equalize ]&lt;br/&gt;MP_ALGO := { rr | drr | random | wrandom }&lt;br/&gt;NHFLAGS := [ onlink | pervasive ]&lt;br/&gt;RTPROTO := [ kernel | boot | static | NUMBER ]&lt;br/&gt;TIME := NUMBER[s|ms|us|ns|j]&lt;/pre&gt;&lt;br/&gt;ip route {list, add, delete}:&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# ip route list&lt;br/&gt;192.168.122.0/24 dev eth0  proto kernel  scope link  src 192.168.122.101 &lt;br/&gt;169.254.0.0/16 dev eth0  scope link  metric 1002 &lt;br/&gt;default via 192.168.122.1 dev eth0 &lt;br/&gt;[root@server1 ~]# ip route add 192.168.100.0/24 via 192.168.122.1 dev eth0&lt;br/&gt;[root@server1 ~]# ip route list&lt;br/&gt;192.168.100.0/24 via 192.168.122.1 dev eth0 &lt;br/&gt;192.168.122.0/24 dev eth0  proto kernel  scope link  src 192.168.122.101 &lt;br/&gt;169.254.0.0/16 dev eth0  scope link  metric 1002 &lt;br/&gt;default via 192.168.122.1 dev eth0 &lt;br/&gt;[root@server1 ~]# ip route del 192.168.100.0/24 via 192.168.122.1 dev eth0&lt;br/&gt;[root@server1 ~]# ip route list&lt;br/&gt;192.168.122.0/24 dev eth0  proto kernel  scope link  src 192.168.122.101 &lt;br/&gt;169.254.0.0/16 dev eth0  scope link  metric 1002 &lt;br/&gt;default via 192.168.122.1 dev eth0&lt;/pre&gt;&lt;br/&gt;Let's break it down:&lt;br/&gt;&lt;ul&gt;&lt;br/&gt;	&lt;li&gt;'ip route add' - add a route&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;192.168.100.0/24 - the destination network&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;'via 192.168.122.1' - the gateway to reach the 192.168.100.0/24 network.&lt;/li&gt;&lt;br/&gt;	&lt;li&gt;'dev eth0' - the interface to send the traffic to both the gateway and destination network.&lt;/li&gt;&lt;br/&gt;&lt;/ul&gt;&lt;br/&gt;The 'dev eth0' is optional.&lt;br/&gt;&lt;br/&gt;To make static routes persistent, you can create a static-routes file in /etc/sysconfig/. This file is already referenced in the network init script.&lt;br/&gt;&lt;pre&gt;[root@server1 ~]# grep route /etc/init.d/network&lt;br/&gt; # Add non interface-specific static-routes.&lt;br/&gt; if [ -f /etc/sysconfig/static-routes ]; then&lt;br/&gt;    grep "^any" /etc/sysconfig/static-routes | while read ignore args ; do&lt;br/&gt;              /sbin/route add -$args&lt;/pre&gt;&lt;br/&gt;The 'static-routes' file has a similar syntax to the 'route' command. The reason for that is because the network init script uses the route command when it reads the static-routes file! That syntax is:&lt;br/&gt;&lt;br/&gt;An example would be:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre&gt;[root@server1 sysconfig]# cat static-routes &lt;br/&gt;any net 192.168.100.0 netmask 255.255.255.0 gw 192.168.122.1 dev eth0&lt;/pre&gt;&lt;br/&gt;The next option would be to add a route-dev file in /etc/sysconfig/network-scripts.&lt;br/&gt;&lt;br/&gt;An example of this file would be:&lt;br/&gt;&lt;br/&gt;&amp;nbsp;&lt;br/&gt;&lt;pre class="crayon-selected"&gt;[root@server1 network-scripts]# cat route-eth0 &lt;br/&gt;192.168.100.0/24 via 192.168.122.1 dev eth0&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/2788218836343081570/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-route-ip-traffic-and-create_10.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2788218836343081570'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2788218836343081570'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-series-route-ip-traffic-and-create_10.html' title='RHCE Series: Route IP traffic and create static routes'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-3932546121938321993</id><published>2012-10-09T09:41:00.001-05:00</published><updated>2019-04-11T11:09:43.791-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Subnetting'/><category scheme='http://www.blogger.com/atom/ns#' term='IPv6'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>IPv6 Subnetting</title><content type='html'>In conjunction with my knowledge of how IPv4 subnetting works, &lt;a href="http://etherealmind.com/" target="_blank"&gt;Ethereal Minds&lt;/a&gt;' blog on "&lt;a href="http://etherealmind.com/ipv6-address-allocation-numbers/" target="_blank"&gt;/48 allocation in /64 chunks&lt;/a&gt;" got my mind going on IPv6 subnetting and how it works. I'll write more on it soon, but it's pretty easy to understand if you understand how to subnet IPv4 networks. Same concepts, but with 16 bit fields and 128 bit long addresses.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/3932546121938321993/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/ipv6-subnetting_9.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3932546121938321993'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3932546121938321993'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/ipv6-subnetting_9.html' title='IPv6 Subnetting'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5341748051481810569</id><published>2012-10-07T20:11:00.001-05:00</published><updated>2019-04-11T11:09:44.068-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='RHCE Study Notes'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>RHCE Exam Objectives</title><content type='html'>I'm starting to study for the &lt;a href="https://www.redhat.com/training/courses/ex300/examobjective" target="_blank"&gt;RHCE&lt;/a&gt; exam. Below are the current exam objectives and will be referring to them as I study.&lt;br /&gt;&lt;br /&gt;&lt;h4&gt; System configuration and management&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;  Route IP traffic and create static routes.&lt;/li&gt;&lt;li&gt;  Use iptables to implement packet filtering and configure network address translation (NAT).&lt;/li&gt;&lt;li&gt;  Use /proc/sys and sysctl to modify and set kernel runtime parameters.&lt;/li&gt;&lt;li&gt;  Configure a system to authenticate using Kerberos.&lt;/li&gt;&lt;li&gt;  Build a simple RPM that packages a single file.&lt;/li&gt;&lt;li&gt;  Configure a system as an iSCSI initiator that persistently mounts an iSCSI target.&lt;/li&gt;&lt;li&gt;  Produce and deliver reports on system utilization (processor, memory, disk, and network).&lt;/li&gt;&lt;li&gt;  Use shell scripting to automate system maintenance tasks.&lt;/li&gt;&lt;li&gt;  Configure a system to log to a remote system.&lt;/li&gt;&lt;li&gt;  Configure a system to accept logging from a remote system.&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt; Network services&lt;/h4&gt;Network services are an important subset of the exam objectives. RHCE  candidates should be capable of meeting the following objectives for  each of the network services listed below:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;  Install the packages needed to provide the service.&lt;/li&gt;&lt;li&gt;  Configure SELinux to support the service.&lt;/li&gt;&lt;li&gt;  Configure the service to start when the system is booted.&lt;/li&gt;&lt;li&gt;  Configure the service for basic operation.&lt;/li&gt;&lt;li&gt;  Configure host-based and user-based security for the service.&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt; HTTP/HTTPS&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;  Configure a virtual host.&lt;/li&gt;&lt;li&gt;  Configure private directories.&lt;/li&gt;&lt;li&gt;  Deploy a basic CGI application.&lt;/li&gt;&lt;li&gt;  Configure group-managed content.&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt; DNS&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;  Configure a caching-only name server.&lt;/li&gt;&lt;li&gt;  Configure a caching-only name server to forward DNS queries.&lt;/li&gt;&lt;li&gt;  Note: Candidates are not expected to configure master or slave name servers.&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt; FTP&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;  Configure anonymous-only download.&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt; NFS&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;  Provide network shares to specific clients.&lt;/li&gt;&lt;li&gt;  Provide network shares suitable for group collaboration.&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt; SMB&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;  Provide network shares to specific clients.&lt;/li&gt;&lt;li&gt;  Provide network shares suitable for group collaboration.&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt; SMTP&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;  Configure a mail transfer agent (MTA) to accept inbound email from other systems.&lt;/li&gt;&lt;li&gt;  Configure an MTA to forward (relay) email through a smart host.&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt; SSH&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;  Configure key-based authentication.&lt;/li&gt;&lt;li&gt;  Configure additional options described in documentation.&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt; NTP&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;  Synchronize time using other NTP peers.&lt;/li&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5341748051481810569/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-exam-objectives_7.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5341748051481810569'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5341748051481810569'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/rhce-exam-objectives_7.html' title='RHCE Exam Objectives'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1170085433558064878</id><published>2012-10-02T15:59:00.001-05:00</published><updated>2019-04-11T11:09:44.327-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='DMVPN'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='System Administration'/><category scheme='http://www.blogger.com/atom/ns#' term='VPN'/><category scheme='http://www.blogger.com/atom/ns#' term='OpenNHRP'/><category scheme='http://www.blogger.com/atom/ns#' term='Open Source Alternatives'/><category scheme='http://www.blogger.com/atom/ns#' term='RPM'/><title type='text'>OpenNHRP is now available via RPM</title><content type='html'>After a LONG hiatus, I'm finally starting to work on my Open Source implementation of &lt;a href="http://www.packetgeek.net/search/label/VPN" target="_blank"&gt;DMVPN&lt;/a&gt;, again. So far, I've started off by taking the &lt;a href="http://sourceforge.net/projects/opennhrp/" target="_blank"&gt;OpenNHRP&lt;/a&gt; source code and building RPM files. I made no changes to the source code itself. Heck, I don't even consider myself a developer. I just built the RPM binaries so that a person could build a DMVPN device without needing to have developer tools installed on the device itself. It should be a little more secure that way. :)&lt;br/&gt;&lt;br/&gt;Currently, the RPM files are being built in a CentOS 6 x86_64 environment. However, if this is something that people like, I will entertain building the RPM's for 32 bit environment or possibly deb packages for ubuntu / debian based environments.&lt;br/&gt;&lt;br/&gt;The binary and source RPM's are available right now! I'm still testing them to make sure everything is working properly.  You can get the package by installing the repository:&lt;br/&gt;&lt;pre class=""&gt;[root@server ~]# &lt;span style="background-color: lime;"&gt;curl http://tools.packetgeek.net/pgn.repo -o /etc/yum.repos.d/pgn.repo&lt;/span&gt;&lt;br/&gt;[root@server ~]# &lt;span style="background-color: lime;"&gt;yum search opennhrp&lt;/span&gt;&lt;br/&gt;Loaded plugins: fastestmirror&lt;br/&gt;Loading mirror speeds from cached hostfile&lt;br/&gt; * base: centosmirror.quintex.com&lt;br/&gt; * extras: centosmirror.quintex.com&lt;br/&gt; * updates: centosmirror.quintex.com&lt;br/&gt;&lt;span style="background-color: yellow;"&gt;============================================================ N/S Matched: opennhrp ============================================================&lt;br/&gt;opennhrp.x86_64 : OpenNHRP implements NBMA Next Hop Resolution Protocol (as defined in RFC 2332). It makes it possible to create dynamic&lt;br/&gt;                : multipoint VPN Linux router using NHRP, GRE and IPsec. It aims to be Cisco DMVPN compatible.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  Name and summary matches only, use "search all" for everything.&lt;br/&gt;[root@server ~]# &lt;span style="background-color: lime;"&gt;yum install opennhrp&lt;/span&gt;&lt;br/&gt;Loaded plugins: fastestmirror&lt;br/&gt;Loading mirror speeds from cached hostfile&lt;br/&gt; * base: centosmirror.quintex.com&lt;br/&gt; * extras: centosmirror.quintex.com&lt;br/&gt; * updates: centosmirror.quintex.com&lt;br/&gt;Setting up Install Process&lt;br/&gt;Resolving Dependencies&lt;br/&gt;--&amp;gt; Running transaction check&lt;br/&gt;---&amp;gt; Package opennhrp.x86_64 0:0.13.1-1.el6 will be installed&lt;br/&gt;--&amp;gt; Processing Dependency: libcares.so.2()(64bit) for package: opennhrp-0.13.1-1.el6.x86_64&lt;br/&gt;--&amp;gt; Running transaction check&lt;br/&gt;---&amp;gt; Package c-ares.x86_64 0:1.7.0-6.el6 will be installed&lt;br/&gt;--&amp;gt; Finished Dependency Resolution&lt;br/&gt;&lt;br/&gt;Dependencies Resolved&lt;br/&gt;&lt;br/&gt;===============================================================================================================================================&lt;br/&gt; Package                           Arch                            Version                                 Repository                     Size&lt;br/&gt;===============================================================================================================================================&lt;br/&gt;Installing:&lt;br/&gt; opennhrp                          x86_64                          0.13.1-1.el6                            pgn                            62 k&lt;br/&gt;Installing for dependencies:&lt;br/&gt; c-ares                            x86_64                          1.7.0-6.el6                             base                           53 k&lt;br/&gt;&lt;br/&gt;Transaction Summary&lt;br/&gt;===============================================================================================================================================&lt;br/&gt;Install       2 Package(s)&lt;br/&gt;&lt;br/&gt;Total download size: 115 k&lt;br/&gt;Installed size: 230 k&lt;br/&gt;Is this ok [y/N]: y&lt;br/&gt;Downloading Packages:&lt;br/&gt;(1/2): c-ares-1.7.0-6.el6.x86_64.rpm                                                                                    |  53 kB     00:00     &lt;br/&gt;(2/2): opennhrp-0.13.1-1.el6.x86_64.rpm                                                                                 |  62 kB     00:00     &lt;br/&gt;-----------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;Total                                                                                                          203 kB/s | 115 kB     00:00     &lt;br/&gt;Running rpm_check_debug&lt;br/&gt;Running Transaction Test&lt;br/&gt;Transaction Test Succeeded&lt;br/&gt;Running Transaction&lt;br/&gt;Warning: RPMDB altered outside of yum.&lt;br/&gt;  Installing : c-ares-1.7.0-6.el6.x86_64                                                                                                   1/2 &lt;br/&gt;  Installing : opennhrp-0.13.1-1.el6.x86_64                                                                                                2/2 &lt;br/&gt;  Verifying  : opennhrp-0.13.1-1.el6.x86_64                                                                                                1/2 &lt;br/&gt;  Verifying  : c-ares-1.7.0-6.el6.x86_64                                                                                                   2/2 &lt;br/&gt;&lt;br/&gt;Installed:&lt;br/&gt;  opennhrp.x86_64 0:0.13.1-1.el6                                                                                                               &lt;br/&gt;&lt;br/&gt;Dependency Installed:&lt;br/&gt;  c-ares.x86_64 0:1.7.0-6.el6                                                                                                                  &lt;br/&gt;&lt;br/&gt;Complete!&lt;/pre&gt;&lt;br/&gt;Have fun! I look forward to getting an open source of a DMVPN implementation up and running soon! Leave a comment if you have any comments or questions.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/1170085433558064878/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/opennhrp-is-now-available-via-rpm_2.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1170085433558064878'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1170085433558064878'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/opennhrp-is-now-available-via-rpm_2.html' title='OpenNHRP is now available via RPM'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-613761485866714686</id><published>2012-10-01T07:24:00.001-05:00</published><updated>2019-04-11T11:09:44.584-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='System Administration'/><category scheme='http://www.blogger.com/atom/ns#' term='Proxy'/><category scheme='http://www.blogger.com/atom/ns#' term='Squid'/><title type='text'>Using a Proxy Server to access the IPv6 Internet?</title><content type='html'>I had an idea recently. Could a person use an http proxy server to access the IPv6 portions of the Internet? The answer is, yes.&lt;br /&gt;&lt;br /&gt;To test this out, I spun up a cloud server at &lt;a href="http://www.rackspace.com/" target="_blank"&gt;Rackspace&lt;/a&gt;. &lt;a href="http://www.rackspace.com/" target="_blank"&gt;Rackspace&lt;/a&gt; assigns IPv6 Addresses to their 'Next Generation' Cloud Servers. In this instance, I used Linux and installed squid and httpd-tools.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@proxy ~]# ip addr show dev eth0&lt;br /&gt;2: eth0: &lt;broadcast&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000&lt;br /&gt;    link/ether bc:76:4e:04:54:39 brd ff:ff:ff:ff:ff:ff&lt;br /&gt;    inet 198.61.201.31/24 brd 198.61.201.255 scope global eth0&lt;br /&gt;    &lt;span style="background-color: yellow;"&gt;inet6 2001:4800:780e:510:e026:3332:ff04:5439/64 scope global&lt;/span&gt; &lt;br /&gt;       valid_lft forever preferred_lft forever&lt;br /&gt;    inet6 fe80::be76:4eff:fe04:5439/64 scope link &lt;br /&gt;       valid_lft forever preferred_lft forever&lt;br /&gt;[root@proxy ~]# history | grep yum&lt;br /&gt;    2  &lt;span style="background-color: yellow;"&gt;yum -y install squid&lt;/span&gt;&lt;br /&gt;   28  yum -y --disableexcludes=all update&lt;br /&gt;   58  yum -y install setroubleshoot&lt;br /&gt;   63  yum whatprovides "*/finger"&lt;br /&gt;   87  yum search squid&lt;br /&gt;  124  yum whatprovides "*/htpasswd"&lt;br /&gt;  125  yum install --help&lt;br /&gt;  126  yum deplist httpd_tools&lt;br /&gt;  127  yum install httpd_tools&lt;br /&gt;  128  yum deplist httpd-tools&lt;br /&gt;  129  &lt;span style="background-color: yellow;"&gt;yum install httpd-tools&lt;/span&gt;&lt;br /&gt;  195  history | grep yum&lt;br /&gt;[root@proxy ~]# &lt;span style="background-color: lime;"&gt;head -n 50 /etc/squid/squid.conf&lt;/span&gt;&lt;br /&gt;#&lt;br /&gt;# Recommended minimum configuration:&lt;br /&gt;#&lt;br /&gt;acl manager proto cache_object&lt;br /&gt;#acl localhost src 127.0.0.1/32 ::1&lt;br /&gt;#acl to_localhost dst 127.0.0.0/8 0.0.0.0/32 ::1&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: yellow;"&gt;auth_param basic program /usr/lib64/squid/ncsa_auth /etc/squid/passwd&lt;br /&gt;acl sgn proxy_auth REQUIRED&lt;br /&gt;http_access allow sgn&lt;br /&gt;http_access deny all&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;# Example rule allowing access from your local networks.&lt;br /&gt;# Adapt to list your (internal) IP networks from where browsing&lt;br /&gt;# should be allowed&lt;br /&gt;#acl localnet src 10.0.0.0/8 # RFC1918 possible internal network&lt;br /&gt;#acl localnet src 172.16.0.0/12 # RFC1918 possible internal network&lt;br /&gt;#acl localnet src 192.168.0.0/16 # RFC1918 possible internal network&lt;br /&gt;#acl localnet src fc00::/7       # RFC 4193 local private network range&lt;br /&gt;#acl localnet src fe80::/10      # RFC 4291 link-local (directly plugged) machines&lt;br /&gt;&lt;br /&gt;acl SSL_ports port 443&lt;br /&gt;acl Safe_ports port 80  # http&lt;br /&gt;acl Safe_ports port 21  # ftp&lt;br /&gt;acl Safe_ports port 443  # https&lt;br /&gt;acl Safe_ports port 70  # gopher&lt;br /&gt;acl Safe_ports port 210  # wais&lt;br /&gt;acl Safe_ports port 1025-65535 # unregistered ports&lt;br /&gt;acl Safe_ports port 280  # http-mgmt&lt;br /&gt;acl Safe_ports port 488  # gss-http&lt;br /&gt;acl Safe_ports port 591  # filemaker&lt;br /&gt;acl Safe_ports port 777  # multiling http&lt;br /&gt;acl CONNECT method CONNECT&lt;br /&gt;&lt;br /&gt;#&lt;br /&gt;# Recommended minimum Access Permission configuration:&lt;br /&gt;#&lt;br /&gt;# Only allow cachemgr access from localhost&lt;br /&gt;#http_access allow manager localhost&lt;br /&gt;#http_access deny manager&lt;br /&gt;&lt;br /&gt;# Deny requests to certain unsafe ports&lt;br /&gt;#http_access deny !Safe_ports&lt;br /&gt;&lt;br /&gt;# Deny CONNECT to other than secure SSL ports&lt;br /&gt;http_access deny CONNECT !SSL_ports&lt;br /&gt;&lt;br /&gt;# We strongly recommend the following be uncommented to protect innocent&lt;br /&gt;# web applications running on the proxy server who think the only&lt;br /&gt;# one who can access services on "localhost" is a local user&lt;br /&gt;[root@proxy ~]# history | grep htpasswd&lt;br /&gt;  124  yum whatprovides "*/htpasswd"&lt;br /&gt;  130  htpasswd &lt;br /&gt;  131  &lt;span style="background-color: yellow;"&gt;htpasswd -cm /etc/squid/passwd someuser&lt;/span&gt;&lt;br /&gt;  197  history | grep htpasswd&lt;br /&gt;[root@proxy ~]# &lt;span style="background-color: lime;"&gt;cat /etc/squid/passwd&lt;/span&gt; &lt;br /&gt;&lt;span style="background-color: yellow;"&gt;someuser:$apr1$SjAEUZGj$3FhI5utUY/Bp1ARFa4fhDwaDjTjCsE$ClKtuD/&lt;br /&gt;&lt;/span&gt;[root@proxy ~]# &lt;span style="background-color: lime;"&gt;iptables -L&lt;/span&gt;&lt;br /&gt;Chain INPUT (policy ACCEPT)&lt;br /&gt;target     prot opt source               destination         &lt;br /&gt;ACCEPT     all  --  anywhere             anywhere            state RELATED,ESTABLISHED &lt;br /&gt;ACCEPT     icmp --  anywhere             anywhere            &lt;br /&gt;ACCEPT     all  --  anywhere             anywhere            &lt;br /&gt;ACCEPT     tcp  --  anywhere             anywhere            state NEW tcp dpt:ssh &lt;br /&gt;&lt;span style="background-color: yellow;"&gt;ACCEPT     tcp  --  anywhere             anywhere            state NEW tcp dpt:squid&lt;/span&gt; &lt;br /&gt;REJECT     all  --  anywhere             anywhere            reject-with icmp-host-prohibited &lt;br /&gt;&lt;br /&gt;Chain FORWARD (policy ACCEPT)&lt;br /&gt;target     prot opt source               destination         &lt;br /&gt;REJECT     all  --  anywhere             anywhere            reject-with icmp-host-prohibited &lt;br /&gt;&lt;br /&gt;Chain OUTPUT (policy ACCEPT)&lt;br /&gt;target     prot opt source               destination &lt;/broadcast&gt;&lt;/pre&gt;&lt;br /&gt;As you can see, all that I did with squid was set it up to allow connections from authenticated users rather than IP Addresses. This would allow somebody to be mobile and still use the proxy. I then used 'htpasswd' from the httpd-tools package to generate the /etc/squid/passwd file, and finally, I opened up squid on the firewall.&lt;br /&gt;&lt;br /&gt;The only other changes would need to be made on your local machine. You would need to use DNS servers that served AAAA records. Googles servers do this. 8.8.8.8 and 8.8.4.4. Your local ISP may serve the AAAA records as well. You can test this with the dig or nslookup command.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;span style="background-color: lime;"&gt;dig aaaa packetgeek.net @ns1.rackspace.com&lt;br /&gt;&lt;/span&gt;&lt;/pre&gt;&lt;br /&gt;Lastly, you'll need to configure your browser to point to your proxy server. As you can see in the screenshot below. The IP Address from &lt;a href="http://www.whatismyipv6.com/"&gt;www.whatismyipv6.com&lt;/a&gt; is listed as the IPv6 Address of my proxy server.&lt;br /&gt;&lt;br /&gt;&lt;div style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-uPgIz580MFA/UGnferyHIwI/AAAAAAAAGnk/hwLQky1pvm0/s1600/Screen+Shot+2012-10-01+at+1.21.14+PM.png" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="200" src="http://1.bp.blogspot.com/-uPgIz580MFA/UGnferyHIwI/AAAAAAAAGnk/hwLQky1pvm0/s320/Screen+Shot+2012-10-01+at+1.21.14+PM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/613761485866714686/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/using-proxy-server-to-access-ipv6_1.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/613761485866714686'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/613761485866714686'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/using-proxy-server-to-access-ipv6_1.html' title='Using a Proxy Server to access the IPv6 Internet?'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://1.bp.blogspot.com/-uPgIz580MFA/UGnferyHIwI/AAAAAAAAGnk/hwLQky1pvm0/s72-c/Screen+Shot+2012-10-01+at+1.21.14+PM.png' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-6649196142845002740</id><published>2012-10-01T06:06:00.001-05:00</published><updated>2019-04-11T11:09:44.847-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='Filesystems'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='System Administration'/><category scheme='http://www.blogger.com/atom/ns#' term='LVM'/><title type='text'>Logical Volume Management in Linux</title><content type='html'>LVM is a very powerful file system administration tool in Linux. It provides you with the ability to create, extend, resize, and even take snapshots of disk space on live systems. Here are my notes.  I created a new hard drive within my test VM. When the server booted, it sees the new drive as /dev/sda. The disk that's in use by Linux is /dev/vda.  To start, we'll need to partition /dev/sda. Note that you can only have four primary partitions on a single hard drive. Once you reach four primary partitions, if there is any space left on the disk, it will be unusable. Therefore, if you have a couple primary partitions, it's best to start using logical partitions.  &lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@server1 ~]# fdisk -l | more&lt;br /&gt;&lt;br /&gt;&lt;span style="background-color: yellow;"&gt;Disk /dev/sda&lt;/span&gt;: 8589 MB, 8589934592 bytes&lt;br /&gt;255 heads, 63 sectors/track, 1044 cylinders&lt;br /&gt;Units = cylinders of 16065 * 512 = 8225280 bytes&lt;br /&gt;Sector size (logical/physical): 512 bytes / 512 bytes&lt;br /&gt;I/O size (minimum/optimal): 512 bytes / 512 bytes&lt;br /&gt;Disk identifier: 0x00000000&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Disk /dev/vda: 8589 MB, 8589934592 bytes&lt;br /&gt;16 heads, 63 sectors/track, 16644 cylinders&lt;br /&gt;Units = cylinders of 1008 * 512 = 516096 bytes&lt;br /&gt;Sector size (logical/physical): 512 bytes / 512 bytes&lt;br /&gt;I/O size (minimum/optimal): 512 bytes / 512 bytes&lt;br /&gt;Disk identifier: 0x000a2c27&lt;br /&gt;&lt;br /&gt;   Device Boot      Start         End      Blocks   Id  System&lt;br /&gt;/dev/vda1   *           3        1018      512000   83  Linux&lt;br /&gt;Partition 1 does not end on cylinder boundary.&lt;br /&gt;/dev/vda2            1018       16645     7875584   8e  Linux LVM&lt;br /&gt;Partition 2 does not end on cylinder boundary.&lt;br /&gt;&lt;br /&gt;Disk /dev/mapper/VolGroup-lv_root: 7021 MB, 7021264896 bytes&lt;br /&gt;255 heads, 63 sectors/track, 853 cylinders&lt;br /&gt;Units = cylinders of 16065 * 512 = 8225280 bytes&lt;br /&gt;Sector size (logical/physical): 512 bytes / 512 bytes&lt;br /&gt;I/O size (minimum/optimal): 512 bytes / 512 bytes&lt;br /&gt;Disk identifier: 0x00000000&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Disk /dev/mapper/VolGroup-lv_swap: 1040 MB, 1040187392 bytes&lt;br /&gt;255 heads, 63 sectors/track, 126 cylinders&lt;br /&gt;Units = cylinders of 16065 * 512 = 8225280 bytes&lt;br /&gt;Sector size (logical/physical): 512 bytes / 512 bytes&lt;br /&gt;I/O size (minimum/optimal): 512 bytes / 512 bytes&lt;br /&gt;Disk identifier: 0x00000000&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;I then created a new 2GB primary partition on /dev/sda. This new primary partition is listed as a "Linux LVM" partition type Linux will see the partition as /dev/sda1. That leaves 6GB of free space in /dev/sda. &lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@server1 ~]# fdisk /dev/sda&lt;br /&gt;Device contains neither a valid DOS partition table, nor Sun, SGI or OSF disklabel&lt;br /&gt;Building a new DOS disklabel with disk identifier 0xf1c3811e.&lt;br /&gt;Changes will remain in memory only, until you decide to write them.&lt;br /&gt;After that, of course, the previous content won't be recoverable.&lt;br /&gt;&lt;br /&gt;Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)&lt;br /&gt;&lt;br /&gt;WARNING: DOS-compatible mode is deprecated. It's strongly recommended to&lt;br /&gt;         switch off the mode (command 'c') and change display units to&lt;br /&gt;         sectors (command 'u').&lt;br /&gt;&lt;br /&gt;Command (m for help): p&lt;br /&gt;&lt;br /&gt;Disk /dev/sda: 8589 MB, 8589934592 bytes&lt;br /&gt;255 heads, 63 sectors/track, 1044 cylinders&lt;br /&gt;Units = cylinders of 16065 * 512 = 8225280 bytes&lt;br /&gt;Sector size (logical/physical): 512 bytes / 512 bytes&lt;br /&gt;I/O size (minimum/optimal): 512 bytes / 512 bytes&lt;br /&gt;Disk identifier: 0xf1c3811e&lt;br /&gt;&lt;br /&gt;   Device Boot      Start         End      Blocks   Id  System&lt;br /&gt;&lt;br /&gt;Command (m for help): n&lt;br /&gt;Command action&lt;br /&gt;   e   extended&lt;br /&gt;   p   primary partition (1-4)&lt;br /&gt;p&lt;br /&gt;Partition number (1-4): 1&lt;br /&gt;First cylinder (1-1044, default 1): &lt;br /&gt;Using default value 1&lt;br /&gt;Last cylinder, +cylinders or +size{K,M,G} (1-1044, default 1044): +2G&lt;br /&gt;&lt;br /&gt;Command (m for help): p&lt;br /&gt;&lt;br /&gt;Disk /dev/sda: 8589 MB, 8589934592 bytes&lt;br /&gt;255 heads, 63 sectors/track, 1044 cylinders&lt;br /&gt;Units = cylinders of 16065 * 512 = 8225280 bytes&lt;br /&gt;Sector size (logical/physical): 512 bytes / 512 bytes&lt;br /&gt;I/O size (minimum/optimal): 512 bytes / 512 bytes&lt;br /&gt;Disk identifier: 0xf1c3811e&lt;br /&gt;&lt;br /&gt;   Device Boot      Start         End      Blocks   Id  System&lt;br /&gt;/dev/sda1               1         262     2104483+  83  Linux&lt;br /&gt;&lt;br /&gt;Command (m for help): t&lt;br /&gt;Selected partition 1&lt;br /&gt;Hex code (type L to list codes): 8e&lt;br /&gt;Changed system type of partition 1 to 8e (Linux LVM)&lt;br /&gt;&lt;br /&gt;Command (m for help): p&lt;br /&gt;&lt;br /&gt;Disk /dev/sda: 8589 MB, 8589934592 bytes&lt;br /&gt;255 heads, 63 sectors/track, 1044 cylinders&lt;br /&gt;Units = cylinders of 16065 * 512 = 8225280 bytes&lt;br /&gt;Sector size (logical/physical): 512 bytes / 512 bytes&lt;br /&gt;I/O size (minimum/optimal): 512 bytes / 512 bytes&lt;br /&gt;Disk identifier: 0xf1c3811e&lt;br /&gt;&lt;br /&gt;   Device Boot      Start         End      Blocks   Id  System&lt;br /&gt;/dev/sda1               1         262     2104483+  8e  Linux LVM&lt;br /&gt;&lt;br /&gt;Command (m for help): w&lt;br /&gt;The partition table has been altered!&lt;br /&gt;&lt;br /&gt;Calling ioctl() to re-read partition table.&lt;br /&gt;Syncing disks.&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;Before I start, I'm going to run the pvs, vgs, and lvs commands so that you can see that I haven't modified anything, yet. Then I'll add my /dev/sda1 to a "Physical Volume".  &lt;br /&gt;&lt;br /&gt;&lt;pre&gt;root@server1 ~]# pvs&lt;br /&gt;  PV         VG       Fmt  Attr PSize PFree&lt;br /&gt;  /dev/vda2  VolGroup lvm2 a--  7.51g    0 &lt;br /&gt;[root@server1 ~]# vgs&lt;br /&gt;  VG       #PV #LV #SN Attr   VSize VFree&lt;br /&gt;  VolGroup   1   2   0 wz--n- 7.51g    0 &lt;br /&gt;[root@server1 ~]# lvs&lt;br /&gt;  LV      VG       Attr     LSize   Pool Origin Data%  Move Log Copy%  Convert&lt;br /&gt;  lv_root VolGroup -wi-ao--   6.54g                                           &lt;br /&gt;  lv_swap VolGroup -wi-ao-- 992.00m                                           &lt;br /&gt;[root@server1 ~]# ls /dev/sda1&lt;br /&gt;/dev/sda1&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;pvcreate /dev/sda1&lt;/span&gt;&lt;br /&gt;  Writing physical volume data to disk "/dev/sda1"&lt;br /&gt;  Physical volume "/dev/sda1" successfully created&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;Now is where you have to make your first decision. Do you want to create a new "Volume Group" or add the new drive to an existing "Volume Group". Both commands are simple. Creating a new volume group utilizes the vgcreate command, whereas extending the phsyical drive to an existing volume uses the vgextend command. &lt;br /&gt;To be able to show both methods, I first extended the physical volume into an existing volume group via the vgextend command. I then removed the the physical volume from the volume group so that I could demostrate creating a new volume group. You don't need to run through both commands. It's just a decision that you need to make when you're creating your volumes. &lt;br /&gt;&lt;br /&gt;&lt;pre&gt;root@server1 ~]# vgs&lt;br /&gt;  VG       #PV #LV #SN Attr   VSize VFree&lt;br /&gt;  VolGroup   1   2   0 wz--n- 7.51g    0 &lt;br /&gt;[root@server1 ~]# vgextend VolGroup /dev/sda1&lt;br /&gt;  Volume group "VolGroup" successfully extended&lt;br /&gt;[root@server1 ~]# vgs&lt;br /&gt;  VG       #PV #LV #SN Attr   VSize VFree&lt;br /&gt;  VolGroup   2   2   0 wz--n- 9.51g 2.00g&lt;br /&gt;[root@server1 ~]# vgreduce -A y VolGroup /dev/sda1&lt;br /&gt;  Removed "/dev/sda1" from volume group "VolGroup"&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;vgcreate VolGroup01 /dev/sda1&lt;/span&gt;&lt;br /&gt;  Volume group "VolGroup01" successfully created&lt;br /&gt;[root@server1 ~]# vgs&lt;br /&gt;  VG         #PV #LV #SN Attr   VSize VFree&lt;br /&gt;  VolGroup     1   2   0 wz--n- 7.51g    0 &lt;br /&gt;  &lt;span style="background-color: yellow;"&gt;VolGroup01   1   0   0 wz--n- 2.00g 2.00g&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;From here on, I'll continue with the new volume group "VolGroup01". After we have extended or created a new volume group, we'll need to create the actual logical volume. That includes needing to made a decision on the name of the volume, as well as the size of the volume. For this test, I'm going to create a volume called data and make it 1GB. That will leave 1GB for expansion or new volumes. &lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;lvcreate -n data -L 1G VolGroup01&lt;/span&gt;&lt;br /&gt;  Logical volume "data" created&lt;br /&gt;[root@server1 ~]# pvs&lt;br /&gt;  PV         VG         Fmt  Attr PSize PFree&lt;br /&gt;  /dev/sda1  VolGroup01 lvm2 a--  2.00g 1.00g&lt;br /&gt;  /dev/vda2  VolGroup   lvm2 a--  7.51g    0 &lt;br /&gt;[root@server1 ~]# vgs&lt;br /&gt;  VG         #PV #LV #SN Attr   VSize VFree&lt;br /&gt;  VolGroup     1   2   0 wz--n- 7.51g    0 &lt;br /&gt;  &lt;span style="background-color: yellow;"&gt;VolGroup01   1   1   0 wz--n- 2.00g 1.00g&lt;/span&gt;&lt;br /&gt;[root@server1 ~]# lvs&lt;br /&gt;  LV      VG         Attr     LSize   Pool Origin Data%  Move Log Copy%  Convert&lt;br /&gt;  lv_root VolGroup   -wi-ao--   6.54g                                           &lt;br /&gt;  lv_swap VolGroup   -wi-ao-- 992.00m                                           &lt;br /&gt;  &lt;span style="background-color: yellow;"&gt;data    VolGroup01 -wi-a---   1.00g &lt;/span&gt;     &lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;Once that is completed. You can create a file system, mount it, and start writing data to it. &lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;mkfs -t ext4 /dev/VolGroup01/data&lt;/span&gt; &lt;br /&gt;mke2fs 1.41.12 (17-May-2010)&lt;br /&gt;Filesystem label=&lt;br /&gt;OS type: Linux&lt;br /&gt;Block size=4096 (log=2)&lt;br /&gt;Fragment size=4096 (log=2)&lt;br /&gt;Stride=0 blocks, Stripe width=0 blocks&lt;br /&gt;65536 inodes, 262144 blocks&lt;br /&gt;13107 blocks (5.00%) reserved for the super user&lt;br /&gt;First data block=0&lt;br /&gt;Maximum filesystem blocks=268435456&lt;br /&gt;8 block groups&lt;br /&gt;32768 blocks per group, 32768 fragments per group&lt;br /&gt;8192 inodes per group&lt;br /&gt;Superblock backups stored on blocks: &lt;br /&gt; 32768, 98304, 163840, 229376&lt;br /&gt;&lt;br /&gt;Writing inode tables: done                            &lt;br /&gt;Creating journal (8192 blocks): done&lt;br /&gt;Writing superblocks and filesystem accounting information: done&lt;br /&gt;&lt;br /&gt;This filesystem will be automatically checked every 39 mounts or&lt;br /&gt;180 days, whichever comes first.  Use tune2fs -c or -i to override.&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;mkdir /data&lt;/span&gt;&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;mount /dev/VolGroup01/data /data/&lt;/span&gt;&lt;br /&gt;[root@server1 ~]# df -h&lt;br /&gt;Filesystem            Size  Used Avail Use% Mounted on&lt;br /&gt;/dev/mapper/VolGroup-lv_root&lt;br /&gt;                      6.5G  830M  5.3G  14% /&lt;br /&gt;tmpfs                 246M     0  246M   0% /dev/shm&lt;br /&gt;/dev/vda1             485M   32M  429M   7% /boot&lt;br /&gt;&lt;span style="background-color: yellow;"&gt;/dev/mapper/VolGroup01-data&lt;br /&gt;                     1008M   34M  924M   4% /data&lt;/span&gt;&lt;br /&gt;[root@server1 ~]# dd if=/dev/urandom of=/data/somefile bs=1M count=20&lt;br /&gt;20+0 records in&lt;br /&gt;20+0 records out&lt;br /&gt;20971520 bytes (21 MB) copied, 2.44909 s, 8.6 MB/s&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: yellow;"&gt;md5sum /data/somefile &gt; /data/somefile.md5sum&lt;/span&gt;&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: yellow;"&gt;cat /data/somefile.md5sum &lt;br /&gt;9437503c5996490b3518861e4d3754a7  /data/somefile&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;Now let's say that I wanted to resize the volume. That could be done with the lvresize, lvextend, or lvreduce commands. Depending on what exactly you're wanting to do, but the lvresize is generally a better universal command as it will allow you to make the volume larger as well as shrink the volume. Shrinking a volume can be tricky, particularly if you have data on it. It's always a best practice to fensure that you have a proper backup of the volume, before you resize it. One of the switches with the lvresize command that will make life easier is the '-r' switch, which is the resize2fs, switch. When this switch is enabled, it will unmount the volume, which is needed to shrink the volume, but not extend the volume. It will also run a file system check on the volume and make sure that no data will get lost somewhere in translation, and remount the volume. Just be prepared to execute a restore if the process fails.  &lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@server1 ~]# lvresize --help&lt;br /&gt;  lvresize: Resize a logical volume&lt;br /&gt;&lt;br /&gt;lvresize&lt;br /&gt; [-A|--autobackup y|n]&lt;br /&gt; [--alloc AllocationPolicy]&lt;br /&gt; [-d|--debug]&lt;br /&gt; [-f|--force]&lt;br /&gt; [-h|--help]&lt;br /&gt; [-i|--stripes Stripes [-I|--stripesize StripeSize]]&lt;br /&gt; {-l|--extents [+|-]LogicalExtentsNumber[%{VG|LV|PVS|FREE|ORIGIN}] |&lt;br /&gt;  -L|--size [+|-]LogicalVolumeSize[bBsSkKmMgGtTpPeE]}&lt;br /&gt; [-n|--nofsck]&lt;br /&gt; [--noudevsync]&lt;br /&gt; [-r|--resizefs]&lt;br /&gt; [-t|--test]&lt;br /&gt; [--type VolumeType]&lt;br /&gt; [-v|--verbose]&lt;br /&gt; [--version]&lt;br /&gt; LogicalVolume[Path] [ PhysicalVolumePath... ]&lt;br /&gt;&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;lvresize -r -L -500M /dev/VolGroup01/data&lt;/span&gt; &lt;br /&gt;Do you want to unmount "/data"? [Y|n] y&lt;br /&gt;fsck from util-linux-ng 2.17.2&lt;br /&gt;/dev/mapper/VolGroup01-data: 13/65536 files (7.7% non-contiguous), 17756/262144 blocks&lt;br /&gt;resize2fs 1.41.12 (17-May-2010)&lt;br /&gt;Resizing the filesystem on /dev/mapper/VolGroup01-data to 134144 (4k) blocks.&lt;br /&gt;The filesystem on /dev/mapper/VolGroup01-data is now 134144 blocks long.&lt;br /&gt;&lt;br /&gt;  Reducing logical volume data to 524.00 MiB&lt;br /&gt;  Logical volume data successfully resized&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: yellow;"&gt;df -h /data&lt;br /&gt;Filesystem            Size  Used Avail Use% Mounted on&lt;br /&gt;/dev/mapper/VolGroup01-data&lt;br /&gt;                      514M   53M  435M  11% /data&lt;/span&gt;&lt;br /&gt;[root@server1 ~]# ls /data/&lt;br /&gt;lost+found  somefile  somefile.md5sum&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: yellow;"&gt;md5sum /data/somefile&lt;br /&gt;9437503c5996490b3518861e4d3754a7  /data/somefile&lt;/span&gt;&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: yellow;"&gt;cat /data/somefile.md5sum &lt;br /&gt;9437503c5996490b3518861e4d3754a7  /data/somefile&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;lvresize -r -l +100%FREE /dev/VolGroup01/data&lt;/span&gt; &lt;br /&gt;  Extending logical volume data to 2.00 GiB&lt;br /&gt;  Logical volume data successfully resized&lt;br /&gt;resize2fs 1.41.12 (17-May-2010)&lt;br /&gt;Filesystem at /dev/mapper/VolGroup01-data is mounted on /data; on-line resizing required&lt;br /&gt;old desc_blocks = 1, new_desc_blocks = 1&lt;br /&gt;Performing an on-line resize of /dev/mapper/VolGroup01-data to 525312 (4k) blocks.&lt;br /&gt;The filesystem on /dev/mapper/VolGroup01-data is now 525312 blocks long.&lt;br /&gt;&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: yellow;"&gt;md5sum /data/somefile&lt;br /&gt;9437503c5996490b3518861e4d3754a7  /data/somefile&lt;/span&gt;&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: yellow;"&gt;cat /data/somefile.md5sum &lt;br /&gt;9437503c5996490b3518861e4d3754a7  /data/somefile&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;As you can see, I shrunk the volume by 500M, verified that the data remained in tact and then grew the volume to the full space (extents) remaining. One of the gotchas with shrinking a volume is to make sure that nothing is accessing the volume that you want to shrink. You can accomplish this with the lsof command. If there are applications or people accessing the volume, you'll need to either stop the application or get the person to leave the volume as their working directory. &lt;br /&gt;One of the other cool features with LVM is being able to take snapshots. This can be accomplished with the lvcreate command in conjunction with the '-s' switch. You will need to have sufficiant space within your volume group to accomplish this. &lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;lvcreate -s /dev/VolGroup01/data -L 250M -n data-snapshot&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: yellow;"&gt;  Rounding up size to full physical extent 252.00 MiB&lt;br /&gt;  Volume group "VolGroup01" has insufficient free space (0 extents): 63 required.&lt;/span&gt;&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;vgs&lt;/span&gt;&lt;br /&gt;  VG         #PV #LV #SN Attr   VSize VFree&lt;br /&gt;  VolGroup     1   2   0 wz--n- 7.51g    0 &lt;br /&gt;  &lt;span style="background-color: yellow;"&gt;VolGroup01   1   1   0 wz--n- 2.00g    0&lt;/span&gt; &lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;lvresize -r -L 1GB /dev/VolGroup01/data &lt;/span&gt;&lt;br /&gt;Do you want to unmount "/data"? [Y|n] y&lt;br /&gt;fsck from util-linux-ng 2.17.2&lt;br /&gt;/dev/mapper/VolGroup01-data: 13/139264 files (15.4% non-contiguous), 22448/525312 blocks&lt;br /&gt;resize2fs 1.41.12 (17-May-2010)&lt;br /&gt;Resizing the filesystem on /dev/mapper/VolGroup01-data to 262144 (4k) blocks.&lt;br /&gt;The filesystem on /dev/mapper/VolGroup01-data is now 262144 blocks long.&lt;br /&gt;&lt;br /&gt;  Reducing logical volume data to 1.00 GiB&lt;br /&gt;  Logical volume data successfully resized&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;lvs&lt;/span&gt;&lt;br /&gt;  LV      VG         Attr     LSize   Pool Origin Data%  Move Log Copy%  Convert&lt;br /&gt;  lv_root VolGroup   -wi-ao--   6.54g                                           &lt;br /&gt;  lv_swap VolGroup   -wi-ao-- 992.00m                                           &lt;br /&gt;  &lt;span style="background-color: yellow;"&gt;data    VolGroup01 -wi-ao--   1.00g&lt;/span&gt;                                           &lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;lvcreate -s /dev/VolGroup01/data -L 250M -n data-snapshot&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: yellow;"&gt;  Rounding up size to full physical extent 252.00 MiB&lt;br /&gt;  Logical volume "data-snapshot" created&lt;/span&gt;&lt;br /&gt;[root@server1 ~]# lvs&lt;br /&gt;  LV            VG         Attr     LSize   Pool Origin Data%  Move Log Copy%  Convert&lt;br /&gt;  lv_root       VolGroup   -wi-ao--   6.54g                                           &lt;br /&gt;  lv_swap       VolGroup   -wi-ao-- 992.00m                                           &lt;br /&gt;  data          VolGroup01 owi-aos-   1.00g                                           &lt;br /&gt;  data-snapshot VolGroup01 swi-a-s- 252.00m      data     0.00                        &lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: lime;"&gt;mount /dev/VolGroup01/data-snapshot /mnt/&lt;/span&gt;&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: yellow;"&gt;md5sum /mnt/somefile&lt;br /&gt;9437503c5996490b3518861e4d3754a7  /mnt/somefile&lt;/span&gt;&lt;br /&gt;[root@server1 ~]# &lt;span style="background-color: yellow;"&gt;md5sum /data/somefile&lt;br /&gt;9437503c5996490b3518861e4d3754a7  /data/somefile&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;As you can see, since I had previously extended the volume to encompass the full space, I had no space left over on the volume group. I then needed to reduce the size of the logical volume to make space available in the volume group for the snapshot creation.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/6649196142845002740/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/10/logical-volume-management-in-linux_1.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6649196142845002740'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6649196142845002740'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/10/logical-volume-management-in-linux_1.html' title='Logical Volume Management in Linux'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-7019240472980146591</id><published>2012-09-30T15:33:00.001-05:00</published><updated>2019-04-11T11:09:45.110-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://www.blogger.com/atom/ns#' term='Filesystems'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Security'/><category scheme='http://www.blogger.com/atom/ns#' term='Encryption'/><title type='text'>Linux Encrypted Filesystems</title><content type='html'>In the age of mobile devices that contain private information, whether it's personal or business information, encrypting your devices is a good idea. Filesystem encryption allows you to encrypt a single partition or even an entire hard drive. When configuring correctly, this will help mitigate privacy issues from stolen devices.&lt;br /&gt;&lt;br /&gt;One of the solutions for encrypting a file system in Linux is to use LUKS. LUKS stands for "Linux Unified Key Setup".  &lt;br /&gt;&lt;br /&gt;I created a logical volume to use as a test bed for the encrypted file system:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# lvs&lt;br /&gt;  LV         VG       Attr     LSize   Pool Origin Data%  Move Log Copy%  Convert&lt;br /&gt;  lv_data    vg_sgnhv -wi-ao-- 500.00g                                                                                      &lt;br /&gt;  lv_root    vg_sgnhv -wi-ao--  50.00g                                           &lt;br /&gt;  lv_swap    vg_sgnhv -wi-ao--   5.88g                                           &lt;br /&gt;&lt;br /&gt;[root@sgnhv ~]# lvcreate -n lv_crypto -L 1G vg_sgnhv&lt;br /&gt;  Logical volume "lv_crypto" created&lt;br /&gt;&lt;br /&gt;[root@sgnhv ~]# lvs&lt;br /&gt;  LV         VG       Attr     LSize   Pool Origin Data%  Move Log Copy%  Convert&lt;br /&gt; &lt;span style="background-color: yellow;"&gt; lv_crypto  vg_sgnhv -wi-a---   1.00g &lt;/span&gt;                                          &lt;br /&gt;  lv_data    vg_sgnhv -wi-ao-- 500.00g                                                                                      &lt;br /&gt;  lv_root    vg_sgnhv -wi-ao--  50.00g                                           &lt;br /&gt;  lv_swap    vg_sgnhv -wi-ao--   5.88g                                           &lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;As you can see, I have a new 1 GB logical volume called "lv_crypto". Now it's time to get into the nitty gritty of setting up LUKS. The first thing that we need to do is encrypt the 'lv_crypto' volume with the 'luksFormat' extension.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# &lt;span style="background-color: lime;"&gt;cryptsetup luksFormat /dev/vg_sgnhv/lv_crypto&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;WARNING!&lt;br /&gt;========&lt;br /&gt;This will overwrite data on /dev/vg_sgnhv/lv_crypto irrevocably.&lt;br /&gt;&lt;br /&gt;Are you sure? (Type uppercase yes): YES&lt;br /&gt;Enter LUKS passphrase: &lt;br /&gt;Verify passphrase:&lt;/pre&gt;&lt;br /&gt;Now that we have the lv_crypto logical volume encrypted, we need to use the 'luksOpen' extension to create a device mapper to crypt_dev_mapper. The device mapper acts as an interface between dm-crypt and the device. From there, we can create the file system and mount it.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# ls /dev/mapper/&lt;br /&gt;control             vg_sgnhv-lv_data  vg_sgnhv-lv_libvirt  vg_sgnhv-lv_swap&lt;br /&gt;&lt;span style="background-color: yellow;"&gt;vg_sgnhv-lv_crypto&lt;/span&gt;  vg_sgnhv-lv_home  vg_sgnhv-lv_root&lt;/pre&gt;&lt;pre&gt;[root@sgnhv ~]# &lt;span style="background-color: lime;"&gt;cryptsetup luksOpen /dev/vg_sgnhv/lv_crypto crypt_dev_mapper&lt;/span&gt;&lt;br /&gt;Enter passphrase for /dev/vg_sgnhv/lv_crypto: &lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;As you can see, there is now a device mapper called 'crypt_dev_mapper', which is the device mapper that dm-crypt created to interact with the data in the encrypted volume. There is also 'vg_sgnhv-lv_crypto', which is the encrypted logical volume. From here on out, we'll be interacting with 'crypt_dev_mapper'. If you create your file system directly on the 'lv_crypto' logical volume, you will over-write the encryption, rendering it a normal everyday logical volume.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# ls /dev/mapper/&lt;br /&gt;control           &lt;span style="background-color: yellow;"&gt;vg_sgnhv-lv_crypto&lt;/span&gt;  vg_sgnhv-lv_home     vg_sgnhv-lv_root&lt;br /&gt;&lt;span style="background-color: yellow;"&gt;crypt_dev_mapper&lt;/span&gt;  vg_sgnhv-lv_data    vg_sgnhv-lv_libvirt  vg_sgnhv-lv_swap&lt;/pre&gt;&lt;br /&gt;As mentioned, we'll create the file system on the dm-crypt created device mapper. In this case, I'm using the ext4 file system.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# mkfs -t ext4 /dev/mapper/crypt_dev_mapper &lt;br /&gt;mke2fs 1.41.12 (17-May-2010)&lt;br /&gt;Filesystem label=&lt;br /&gt;OS type: Linux&lt;br /&gt;Block size=4096 (log=2)&lt;br /&gt;Fragment size=4096 (log=2)&lt;br /&gt;Stride=0 blocks, Stripe width=0 blocks&lt;br /&gt;65408 inodes, 261632 blocks&lt;br /&gt;13081 blocks (5.00%) reserved for the super user&lt;br /&gt;First data block=0&lt;br /&gt;Maximum filesystem blocks=268435456&lt;br /&gt;8 block groups&lt;br /&gt;32768 blocks per group, 32768 fragments per group&lt;br /&gt;8176 inodes per group&lt;br /&gt;Superblock backups stored on blocks: &lt;br /&gt; 32768, 98304, 163840, 229376&lt;br /&gt;&lt;br /&gt;Writing inode tables: done                            &lt;br /&gt;Creating journal (4096 blocks): done&lt;br /&gt;Writing superblocks and filesystem accounting information: done&lt;br /&gt;&lt;br /&gt;This filesystem will be automatically checked every 26 mounts or&lt;br /&gt;180 days, whichever comes first.  Use tune2fs -c or -i to override.&lt;/pre&gt;&lt;br /&gt;By issuing the 'blkid' command, you can see that the 'lv_crypto' logical volume is labeled a a 'crytpo_LUKS' file system type and the 'crypt_dev_mapper' is labeled as a ext4 file system type. &lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# blkid | grep crypt&lt;br /&gt;/dev/mapper/vg_sgnhv-lv_crypto: UUID="993b91fd-e3f2-4764-9453-3e6bf64c44b9" TYPE="crypto_LUKS" &lt;br /&gt;/dev/mapper/crypt_dev_mapper: UUID="4b034d56-2216-43af-86ac-98b9abb0a3fe" TYPE="ext4" &lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;Once the filesystem has been created, you can now mount the drive and start writing data to it, as seen below.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# &lt;span style="background-color: lime;"&gt;mount /dev/mapper/crypt_dev_mapper /mnt/&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;[root@sgnhv ~]# df -h&lt;br /&gt;Filesystem            Size  Used Avail Use% Mounted on&lt;br /&gt;/dev/mapper/vg_sgnhv-lv_root&lt;br /&gt;                       50G  7.5G   40G  16% /&lt;br /&gt;tmpfs                 1.9G  388K  1.9G   1% /dev/shm&lt;br /&gt;/dev/md127p1          485M  128M  332M  28% /boot&lt;br /&gt;/dev/mapper/vg_sgnhv-lv_data&lt;br /&gt;                      493G  103G  365G  22% /data&lt;br /&gt;&lt;span style="background-color: yellow;"&gt;/dev/mapper/crypt_dev_mapper&lt;br /&gt;                     1006M   18M  938M   2% /mnt&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;[root@sgnhv ~]# dd if=/dev/urandom of=/mnt/somedata bs=1M count=10&lt;br /&gt;10+0 records in&lt;br /&gt;10+0 records out&lt;br /&gt;10485760 bytes (10 MB) copied, 1.23517 s, 8.5 MB/s&lt;br /&gt;&lt;br /&gt;[root@sgnhv ~]# ls /mnt/&lt;br /&gt;lost+found  somedata&lt;br /&gt;&lt;br /&gt;[root@sgnhv ~]# df -h&lt;br /&gt;Filesystem            Size  Used Avail Use% Mounted on&lt;br /&gt;/dev/mapper/vg_sgnhv-lv_root&lt;br /&gt;                       50G  7.5G   40G  16% /&lt;br /&gt;tmpfs                 1.9G  388K  1.9G   1% /dev/shm&lt;br /&gt;/dev/md127p1          485M  128M  332M  28% /boot&lt;br /&gt;/dev/mapper/vg_sgnhv-lv_data&lt;br /&gt;                      493G  103G  365G  22% /data&lt;br /&gt;&lt;span style="background-color: yellow;"&gt;/dev/mapper/crypt_dev_mapper&lt;br /&gt;                     1006M   28M  928M   3% /mnt&lt;/span&gt;&lt;br /&gt;[root@sgnhv ~]# umount /mnt/&lt;/pre&gt;&lt;br /&gt;Once you've accessed the data that you needed, you can umount and close the dm-crypt device mapper, which will remove the 'crypt_dev_mapper' device. The 'luksClose' extension closes the interface with the device mapper.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# &lt;span style="background-color: lime;"&gt;cryptsetup luksClose crypt_dev_mapper&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;Now accessing the encrypted device using the 'luksOpen' and 'luksClose' extension is fine. In fact, a simple bash or perl script could be written to help facilitate the process. Every time you use the 'luksOpen' extension, LUKS will ask you for the passphrase that you used initially set up.&lt;br /&gt;&lt;br /&gt;However, if you want your system to initialize the encrypted file system and even mount it at boot, you will need to follow a few extra steps. &lt;br /&gt;&lt;br /&gt;The first option is simply adding the dm-crypt device mapper name and the logical volume path to the /etc/crypttab file. This will create the dm-crypt mapper on boot. This will also require that you be present at the console when the computer boots up, as the computer will ask you for the LUKS passphrase before it maps the dm-crypt mapper. If you're not available at the console, then the boot will hang until you enter the passphrase.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# vim /etc/crypttab &lt;br /&gt;[root@sgnhv ~]# cat /etc/crypttab &lt;br /&gt;crypt_dev_mapper /dev/vg_sgnhv/lv_crypto&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;There is however, an option of using a key file. To make a key file, you must create a file with some random data. Then you can use the 'luksAddKey' extension to create the key.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# &lt;span style="background-color: lime;"&gt;dd if=/dev/urandom of=/etc/crypt_dev_mapper.key bs=1k count=4&lt;/span&gt;&lt;br /&gt;[root@sgnhv ~]# &lt;span style="background-color: lime;"&gt;cryptsetup luksAddKey /dev/vg_sgnhv/lv_crypto /etc/crypt_dev_mapper.key&lt;/span&gt; &lt;br /&gt;Enter any passphrase: &lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;Once the key has been created, you can add the key path in the /etc/crypttab file in the third column. In the crypttab man page, it states the third column is for adding a password. This is incorrect and it will not work if you enter the passphrase there.&lt;br /&gt;&lt;br /&gt;Also, be sure to make the key file only readable to root, otherwise when when init_crypt function initializes and looks at the permissions of the file, it will give you a warning about it being insecure. In some instances, it will refuse to read the file, thus failing to mount the encrypted file system.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# vim /etc/crypttab &lt;br /&gt;[root@sgnhv ~]# cat /etc/crypttab &lt;br /&gt;crypt_dev_mapper /dev/vg_sgnhv/lv_crypto /etc/crypt_dev_mapper.key&lt;br /&gt;[root@sgnhv ~]# chmod 400 /etc/crypt_dev_mapper.key &lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;Once that is setup, you can modify your /etc/fstab to have the file system mounted at boot.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# vim /etc/fstab &lt;br /&gt;[root@sgnhv ~]# tail -1 /etc/fstab &lt;br /&gt;/dev/mapper/crypt_dev_mapper /crypt  ext4 defaults 1 0&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;You can test the functionality out, without rebooting by doing the following:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;[root@sgnhv ~]# cryptsetup luksClose /dev/mapper/crypt_dev_mapper &lt;br /&gt;[root@sgnhv ~]# bash&lt;br /&gt;[root@sgnhv ~]# . /etc/init.d/functions &lt;br /&gt;[root@sgnhv ~]# init_crypto 1&lt;br /&gt;[root@sgnhv ~]# mount -a                                   [  OK  ]&lt;br /&gt;[root@sgnhv ~]# df -h | grep crypt&lt;br /&gt;/dev/mapper/crypt_dev_mapper&lt;br /&gt;                     1006M   18M  938M   2% /crypt&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;As you can see, the encrypted file system was mounted without asking for a passphrase. This configuration will be persistent across reboots.&lt;br /&gt;&lt;br /&gt;Now for a public service announcement. It's actually more food for thought. If you are having your computer mount your encrypted file system on boot without any kind of interaction to authenticate the process, what good does it do to encrypt the file system in the first place?&lt;br /&gt;&lt;br /&gt;For my personal preference, encrypting a notebooks entire filesystem or even a tablet or smart phone should be the course of action. In Linux, that can be done during the install. Otherwise, I'd propose something like &lt;a href="http://www.truecrypt.org/" target="_blank"&gt;TruCrypt&lt;/a&gt;. Other than that, encrypting thumb drives would be handy.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/7019240472980146591/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2012/09/linux-encrypted-filesystems_30.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7019240472980146591'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7019240472980146591'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2012/09/linux-encrypted-filesystems_30.html' title='Linux Encrypted Filesystems'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-8628555431190198936</id><published>2011-10-11T09:39:00.001-05:00</published><updated>2019-04-11T11:09:45.368-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Security'/><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Firewalls'/><title type='text'>ASA Security Contexts</title><content type='html'>&lt;a href="http://www.cisco.com/en/US/products/hw/vpndevc/ps2030/products_configuration_example09186a00808d2b63.shtml"&gt;ASA Security Contexts&lt;/a&gt;&lt;br /&gt;Just a mental note...</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/8628555431190198936/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2011/10/asa-security-contexts_11.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8628555431190198936'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8628555431190198936'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2011/10/asa-security-contexts_11.html' title='ASA Security Contexts'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-6339675541515094257</id><published>2011-10-10T06:13:00.001-05:00</published><updated>2019-04-11T11:09:45.626-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='IOS'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Security'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS Security'/><title type='text'>Cisco Auto Secure</title><content type='html'>I recently found a new command to help with the securing of Cisco Routers. The command is "&lt;a href="http://www.cisco.com/univercd/cc/td/doc/product/software/ios123/123newft/123_1/ftatosec.htm"&gt;auto secure&lt;/a&gt;", which is executed from privileged enable mode. When executed, it asks a few questions and executes several commands based on security best practices for Cisco Routers. Below is an example from a router in my test lab.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;2610-4#sh run&lt;br /&gt;Building configuration...&lt;br /&gt;Current configuration : 750 bytes&lt;br /&gt;!&lt;br /&gt;version 12.3&lt;br /&gt;service timestamps debug datetime msec&lt;br /&gt;service timestamps log datetime msec&lt;br /&gt;no service password-encryption&lt;br /&gt;!&lt;br /&gt;hostname 2610-4&lt;br /&gt;!&lt;br /&gt;boot-start-marker&lt;br /&gt;boot-end-marker&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;no aaa new-model&lt;br /&gt;ip subnet-zero&lt;br /&gt;ip cef&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;interface Ethernet0/0&lt;br /&gt; no ip address&lt;br /&gt; shutdown&lt;br /&gt; half-duplex&lt;br /&gt;!&lt;br /&gt;interface Serial1/0&lt;br /&gt; ip address 10.1.0.1 255.255.255.0&lt;br /&gt; encapsulation ppp&lt;br /&gt; clock rate 128000&lt;br /&gt;!&lt;br /&gt;interface Serial1/1&lt;br /&gt; no ip address&lt;br /&gt; shutdown&lt;br /&gt;!&lt;br /&gt;interface Serial1/2&lt;br /&gt; no ip address&lt;br /&gt; shutdown&lt;br /&gt;!&lt;br /&gt;interface Serial1/3&lt;br /&gt; ip address 10.0.1.2 255.255.255.0&lt;br /&gt;!&lt;br /&gt;router ospf 1&lt;br /&gt; router-id 10.0.1.2&lt;br /&gt; log-adjacency-changes&lt;br /&gt; network 10.0.1.0 0.0.0.255 area 0&lt;br /&gt; network 10.1.0.0 0.0.0.255 area 2&lt;br /&gt;!&lt;br /&gt;ip http server&lt;br /&gt;ip classless&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;line con 0&lt;br /&gt;line aux 0&lt;br /&gt;line vty 0 4&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;end&lt;br /&gt;2610-4#auto&lt;br /&gt;2610-4#auto se&lt;br /&gt;2610-4#auto secure&lt;br /&gt;                --- AutoSecure Configuration ---&lt;br /&gt;*** AutoSecure configuration enhances the security of&lt;br /&gt;the router, but it will not make it absolutely resistant&lt;br /&gt;to all security attacks ***&lt;br /&gt;AutoSecure will modify the configuration of your device.&lt;br /&gt;All configuration changes will be shown. For a detailed&lt;br /&gt;explanation of how the configuration changes enhance security&lt;br /&gt;and any possible side effects, please refer to Cisco.com for&lt;br /&gt;Autosecure documentation.&lt;br /&gt;At any prompt you may enter '?' for help.&lt;br /&gt;Use ctrl-c to abort this session at any prompt.&lt;br /&gt;If this device is being managed by a network management station,&lt;br /&gt;AutoSecure configuration may block network management traffic.&lt;br /&gt;Continue with AutoSecure? [no]: yes&lt;br /&gt;Gathering information about the router for AutoSecure&lt;br /&gt;Is this router connected to internet? [no]:&lt;br /&gt;Securing Management plane services...&lt;br /&gt;Disabling service finger&lt;br /&gt;Disabling service pad&lt;br /&gt;Disabling udp &amp; tcp small servers&lt;br /&gt;Enabling service password encryption&lt;br /&gt;Enabling service tcp-keepalives-in&lt;br /&gt;Enabling service tcp-keepalives-out&lt;br /&gt;Disabling the cdp protocol&lt;br /&gt;Disabling the bootp server&lt;br /&gt;Disabling the http server&lt;br /&gt;Disabling the finger service&lt;br /&gt;Disabling source routing&lt;br /&gt;Disabling gratuitous arp&lt;br /&gt;Here is a sample Security Banner to be shown&lt;br /&gt;at every access to device. Modify it to suit your&lt;br /&gt;enterprise requirements.&lt;br /&gt;Authorized Access only&lt;br /&gt;  This system is the property of So-&amp;-So-Enterprise.&lt;br /&gt;  UNAUTHORIZED ACCESS TO THIS DEVICE IS PROHIBITED.&lt;br /&gt;  You must have explicit permission to access this&lt;br /&gt;  device. All activities performed on this device&lt;br /&gt;  are logged. Any violations of access policy will result&lt;br /&gt;  in disciplinary action.&lt;br /&gt;Enter the security banner {Put the banner between&lt;br /&gt;k and k, where k is any character}:&lt;br /&gt;#&lt;br /&gt;Authorized Access only&lt;br /&gt;  This system is the property of So-&amp;-So-Enterprise.&lt;br /&gt;  UNAUTHORIZED ACCESS TO THIS DEVICE IS PROHIBITED.&lt;br /&gt;  You must have explicit permission to access this&lt;br /&gt;  device. All activities performed on this device&lt;br /&gt;  are logged. Any violations of access policy will result&lt;br /&gt;  in disciplinary action.&lt;br /&gt;#&lt;br /&gt;Enable secret is either not configured or&lt;br /&gt; is the same as the enable password&lt;br /&gt;Enter the new enable secret:&lt;br /&gt;Confirm the enable secret :&lt;br /&gt;Enable password is not configured or its length&lt;br /&gt;is less than minimum no. of characters configured&lt;br /&gt;Enter the new enable password:&lt;br /&gt;Confirm the enable password:&lt;br /&gt;Configuration of local user database&lt;br /&gt;Enter the username: james&lt;br /&gt;Enter the password:&lt;br /&gt;Confirm the password:&lt;br /&gt;Configuring AAA local authentication&lt;br /&gt;Configuring Console, Aux and VTY lines for&lt;br /&gt;local authentication, exec-timeout, and transport&lt;br /&gt;Configuring interface specific AutoSecure services&lt;br /&gt;Disabling the following ip services on all interfaces:&lt;br /&gt; no ip redirects&lt;br /&gt; no ip proxy-arp&lt;br /&gt; no ip unreachables&lt;br /&gt; no ip directed-broadcast&lt;br /&gt; no ip mask-reply&lt;br /&gt;Securing Forwarding plane services...&lt;br /&gt;Enabling CEF (This might impact the memory requirements for your platform)&lt;br /&gt;This is the configuration generated:&lt;br /&gt;no service finger&lt;br /&gt;no service pad&lt;br /&gt;no service udp-small-servers&lt;br /&gt;no service tcp-small-servers&lt;br /&gt;service password-encryption&lt;br /&gt;service tcp-keepalives-in&lt;br /&gt;service tcp-keepalives-out&lt;br /&gt;no cdp run&lt;br /&gt;no ip bootp server&lt;br /&gt;no ip http server&lt;br /&gt;no ip finger&lt;br /&gt;no ip source-route&lt;br /&gt;no ip gratuitous-arps&lt;br /&gt;banner #&lt;br /&gt;Authorized Access only&lt;br /&gt;  This system is the property of So-&amp;-So-Enterprise.&lt;br /&gt;  UNAUTHORIZED ACCESS TO THIS DEVICE IS PROHIBITED.&lt;br /&gt;  You must have explicit permission to access this&lt;br /&gt;  device. All activities performed on this device&lt;br /&gt;  are logged. Any violations of access policy will result&lt;br /&gt;  in disciplinary action.&lt;br /&gt;#&lt;br /&gt;security passwords min-length 6&lt;br /&gt;security authentication failure rate 10 log&lt;br /&gt;enable secret 5 $1$U3Md$NLdPY5lpIOUf8Ht9L5omi/&lt;br /&gt;enable password 7 00141215170A5955&lt;br /&gt;username james password 7 082B4D5900405D40&lt;br /&gt;aaa new-model&lt;br /&gt;aaa authentication login local_auth local&lt;br /&gt;line console 0&lt;br /&gt; login authentication local_auth&lt;br /&gt; exec-timeout 5 0&lt;br /&gt; transport output telnet&lt;br /&gt;line aux 0&lt;br /&gt; login authentication local_auth&lt;br /&gt; exec-timeout 10 0&lt;br /&gt; transport output telnet&lt;br /&gt;line vty 0 4&lt;br /&gt; login authentication local_auth&lt;br /&gt; transport input telnet&lt;br /&gt;service timestamps debug datetime localtime show-timezone msec&lt;br /&gt;service timestamps log datetime localtime show-timezone msec&lt;br /&gt;logging facility local2&lt;br /&gt;logging trap debugging&lt;br /&gt;service sequence-numbers&lt;br /&gt;logging console critical&lt;br /&gt;logging buffered&lt;br /&gt;int Ethernet0/0&lt;br /&gt; no ip redirects&lt;br /&gt; no ip proxy-arp&lt;br /&gt; no ip unreachables&lt;br /&gt; no ip directed-broadcast&lt;br /&gt; no ip mask-reply&lt;br /&gt;int Serial1/0&lt;br /&gt; no ip redirects&lt;br /&gt; no ip proxy-arp&lt;br /&gt; no ip unreachables&lt;br /&gt; no ip directed-broadcast&lt;br /&gt; no ip mask-reply&lt;br /&gt;int Serial1/1&lt;br /&gt; no ip redirects&lt;br /&gt; no ip proxy-arp&lt;br /&gt; no ip unreachables&lt;br /&gt; no ip directed-broadcast&lt;br /&gt; no ip mask-reply&lt;br /&gt;int Serial1/2&lt;br /&gt; no ip redirects&lt;br /&gt; no ip proxy-arp&lt;br /&gt; no ip unreachables&lt;br /&gt; no ip directed-broadcast&lt;br /&gt; no ip mask-reply&lt;br /&gt;int Serial1/3&lt;br /&gt; no ip redirects&lt;br /&gt; no ip proxy-arp&lt;br /&gt; no ip unreachables&lt;br /&gt; no ip directed-broadcast&lt;br /&gt; no ip mask-reply&lt;br /&gt;ip cef&lt;br /&gt;!&lt;br /&gt;end&lt;br /&gt;&lt;br /&gt;Apply this configuration to running-config? [yes]: yes&lt;br /&gt;Applying the config generated to running-config&lt;br /&gt;2610-4#&lt;br /&gt;2610-4#sh run&lt;br /&gt;Building configuration...&lt;br /&gt;Current configuration : 2122 bytes&lt;br /&gt;!&lt;br /&gt;version 12.3&lt;br /&gt;no service pad&lt;br /&gt;service tcp-keepalives-in&lt;br /&gt;service tcp-keepalives-out&lt;br /&gt;service timestamps debug datetime msec localtime show-timezone&lt;br /&gt;service timestamps log datetime msec localtime show-timezone&lt;br /&gt;service password-encryption&lt;br /&gt;service sequence-numbers&lt;br /&gt;!&lt;br /&gt;hostname 2610-4&lt;br /&gt;!&lt;br /&gt;boot-start-marker&lt;br /&gt;boot-end-marker&lt;br /&gt;!&lt;br /&gt;security authentication failure rate 10 log&lt;br /&gt;security passwords min-length 6&lt;br /&gt;logging buffered 4096 debugging&lt;br /&gt;logging console critical&lt;br /&gt;enable secret 5 $1$U3Md$NLdPY5lpIOUf8Ht9L5omi/&lt;br /&gt;enable password 7 00141215170A5955&lt;br /&gt;!&lt;br /&gt;aaa new-model&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;aaa authentication login local_auth local&lt;br /&gt;aaa session-id common&lt;br /&gt;ip subnet-zero&lt;br /&gt;no ip source-route&lt;br /&gt;no ip gratuitous-arps&lt;br /&gt;ip cef&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;no ip bootp server&lt;br /&gt;!&lt;br /&gt;username james password 7 082B4D5900405D40&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;interface Ethernet0/0&lt;br /&gt; no ip address&lt;br /&gt; no ip redirects&lt;br /&gt; no ip unreachables&lt;br /&gt; no ip proxy-arp&lt;br /&gt; shutdown&lt;br /&gt; half-duplex&lt;br /&gt;!&lt;br /&gt;interface Serial1/0&lt;br /&gt; ip address 10.1.0.1 255.255.255.0&lt;br /&gt; no ip redirects&lt;br /&gt; no ip unreachables&lt;br /&gt; no ip proxy-arp&lt;br /&gt; encapsulation ppp&lt;br /&gt; clock rate 128000&lt;br /&gt;!&lt;br /&gt;interface Serial1/1&lt;br /&gt; no ip address&lt;br /&gt; no ip redirects&lt;br /&gt; no ip unreachables&lt;br /&gt; no ip proxy-arp&lt;br /&gt; shutdown&lt;br /&gt;!&lt;br /&gt;interface Serial1/2&lt;br /&gt; no ip address&lt;br /&gt; no ip redirects&lt;br /&gt; no ip unreachables&lt;br /&gt; no ip proxy-arp&lt;br /&gt; shutdown&lt;br /&gt;!&lt;br /&gt;interface Serial1/3&lt;br /&gt; ip address 10.0.1.2 255.255.255.0&lt;br /&gt; no ip redirects&lt;br /&gt; no ip unreachables&lt;br /&gt; no ip proxy-arp&lt;br /&gt;!&lt;br /&gt;router ospf 1&lt;br /&gt; router-id 10.0.1.2&lt;br /&gt; log-adjacency-changes&lt;br /&gt; network 10.0.1.0 0.0.0.255 area 0&lt;br /&gt; network 10.1.0.0 0.0.0.255 area 2&lt;br /&gt;!&lt;br /&gt;no ip http server&lt;br /&gt;ip classless&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;logging trap debugging&lt;br /&gt;logging facility local2&lt;br /&gt;no cdp run&lt;br /&gt;banner motd ^C&lt;br /&gt;Authorized Access only&lt;br /&gt;  This system is the property of So-&amp;-So-Enterprise.&lt;br /&gt;  UNAUTHORIZED ACCESS TO THIS DEVICE IS PROHIBITED.&lt;br /&gt;  You must have explicit permission to access this&lt;br /&gt;  device. All activities performed on this device&lt;br /&gt;  are logged. Any violations of access policy will result&lt;br /&gt;  in disciplinary action.&lt;br /&gt;^C&lt;br /&gt;!&lt;br /&gt;line con 0&lt;br /&gt; exec-timeout 5 0&lt;br /&gt; login authentication local_auth&lt;br /&gt; transport output telnet&lt;br /&gt;line aux 0&lt;br /&gt; login authentication local_auth&lt;br /&gt; transport output telnet&lt;br /&gt;line vty 0 4&lt;br /&gt; login authentication local_auth&lt;br /&gt; transport input telnet&lt;br /&gt;!&lt;br /&gt;!&lt;br /&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/6339675541515094257/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2011/10/cisco-auto-secure_10.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6339675541515094257'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6339675541515094257'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2011/10/cisco-auto-secure_10.html' title='Cisco Auto Secure'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1476585061739352253</id><published>2011-02-17T10:22:00.001-06:00</published><updated>2019-04-11T11:09:45.889-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='IOS'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Security'/><category scheme='http://www.blogger.com/atom/ns#' term='IOS Security'/><title type='text'>IOS Local Password Security Features</title><content type='html'>I've been studying some of the security features built in to IOS. These mostly have to do with physical security and local password security built into IOS.&lt;br /&gt;&lt;br /&gt;For instance, a feature that I've used for several years is the "service password-encryption" command. This command takes the plain-text passwords located in AUX, CON, TTY ports, and enable password command and encrypts them with a password hash derived from Cisco. It's not perfect, but will do in a pinch. One thing that you will want to do immediately after executing a "service password-encryption" is executing a "show run". The reason behind this is that the passwords won't change from plain-text to encrypted until that happens.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;Router(config)#service ?&lt;br /&gt;....&lt;br /&gt;  password-encryption    Encrypt system passwords&lt;br /&gt;....&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;If you are unable to protect your Cisco equipment physically, the best option is to disable the password recovery function. Be sure to have some other option to do password recoveries however, as you will not be able to do password recoveries from RMON.&lt;br /&gt;&lt;br /&gt;This feature isn't listed as a command when executing a "?" command, but the command exists in IOS 12.3(14)T or newer.&lt;br /&gt;&lt;br /&gt;Check out the documentation: &lt;a href="http://www.cisco.com/en/US/docs/ios/12_3/12_3y/12_3ya8/gtnsvpwd.html"&gt;no service password-recovery&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;Router(config)#no service ?&lt;br /&gt;  alignment              Control alignment correction and logging&lt;br /&gt;  compress-config        Compress the nvram configuration file&lt;br /&gt;  config                 TFTP load config files&lt;br /&gt;  dhcp                   Enable DHCP server and relay agent&lt;br /&gt;  disable-ip-fast-frag   Disable IP particle-based fast fragmentation&lt;br /&gt;  exec-callback          Enable exec callback&lt;br /&gt;  exec-wait              Delay EXEC startup on noisy lines&lt;br /&gt;  finger                 Allow responses to finger requests&lt;br /&gt;  hide-telnet-addresses  Hide destination addresses in telnet command&lt;br /&gt;  linenumber             enable line number banner for each exec&lt;br /&gt;  nagle                  Enable Nagle's congestion control algorithm&lt;br /&gt;  old-slip-prompts       Allow old scripts to operate with slip/ppp&lt;br /&gt;  pad                    Enable PAD commands&lt;br /&gt;  password-encryption    Encrypt system passwords&lt;br /&gt;  prompt                 Enable mode specific prompt&lt;br /&gt;  pt-vty-logging         Log significant VTY-Async events&lt;br /&gt;  sequence-numbers       Stamp logger messages with a sequence number&lt;br /&gt;  slave-log              Enable log capability of slave IPs&lt;br /&gt;  tcp-keepalives-in      Generate keepalives on idle incoming network&lt;br /&gt;                         connections&lt;br /&gt;  tcp-keepalives-out     Generate keepalives on idle outgoing network&lt;br /&gt;                         connections&lt;br /&gt;&lt;br /&gt;Router(config)#no service password-recovery&lt;br /&gt;WARNING:&lt;br /&gt;Executing this command will disable password recovery me&lt;br /&gt;chanism.&lt;br /&gt;Do not execute this command without another plan for&lt;br /&gt;password recovery.&lt;br /&gt;&lt;br /&gt;Are you sure you want to continue? [yes/no]:&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;Other options include encrypting the passwords in MD5 using the "secret" sub command. For instance, "enable secret" and username james secret t0ps3cr37pwd". Unfortunately, the "secret" sub command isn't available on the AUX, TTY, or CON ports.&lt;br /&gt;&lt;br /&gt;You can also set up minimum password lengths and password retry limits.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;Router(config)#security ?&lt;br /&gt;  authentication  Authentication security CLIs&lt;br /&gt;  passwords       Password security CLIs&lt;br /&gt;&lt;br /&gt;Router(config)#security auth&lt;br /&gt;Router(config)#security authentication ?&lt;br /&gt;  failure  Authentication failure logging&lt;br /&gt;&lt;br /&gt;Router(config)#security authentication fa&lt;br /&gt;Router(config)#security authentication failure ?&lt;br /&gt;  rate  Authentication failure threshold rate&lt;br /&gt;&lt;br /&gt;Router(config)#security authentication failure ra&lt;br /&gt;Router(config)#security authentication failure rate ?&lt;br /&gt;  &lt;2-1024&gt;  Authentication failure threshold rate&lt;br /&gt;&lt;br /&gt;Router(config)#security authentication failure rate 5 ?&lt;br /&gt;  log  log a message if the Authentication failures over the last one minute&lt;br /&gt;       equalled this number&lt;br /&gt;&lt;br /&gt;Router(config)#security authentication failure rate 5 l&lt;br /&gt;Router(config)#security authentication failure rate 5 log ?&lt;br /&gt;  &lt;cr&gt;&lt;br /&gt;&lt;br /&gt;Router(config)#security pas&lt;br /&gt;Router(config)#security passwords ?&lt;br /&gt;  min-length  Minimum length of passwords&lt;br /&gt;&lt;br /&gt;Router(config)#security passwords min&lt;br /&gt;Router(config)#security passwords min-length ?&lt;br /&gt;  &lt;0-16&gt;  Minimum length of all user/enable passwords&lt;br /&gt;&lt;br /&gt;Router(config)#security passwords min-length 16 ?&lt;br /&gt;  &lt;cr&gt;&lt;br /&gt;&lt;br /&gt;Router(config)#enable ?&lt;br /&gt;  last-resort  Define enable action if no TACACS servers respond&lt;br /&gt;  password     Assign the privileged level password&lt;br /&gt;  secret       Assign the privileged level secret&lt;br /&gt;  use-tacacs   Use TACACS to check enable passwords&lt;br /&gt;&lt;br /&gt;Router(config)#enable sec&lt;br /&gt;Router(config)#enable secret ?&lt;br /&gt;  0      Specifies an UNENCRYPTED password will follow&lt;br /&gt;  5      Specifies an ENCRYPTED secret will follow&lt;br /&gt;  LINE   The UNENCRYPTED (cleartext) 'enable' secret&lt;br /&gt;  level  Set exec level password&lt;br /&gt;&lt;br /&gt;Router(config)#enable secret&lt;br /&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/1476585061739352253/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2011/02/ios-local-password-security-features_17.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1476585061739352253'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1476585061739352253'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2011/02/ios-local-password-security-features_17.html' title='IOS Local Password Security Features'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1568397428908806956</id><published>2010-12-15T05:43:00.001-06:00</published><updated>2019-04-11T11:09:46.145-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Liberty'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Censorship'/><category scheme='http://www.blogger.com/atom/ns#' term='Net Nuetrality'/><title type='text'>Good bye Internet</title><content type='html'>&lt;a href="http://www.networkworld.com/columnists/2010/121310-bradner.html"&gt;Goodbye Internet, we hardly knew ye?&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Very good article and validates what I've been thinking for a while.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/1568397428908806956/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/12/good-bye-internet_15.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1568397428908806956'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1568397428908806956'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/12/good-bye-internet_15.html' title='Good bye Internet'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-8790159144167167248</id><published>2010-12-15T03:32:00.001-06:00</published><updated>2019-04-11T11:09:46.399-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='IPSEC'/><category scheme='http://www.blogger.com/atom/ns#' term='Online Privacy'/><title type='text'>Backdoor in the openBSD IPSEC Stack?</title><content type='html'>&lt;a href="http://marc.info/?l=openbsd-tech&amp;m=129236621626462&amp;w=2"&gt;Allegations regarding OpenBSD IPSEC&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;If this is true, then wow! It will have major implications on IPSEC implementations around the world as many vendors use the openBSD IPSEC stack. It's hard to believe that in ten years the back door hasn't been found though. How many eyes have been on the code? How many people have modified the code or implemented bug fixes? I'm a little doubtful, but I can't help to be curious if it's true or not.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/8790159144167167248/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/12/backdoor-in-openbsd-ipsec-stack_15.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8790159144167167248'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8790159144167167248'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/12/backdoor-in-openbsd-ipsec-stack_15.html' title='Backdoor in the openBSD IPSEC Stack?'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4864489687936233660</id><published>2010-12-08T10:20:00.001-06:00</published><updated>2019-04-11T11:09:46.655-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Liberty'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Censorship'/><title type='text'>History Repeats itself?</title><content type='html'>Very good article.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.ellsberg.net/archive/public-accuracy-press-release"&gt;Ellsberg: “EVERY attack now made on WikiLeaks and Julian Assange was made against me and the release of the Pentagon Papers at the time.”&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4864489687936233660/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/12/history-repeats-itself_8.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4864489687936233660'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4864489687936233660'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/12/history-repeats-itself_8.html' title='History Repeats itself?'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-624588649765679467</id><published>2010-12-07T10:48:00.001-06:00</published><updated>2019-04-11T11:09:46.913-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Liberty'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Censorship'/><category scheme='http://www.blogger.com/atom/ns#' term='Net Nuetrality'/><title type='text'>The United States vs Personal Freedoms and Liberties</title><content type='html'>I generally do not get overly involved in politics, because I've resigned myself to the fact that it's a completely flawed system and I'm going to find something that I don't agree with anyways. But I've been noticing a very disturbing trend as of late. &lt;br /&gt;&lt;br /&gt;It mostly pertains to the fact that the US Government can not seem to protect confidential data, which is evident by the mass amount of data being tossed around the Internet by WikiLeaks. I am actually in favor of WikiLeaks. I'm thoroughly convinced that the US Government, among other world governments are upset with WikiLeaks because they are airing out their dirty laundry. Why would the US Government be that upset unless they are afraid of unethical and perhaps illegal dealings being exposed? Apparently, the US Government is all for whistle blowing, unless somebody is blowing the whistle on the US Government. Here's a tip for the US Government. If you're afraid of what people will think WHEN the information get's made public, then don't do it. The digital age is making it harder and harder for anybody to keep secrets. I personally think that it's a good thing and will keep people honest; Unless the US Government wants to pull a China and start censoring everything that US citizens can view on the Internet. &lt;br /&gt;&lt;br /&gt;The US Government has also seen itself fit to start hi-jacking domain names on the Internet for offenders that it see's as breaking some sort of law, such as copy right. &lt;br /&gt;&lt;br /&gt;What does the US involvement of actively attacking whistle blowing against the US, domain hi-jacking, and even full body scanners at US airports have in common? It's all about how the US Government is stealing the freedoms and liberties of US citizens little by little, so that no body notices until it's too late. I'm very disturbed by this trend. I'll be posting articles and information from time to time about this subject from now on, because I feel that it's important enough to track closely as well probably start becoming more active in protecting my freedoms and liberties that the government see's fit to take away.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.wired.com/threatlevel/2010/12/shield/"&gt;Lieberman Introduces Anti-WikiLeaks Legislation&lt;/a&gt; Essentially this proposed legislation will make it illegal to "name names". It's a directly conflict with whistle blowing laws and a violation of my freedom of speech. Here's a big FUCK YOU Mr. Lieberman. You were one of the politicians that I had some sort of respect for. So much for that.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.dailymail.co.uk/news/article-1336291/Wikileaks-Julian-Assanges-2-night-stands-spark-worldwide-hunt.html?ito=feeds-newsxml"&gt;The Wikileaks sex files: How two one-night stands sparked a worldwide hunt for Julian Assange&lt;/a&gt; Very good article, but long article short - Assange is a celebrity and a playboy of sorts. He had consensual unprotected sex with two women within days of each other, in Sweden. The women found out about each other and went to the police. Apparently, in Sweden, it can be construed as rape if you have unprotected sex with a person. Who knew? Would this international man hunt have occurred if Assange hadn't been airing out the dirty laundry of international government authorities? My guess is most likely not.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/624588649765679467/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/12/the-united-states-vs-personal-freedoms_7.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/624588649765679467'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/624588649765679467'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/12/the-united-states-vs-personal-freedoms_7.html' title='The United States vs Personal Freedoms and Liberties'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-6715257265714978438</id><published>2010-12-02T13:24:00.001-06:00</published><updated>2019-04-11T11:09:47.170-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Misc.'/><title type='text'>It's been a while...</title><content type='html'>It's been a while since I've updated this. I've since earned a CCNP and have several notes and such that I need to put up here from my studies. I'm also focusing on my professional development and continuing to learn more about advanced technologies in depth.&lt;br /&gt;&lt;br /&gt;Hopefully soon, I'll be able to get my CCNP notes together and placed on the site, as well as notes on my future studies (CCNA Voice, CCNA Security, ASA Specialist, CEH, RHCE, and CCIE R&amp;S). I'm hoping to complete the CCNA Voice, Security, and ASA Specialist this year as well as get back to my project of putting together an open source DMVPN solution - more on that later.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/6715257265714978438/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/12/it-been-while_2.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6715257265714978438'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6715257265714978438'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/12/it-been-while_2.html' title='It&amp;#39;s been a while...'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-7549877579994122110</id><published>2010-08-08T12:18:00.001-05:00</published><updated>2019-04-11T11:09:47.426-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='LAN Switching'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNP Study Notes'/><category scheme='http://www.blogger.com/atom/ns#' term='Layer 3 Switching'/><title type='text'>Layer 3 LAN Switching</title><content type='html'>As enterprise LANs grow, there becomes a need to break up LANs with routers. Traditionally, routers have performed the layer 3 functionality, but in today's high-speed LANs there is a need to be able to forward packets much quicker than the traditional routers have been able to. That is where layer 3 switches come into play.&lt;br /&gt;&lt;br /&gt;Layer 3 switches can turn on routing by executing the "ip routing" command from the global configuration mode. From there you can create routed interfaces either by using vlan interfaces, which is the likely interface at the distribution layer or on physical Ethernet interfaces by executing the "no switchport" command, then assigning the physical interface an IP Address.&lt;br /&gt;&lt;br /&gt;With large networks, topology-based switches may still be too slow. Then you will need to utilize hardwre based layer 3 switching. In hardware based layer 3 switching, the switch can utilize Policy Feature Cards (PFC) and Distributed Feature Cards (DFC) to route traffic at the hardware level. The hardware will do a packet rewrite on the egress port and alter the following fields:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Layer 2 (MAC) destination address&lt;/li&gt;&lt;li&gt;Layer 2 (MAC) source address&lt;/li&gt;&lt;li&gt;Layer 3 IP TTL&lt;/li&gt;&lt;li&gt;Layer 3 checksum&lt;/li&gt;&lt;li&gt;Layer 2 (MAC) checksum, aka FCS&lt;/li&gt;&lt;/ul&gt;Any packets that can't be handled by the hardware will then be sent to the switches MSFC (Multi-Layer Switch Feature Card), which is a software based router.&lt;br /&gt;&lt;br /&gt;The switch that uses the PFC, DFC, and MSFC is the Catalyst 6500 switch. Hardware layer 3 switching does not replace routing and routing protocols. It provides IP unicast layer 3 switching locally on each module.&lt;br /&gt;&lt;br /&gt;Chassis based switches utilize a centralized forwarding architecture, which enhances LAN performance and can become even better with the use of distributed forwarding as an upgrade.&lt;br /&gt;&lt;br /&gt;When CEF (Cisco Express Forwarding) is used a chassis based switch can forward up to 30 mpps per system or when using a dCEF daughter card can deliver 48 mpps sustained throughput per slot.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/7549877579994122110/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/08/layer-3-lan-switching_8.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7549877579994122110'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/7549877579994122110'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/08/layer-3-lan-switching_8.html' title='Layer 3 LAN Switching'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4097034697348740392</id><published>2010-08-08T11:03:00.001-05:00</published><updated>2019-04-11T11:09:47.686-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='GLBP'/><category scheme='http://www.blogger.com/atom/ns#' term='High Availability'/><category scheme='http://www.blogger.com/atom/ns#' term='LAN Switching'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNP Study Notes'/><category scheme='http://www.blogger.com/atom/ns#' term='HSRP'/><category scheme='http://www.blogger.com/atom/ns#' term='Layer 3 Switching'/><category scheme='http://www.blogger.com/atom/ns#' term='VRRP'/><title type='text'>LAN Switching Layer 3 Redundancy Protocols</title><content type='html'>&lt;b&gt;HSRP&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.cisco.com/en/US/tech/tk648/tk362/tk321/tsd_technology_support_sub-protocol_home.html"&gt;Hot Standby Routing Protocol&lt;/a&gt;, or HSRP, is a Cisco proprietary redundancy routing protocol. It's typically used in the distribution layer of a LAN. It works is by having two or more layer three devices that communicate with each other via multicast address 224.0.0.2 to UDP port 1985. In a typical configuration there will be a active router and a standby router. Each router has it's own physical IP Address and they share a virtual IP Address, which hosts on the LAN use as their default gateway. If the standby router detects that the active router is unavailable, then it will assume the active router role by assigning itself the virtual IP Address. There can only be a single active router in an HSRP group, but there can be multiple standby routers.&lt;br /&gt;&lt;br /&gt;HSRP has an election process to determine which router is used as the active router. The router configured with the highest HSRP priority is determined to be the active router. In the event of multiple routers with identical priorities, then the router with the highest IP Address wins the active router election.&lt;br /&gt;&lt;br /&gt;The preempt option in HSRP enables a router to resume the forwarding router role.&lt;br /&gt;&lt;br /&gt;The hello default is 3 seconds and the hold time default is 10 seconds. When changing the default hello and hold times, the hold time would be at least three times the value of the hello timer.&lt;br /&gt;&lt;br /&gt;HSRP is defined by &lt;span&gt;&lt;/span&gt;&lt;a href="http://www.blogger.com/"&gt;RFC 2281&lt;span&gt;&lt;/span&gt;&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Active Router Interface Config&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;interface FastEthernet0/0&lt;br /&gt; ip address 10.10.10.3 255.255.255.0&lt;br /&gt; duplex auto&lt;br /&gt; speed auto&lt;br /&gt; standby 1 ip 10.10.10.1&lt;br /&gt; standby 1 priority 150&lt;br /&gt; standby 1 preempt&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;Active Router show output&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;host-vlan3#show standby&lt;br /&gt;FastEthernet0/0 - Group 1&lt;br /&gt;  State is Active&lt;br /&gt;    9 state changes, last state change 00:13:44&lt;br /&gt;  Virtual IP address is 10.10.10.1&lt;br /&gt;  Active virtual MAC address is 0000.0c07.ac01&lt;br /&gt;    Local virtual MAC address is 0000.0c07.ac01 (default)&lt;br /&gt;  Hello time 3 sec, hold time 10 sec&lt;br /&gt;    Next hello sent in 0.520 secs&lt;br /&gt;  Preemption enabled&lt;br /&gt;  Active router is local&lt;br /&gt;  Standby router is 10.10.10.2, priority 120 (expires in 8.253 sec)&lt;br /&gt;  Priority 150 (configured 150)&lt;br /&gt;  IP redundancy name is "hsrp-Fa0/0-1" (default)&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;Standby Router Interface Config&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;interface FastEthernet0/0&lt;br /&gt; ip address 10.10.10.2 255.255.255.0&lt;br /&gt; duplex auto&lt;br /&gt; speed auto&lt;br /&gt; standby 1 ip 10.10.10.1&lt;br /&gt; standby 1 priority 120&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;Standby Router show output&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;host-vlan2#show standby&lt;br /&gt;FastEthernet0/0 - Group 1&lt;br /&gt;  State is Standby&lt;br /&gt;    10 state changes, last state change 00:12:07&lt;br /&gt;  Virtual IP address is 10.10.10.1&lt;br /&gt;  Active virtual MAC address is 0000.0c07.ac01&lt;br /&gt;    Local virtual MAC address is 0000.0c07.ac01 (default)&lt;br /&gt;  Hello time 3 sec, hold time 10 sec&lt;br /&gt;    Next hello sent in 1.476 secs&lt;br /&gt;  Preemption disabled&lt;br /&gt;  Active router is 10.10.10.3, priority 150 (expires in 7.712 sec)&lt;br /&gt;  Standby router is local&lt;br /&gt;  Priority 120 (configured 120)&lt;br /&gt;  IP redundancy name is "hsrp-Fa0/0-1" (default)&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;Output from sh ip arp&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;host-vlan2#show ip arp&lt;br /&gt;Protocol  Address          Age (min)  Hardware Addr   Type   Interface&lt;br /&gt;Internet  10.10.10.2              -   000a.b7e9.8180  ARPA   FastEthernet0/0&lt;br /&gt;Internet  10.10.10.3             38   000f.8f6d.ab60  ARPA   FastEthernet0/0&lt;br /&gt;Internet  10.10.10.1              0   0000.0c07.ac01  ARPA   FastEthernet0/0&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;In some instances, your routers participating in an HSRP group connect to different devices on their uplinks. If HSRP doesn't have any method of tracking when there is an uplink failure, then HSRP doesn't do a very good job of maintaining an active connection to external resources. In those cases, you should implement interface tracking in HSRP. This is done using the "&lt;i&gt;standby 1 track &lt;/i&gt;&lt;br /&gt;&lt;pre&gt;&lt;i&gt;uplink interface&lt;/i&gt;&lt;/pre&gt;&lt;pre&gt;&lt;i&gt;priority decrement&lt;/i&gt;&lt;/pre&gt;&lt;i&gt;&lt;/i&gt;" command on the HSRP interface.&lt;br /&gt;&lt;br /&gt;The "&lt;br /&gt;&lt;pre&gt;uplink interface&lt;/pre&gt;" is the interface on your router that you want HSRP to monitor it's status. This interface would connect to the upstream device and probably isn't participating in HSRP directly. It's important to want to track the status of the interface so that HSRP can fail over to the other router in the event of a uplink failure.&lt;br /&gt;&lt;br /&gt;The "&lt;br /&gt;&lt;pre&gt;priority decrement&lt;/pre&gt;" is how much HSRP should automatically decrement it's priority to make the interface go into standby. This value should lower the value enough to no longer be the highest priority in the HSRP group.                                        &lt;br /&gt;&lt;br /&gt;Here is the debug output from the standby router going into active mode, as the primary active router becomes unavailable (via the "shut" command on the interface) and then becomes the standby router again.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;host-vlan2#debug standby&lt;br /&gt;HSRP debugging is on&lt;br /&gt;*Mar  5 22:12:57.990: HSRP: Fa0/0 Grp 1 Hello  in  10.10.10.3 Active  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:12:58.186: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Standby pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:00.990: HSRP: Fa0/0 Grp 1 Hello  in  10.10.10.3 Active  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:01.186: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Standby pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:03.994: HSRP: Fa0/0 Grp 1 Hello  in  10.10.10.3 Active  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:04.186: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Standby pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:06.994: HSRP: Fa0/0 Grp 1 Hello  in  10.10.10.3 Active  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:07.186: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Standby pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:10.186: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Standby pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:13.186: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Standby pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:16.186: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Standby pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:16.994: HSRP: Fa0/0 Grp 1 Standby: c/Active timer expired (10.10.10.3)&lt;br /&gt;*Mar  5 22:13:16.994: HSRP: Fa0/0 Grp 1 Active router is local, was 10.10.10.3&lt;br /&gt;*Mar  5 22:13:16.994: HSRP: Fa0/0 Grp 1 Standby router is unknown, was local&lt;br /&gt;*Mar  5 22:13:16.994: HSRP: Fa0/0 Grp 1 Standby -&gt; Active&lt;br /&gt;*Mar  5 22:13:16.994: %HSRP-6-STATECHANGE: FastEthernet0/0 Grp 1 state Standby -&gt; Active&lt;br /&gt;*Mar  5 22:13:16.994: HSRP: Fa0/0 Grp 1 Redundancy "hsrp-Fa0/0-1" state Standby -&gt; Active&lt;br /&gt;*Mar  5 22:13:16.994: HSRP: Fa0/0 Redirect adv out, Active, active 1 passive 1&lt;br /&gt;*Mar  5 22:13:16.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:19.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:19.998: HSRP: Fa0/0 Grp 1 Redundancy group hsrp-Fa0/0-1 state Active -&gt; Active&lt;br /&gt;*Mar  5 22:13:22.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:22.998: HSRP: Fa0/0 Grp 1 Redundancy group hsrp-Fa0/0-1 state Active -&gt; Active&lt;br /&gt;*Mar  5 22:13:25.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:28.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:31.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:34.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:37.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:40.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:43.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:46.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:49.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:51.798: HSRP: Fa0/0 REDIRECT adv in, Passive, active 0, passive 1, from 10.10.10.3&lt;br /&gt;*Mar  5 22:13:52.998: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Active  pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:53.002: HSRP: Fa0/0 REDIRECT adv in, Active, active 1, passive 2, from 10.10.10.3&lt;br /&gt;*Mar  5 22:13:53.002: HSRP: Fa0/0 Grp 1 Coup   in  10.10.10.3 Listen  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:53.002: HSRP: Fa0/0 Grp 1 Active: j/Coup rcvd from higher pri router (150/10.10.10.3)&lt;br /&gt;*Mar  5 22:13:53.002: HSRP: Fa0/0 Grp 1 Active router is 10.10.10.3, was local&lt;br /&gt;*Mar  5 22:13:53.002: HSRP: Fa0/0 Grp 1 Active -&gt; Speak&lt;br /&gt;*Mar  5 22:13:53.002: %HSRP-6-STATECHANGE: FastEthernet0/0 Grp 1 state Active -&gt; Speak&lt;br /&gt;*Mar  5 22:13:53.002: HSRP: Fa0/0 Grp 1 Redundancy "hsrp-Fa0/0-1" state Active -&gt; Speak&lt;br /&gt;*Mar  5 22:13:53.006: HSRP: Fa0/0 Redirect adv out, Passive, active 0 passive 1&lt;br /&gt;*Mar  5 22:13:53.006: HSRP: Fa0/0 API MAC address update&lt;br /&gt;*Mar  5 22:13:53.006: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Speak   pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:53.010: HSRP: Fa0/0 REDIRECT adv in, Active, active 1, passive 1, from 10.10.10.3&lt;br /&gt;*Mar  5 22:13:53.010: HSRP: Fa0/0 Grp 1 Hello  in  10.10.10.3 Active  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:55.998: HSRP: Fa0/0 Grp 1 Hello  in  10.10.10.3 Active  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:56.006: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Speak   pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:58.998: HSRP: Fa0/0 Grp 1 Hello  in  10.10.10.3 Active  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:13:59.006: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Speak   pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:14:02.002: HSRP: Fa0/0 Grp 1 Hello  in  10.10.10.3 Active  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:14:02.006: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Speak   pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:14:03.002: HSRP: Fa0/0 Grp 1 Speak: d/Standby timer expired (unknown)&lt;br /&gt;*Mar  5 22:14:03.002: HSRP: Fa0/0 Grp 1 Standby router is local&lt;br /&gt;*Mar  5 22:14:03.002: HSRP: Fa0/0 Grp 1 Speak -&gt; Standby&lt;br /&gt;*Mar  5 22:14:03.002: HSRP: Fa0/0 Grp 1 Redundancy "hsrp-Fa0/0-1" state Speak -&gt; Standby&lt;br /&gt;*Mar  5 22:14:03.002: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Standby pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:14:05.002: HSRP: Fa0/0 Grp 1 Hello  in  10.10.10.3 Active  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:14:06.002: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Standby pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:14:08.002: HSRP: Fa0/0 Grp 1 Hello  in  10.10.10.3 Active  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:14:09.002: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Standby pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:14:11.002: HSRP: Fa0/0 Grp 1 Hello  in  10.10.10.3 Active  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:14:12.002: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Standby pri 120 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:14:14.006: HSRP: Fa0/0 Grp 1 Hello  in  10.10.10.3 Active  pri 150 vIP 10.10.10.1&lt;br /&gt;*Mar  5 22:14:15.002: HSRP: Fa0/0 Grp 1 Hello  out 10.10.10.2 Standby pri 120 vIP 10.10.10.1&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;VRRP&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.cisco.com/en/US/docs/ios/12_0st/12_0st18/feature/guide/st_vrrpx.html"&gt;Virtual Routing Redundancy Protocol&lt;/a&gt;, or VRRP, serves the same purpose as HSRP, with many of the same features, but is an IEEE standard.&lt;br /&gt;&lt;br /&gt;VRRP is defined by &lt;a href="http://www.faqs.org/rfcs/rfc2338.html"&gt;RFC 2338&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Master VRRP Router Interface Config&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;interface FastEthernet0/0&lt;br /&gt; ip address 10.10.10.3 255.255.255.0&lt;br /&gt; duplex auto&lt;br /&gt; speed auto&lt;br /&gt; vrrp 1 ip 10.10.10.1&lt;br /&gt; vrrp 1 priority 150&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;Master VRRP Router sh output&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;host-vlan3#sh vrrp&lt;br /&gt;FastEthernet0/0 - Group 1&lt;br /&gt;  State is Master&lt;br /&gt;  Virtual IP address is 10.10.10.1&lt;br /&gt;  Virtual MAC address is 0000.5e00.0101&lt;br /&gt;  Advertisement interval is 1.000 sec&lt;br /&gt;  Preemption is enabled&lt;br /&gt;    min delay is 0.000 sec&lt;br /&gt; Priority is 150&lt;br /&gt;  Master Router is 10.10.10.3 (local), priority is 150&lt;br /&gt;  Master Advertisement interval is 1.000 sec&lt;br /&gt;  Master Down interval is 3.414 sec&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;Backup VRRP Router Interface config&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;interface FastEthernet0/0&lt;br /&gt; ip address 10.10.10.2 255.255.255.0&lt;br /&gt; duplex auto&lt;br /&gt; speed auto&lt;br /&gt; vrrp 1 ip 10.10.10.1&lt;br /&gt; vrrp 1 priority 120&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;Backup VRRP Router sh output&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;host-vlan2#sh vrrp&lt;br /&gt;FastEthernet0/0 - Group 1&lt;br /&gt;  State is Backup&lt;br /&gt;  Virtual IP address is 10.10.10.1&lt;br /&gt;  Virtual MAC address is 0000.5e00.0101&lt;br /&gt;  Advertisement interval is 1.000 sec&lt;br /&gt;  Preemption enabled&lt;br /&gt;  Priority is 120&lt;br /&gt;  Master Router is 10.10.10.3, priority is 150&lt;br /&gt;  Master Advertisement interval is 1.000 sec&lt;br /&gt;  Master Down interval is 3.531 sec (expires in 2.683 sec)&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;Here is the output of the backup vrrp router turning into a master and then backup again.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;host-vlan2#debug vrrp&lt;br /&gt;VRRP debugging is on&lt;br /&gt;*Mar  5 22:27:32.954: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:27:32.954: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:27:33.958: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:27:33.958: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:27:34.958: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:27:34.958: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:27:35.958: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:27:35.962: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:27:36.962: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:27:36.962: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:27:37.962: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:27:37.962: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:27:38.966: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:27:38.966: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:27:39.966: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:27:39.966: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:27:40.970: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:27:40.970: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:27:44.502: VRRP: Grp 1 Event - Master down timer expired&lt;br /&gt;*Mar  5 22:27:44.502: %VRRP-6-STATECHANGE: Fa0/0 Grp 1 state Backup -&gt; Master&lt;br /&gt;*Mar  5 22:27:44.502: VRRP: tbridge_smf_update failed&lt;br /&gt;*Mar  5 22:27:44.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:45.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:46.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:47.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:48.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:49.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:50.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:51.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:52.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:53.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:54.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:55.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:56.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:57.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:58.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:27:59.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:28:00.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:28:01.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:28:02.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:28:03.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:28:04.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:28:05.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:28:06.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:28:07.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:28:08.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:28:09.502: VRRP: Grp 1 sending Advertisement checksum 52F1&lt;br /&gt;*Mar  5 22:28:09.970: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:28:09.970: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:28:09.970: %VRRP-6-STATECHANGE: Fa0/0 Grp 1 state Master -&gt; Backup&lt;br /&gt;*Mar  5 22:28:10.970: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:28:10.970: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:28:11.974: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:28:11.974: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:28:12.974: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:28:12.974: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:28:13.974: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:28:13.974: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;*Mar  5 22:28:14.978: VRRP: Grp 1 Advertisement priority 150, ipaddr 10.10.10.3&lt;br /&gt;*Mar  5 22:28:14.978: VRRP: Grp 1 Event - Advert higher or equal priority&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;It doesn't appear that VRRP has the ability to perform interface tracking, but could be an option to use in multi-vendor networks.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;GLBP&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.cisco.com/en/US/docs/ios/12_2t/12_2t15/feature/guide/ft_glbp.html"&gt;Gateway Load Balancing Protocol&lt;/a&gt;, or GLBP, is another Cisco proprietary protocol. It was created with the idea of better utilizing the network resources while still performing the same functionality as HSSRP and VRRP. GLBP performs automatic selection and simultaneous use of multiple available gateways as well as automatic failover in the event of a failure. With HSRP and VRRP, the load balancing and attempt to fully utilize available network resources is a manual process and be burdensome on the network administrator.&lt;br /&gt;&lt;br /&gt;GLBP communicates via multicast address 224.0.0.102 to UDP 3222. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Active Router Interface Config&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;interface FastEthernet0/0&lt;br /&gt; ip address 10.10.10.3 255.255.255.0&lt;br /&gt; duplex auto&lt;br /&gt; speed auto&lt;br /&gt; glbp 1 ip 10.10.10.1&lt;br /&gt; glbp 1 priority 150&lt;br /&gt; glbp 1 preempt&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;Active Router sh output&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;host-vlan3#sh glbp&lt;br /&gt;FastEthernet0/0 - Group 1&lt;br /&gt;  State is Active&lt;br /&gt;    2 state changes, last state change 00:08:28&lt;br /&gt;  Virtual IP address is 10.10.10.1&lt;br /&gt;  Hello time 3 sec, hold time 10 sec&lt;br /&gt;    Next hello sent in 1.453 secs&lt;br /&gt;  Redirect time 600 sec, forwarder time-out 14400 sec&lt;br /&gt;  Preemption disabled&lt;br /&gt;  Active is local&lt;br /&gt;  Standby is 10.10.10.2, priority 120 (expires in 7.664 sec)&lt;br /&gt;  Priority 150 (configured)&lt;br /&gt;  Weighting 100 (default 100), thresholds: lower 1, upper 100&lt;br /&gt;  Load balancing: round-robin&lt;br /&gt;  There are 2 forwarders (1 active)&lt;br /&gt;  Forwarder 1&lt;br /&gt;    State is Active&lt;br /&gt;      1 state change, last state change 00:08:18&lt;br /&gt;    MAC address is 0007.b400.0101 (default)&lt;br /&gt;    Owner ID is 000f.8f6d.ab60&lt;br /&gt;    Redirection enabled&lt;br /&gt;    Preemption enabled, min delay 30 sec&lt;br /&gt;    Active is local, weighting 100&lt;br /&gt;  Forwarder 2&lt;br /&gt;    State is Listen&lt;br /&gt;    MAC address is 0007.b400.0102 (learnt)&lt;br /&gt;    Owner ID is 000a.b7e9.8180&lt;br /&gt;    Redirection enabled, 599.343 sec remaining (maximum 600 sec)&lt;br /&gt;    Time to live: 14399.343 sec (maximum 14400 sec)&lt;br /&gt;    Preemption enabled, min delay 30 sec&lt;br /&gt;    Active is 10.10.10.2 (primary), weighting 100 (expires in 9.343 sec)&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;Active Router &lt;i&gt;sh ip arp&lt;/i&gt; output&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;host-vlan3#sh ip arp&lt;br /&gt;Protocol  Address          Age (min)  Hardware Addr   Type   Interface&lt;br /&gt;Internet  10.10.10.2              8   000a.b7e9.8180  ARPA   FastEthernet0/0&lt;br /&gt;Internet  10.10.10.3              -   000f.8f6d.ab60  ARPA   FastEthernet0/0&lt;br /&gt;Internet  10.10.10.1              -   0007.b400.0101  ARPA   FastEthernet0/0&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;Standby Router Interface Config&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;interface FastEthernet0/0&lt;br /&gt; ip address 10.10.10.2 255.255.255.0&lt;br /&gt; duplex auto&lt;br /&gt; speed auto&lt;br /&gt; glbp 1 ip 10.10.10.1&lt;br /&gt; glbp 1 priority 120&lt;br /&gt;end&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;Standby Router sh output&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;host-vlan2#sh glbp&lt;br /&gt;FastEthernet0/0 - Group 1&lt;br /&gt;  State is Standby&lt;br /&gt;    1 state change, last state change 00:04:17&lt;br /&gt;  Virtual IP address is 10.10.10.1&lt;br /&gt;  Hello time 3 sec, hold time 10 sec&lt;br /&gt;    Next hello sent in 0.836 secs&lt;br /&gt;  Redirect time 600 sec, forwarder time-out 14400 sec&lt;br /&gt;  Preemption disabled&lt;br /&gt;  Active is 10.10.10.3, priority 150 (expires in 8.456 sec)&lt;br /&gt;  Standby is local&lt;br /&gt;  Priority 120 (configured)&lt;br /&gt;  Weighting 100 (default 100), thresholds: lower 1, upper 100&lt;br /&gt;  Load balancing: round-robin&lt;br /&gt;  There are 2 forwarders (1 active)&lt;br /&gt;  Forwarder 1&lt;br /&gt;    State is Listen&lt;br /&gt;    MAC address is 0007.b400.0101 (learnt)&lt;br /&gt;    Owner ID is 000f.8f6d.ab60&lt;br /&gt;    Time to live: 14398.452 sec (maximum 14400 sec)&lt;br /&gt;    Preemption enabled, min delay 30 sec&lt;br /&gt;    Active is 10.10.10.3 (primary), weighting 100 (expires in 8.452 sec)&lt;br /&gt;  Forwarder 2&lt;br /&gt;    State is Active&lt;br /&gt;      1 state change, last state change 00:04:22&lt;br /&gt;    MAC address is 0007.b400.0102 (default)&lt;br /&gt;    Owner ID is 000a.b7e9.8180&lt;br /&gt;    Preemption enabled, min delay 30 sec&lt;br /&gt;    Active is local, weighting 100&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;Standby Router &lt;i&gt;sh ip arp&lt;/i&gt; output&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;host-vlan2#sh ip arp&lt;br /&gt;Protocol  Address          Age (min)  Hardware Addr   Type   Interface&lt;br /&gt;Internet  10.10.10.2              -   000a.b7e9.8180  ARPA   FastEthernet0/0&lt;br /&gt;Internet  10.10.10.3              5   000f.8f6d.ab60  ARPA   FastEthernet0/0&lt;br /&gt;Internet  10.10.10.1              -   0007.b400.0102  ARPA   FastEthernet0/0&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;Here is the output from a debug from the standby router. As you can see GLBP load balances by continuously moving the virutal IP Address from one router to the other. You can also see where the standby router becomes active in a failure, then becomes standby again.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;host-vlan2#debug glbp&lt;br /&gt;GLBP debugging is on&lt;br /&gt;*Mar  5 22:57:22.550: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 167 vMAC 0007.b400.0101&lt;br /&gt;*Mar  5 22:57:24.630: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:57:25.550: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 167 vMAC 0007.b400.0101&lt;br /&gt;*Mar  5 22:57:27.630: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:57:28.550: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 167 vMAC 0007.b400.0101&lt;br /&gt;*Mar  5 22:57:30.630: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:57:33.630: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:57:36.630: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:57:38.554: GLBP: Fa0/0 1 Standby: g/Active timer expired (10.10.10.3)&lt;br /&gt;*Mar  5 22:57:38.554: GLBP: Fa0/0 1 Active router IP is local, was 10.10.10.3&lt;br /&gt;*Mar  5 22:57:38.554: GLBP: Fa0/0 1 Standby router is unknown, was local&lt;br /&gt;*Mar  5 22:57:38.554: GLBP: Fa0/0 1 Standby -&gt; Active&lt;br /&gt;*Mar  5 22:57:38.554: %GLBP-6-STATECHANGE: FastEthernet0/0 Grp 1 state Standby -&gt; Active&lt;br /&gt;*Mar  5 22:57:38.554: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Active  pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:57:38.554: GLBP: Fa0/0 1.1 Listen: g/Active timer expired&lt;br /&gt;*Mar  5 22:57:38.558: GLBP: Fa0/0 1.1 Listen -&gt; Active&lt;br /&gt;*Mar  5 22:57:38.558: %GLBP-6-FWDSTATECHANGE: FastEthernet0/0 Grp 1 Fwd 1 state Listen -&gt; Active&lt;br /&gt;*Mar  5 22:57:38.558: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VF 1 Active  pri 135 vMAC 0007.b400.0101&lt;br /&gt;*Mar  5 22:57:41.554: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Active  pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:57:44.554: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Active  pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:57:47.554: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Active  pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:57:50.554: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Active  pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:57:53.554: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Active  pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:57:56.554: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Active  pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:57:59.554: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Active  pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:02.558: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Active  pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:05.562: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Active  pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:08.562: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Active  pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:08.562: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Speak   pri 150 vIP 10.10.10.1 hello 3000, hold 10000&lt;br /&gt;*Mar  5 22:58:11.562: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Active  pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:11.562: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Speak   pri 150 vIP 10.10.10.1 hello 3000, hold 10000&lt;br /&gt;*Mar  5 22:58:11.566: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000&lt;br /&gt;*Mar  5 22:58:11.566: GLBP: Fa0/0 1 Active router IP is 10.10.10.3, was local&lt;br /&gt;*Mar  5 22:58:11.566: GLBP: Fa0/0 1 Active: k/Hello rcvd from higher pri Active router (150/10.10.10.3)&lt;br /&gt;*Mar  5 22:58:11.566: GLBP: Fa0/0 1 Active -&gt; Speak&lt;br /&gt;*Mar  5 22:58:11.566: %GLBP-6-STATECHANGE: FastEthernet0/0 Grp 1 state Active -&gt; Speak&lt;br /&gt;*Mar  5 22:58:11.566: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Speak   pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:14.562: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000&lt;br /&gt;*Mar  5 22:58:14.570: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Speak   pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:17.566: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000&lt;br /&gt;*Mar  5 22:58:17.570: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Speak   pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:20.566: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000&lt;br /&gt;*Mar  5 22:58:20.570: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Speak   pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:21.566: GLBP: Fa0/0 1 Speak: f/Standby timer expired (unknown)&lt;br /&gt;*Mar  5 22:58:21.566: GLBP: Fa0/0 1 Standby router is local&lt;br /&gt;*Mar  5 22:58:21.566: GLBP: Fa0/0 1 Speak -&gt; Standby&lt;br /&gt;*Mar  5 22:58:21.566: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:23.566: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000&lt;br /&gt;*Mar  5 22:58:24.566: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:26.566: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000&lt;br /&gt;*Mar  5 22:58:27.566: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:29.570: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000&lt;br /&gt;*Mar  5 22:58:30.566: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 135 vMAC 0007.b400.0101 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:30.570: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VF 1 Active  pri 167 vMAC 0007.b400.0101&lt;br /&gt;*Mar  5 22:58:30.570: GLBP: Fa0/0 1.1 Active: i/Hello rcvd from higher pri Active router (167/10.10.10.3)&lt;br /&gt;*Mar  5 22:58:30.570: GLBP: Fa0/0 1.1 Active -&gt; Listen&lt;br /&gt;*Mar  5 22:58:30.570: %GLBP-6-FWDSTATECHANGE: FastEthernet0/0 Grp 1 Fwd 1 state Active -&gt; Listen&lt;br /&gt;*Mar  5 22:58:30.570: GLBP: Fa0/0 API MAC address update&lt;br /&gt;*Mar  5 22:58:32.570: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 167 vMAC 0007.b400.0101&lt;br /&gt;*Mar  5 22:58:33.566: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:35.570: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 167 vMAC 0007.b400.0101&lt;br /&gt;*Mar  5 22:58:36.566: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:38.570: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 167 vMAC 0007.b400.0101&lt;br /&gt;*Mar  5 22:58:39.566: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;*Mar  5 22:58:41.574: GLBP: Fa0/0 Grp 1 Hello  in  10.10.10.3 VG Active  pri 150 vIP 10.10.10.1 hello 3000, hold 10000 VF 1 Active  pri 167 vMAC 0007.b400.0101&lt;br /&gt;*Mar  5 22:58:42.566: GLBP: Fa0/0 Grp 1 Hello  out 10.10.10.2 VG Standby pri 120 vIP 10.10.10.1 hello 3000, hold 10000 VF 2 Active  pri 167 vMAC 0007.b400.0102&lt;br /&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4097034697348740392/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/08/lan-switching-layer-3-redundancy_8.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4097034697348740392'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4097034697348740392'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/08/lan-switching-layer-3-redundancy_8.html' title='LAN Switching Layer 3 Redundancy Protocols'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-3298052498411467692</id><published>2010-08-04T15:14:00.001-05:00</published><updated>2019-04-11T11:09:47.952-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='LAN Switching'/><category scheme='http://www.blogger.com/atom/ns#' term='VLAN'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNA Study Notes'/><category scheme='http://www.blogger.com/atom/ns#' term='VLAN Trunking'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNP Study Notes'/><title type='text'>Virtual LAN's and Trunks</title><content type='html'>Virtual LAN, also known as VLAN, is exactly as it sounds. It's a method of having several virtual LAN's on a single switch or even on an enterprise campus LAN. It's completely driven by software and is strictly layer 2. Just as physical LAN's, you can connect VLAN's together with layer 3 devices, either routers or switches capable of providing layer three services.&lt;br /&gt;&lt;br /&gt;A switch port can operate in three modes. Those modes are access, trunk and hybrid.&lt;br /&gt;&lt;br /&gt;An access port is typically how ports are setup that connect to workstations, printers, etc. They can only be apart of a single vlan, with one exception. Hosts connected to access ports are oblivious to what vlan that they are on. Hosts can communicate with other hosts on the same vlan, but are not able to communicate with hosts on other vlan's with out passing through a layer three device, such as a router.&lt;br /&gt;&lt;br /&gt;Now the one exception to an access port only being able to pass traffic for a single vlan is when an access port is configured with a voice vlan, as well as a data vlan. In this configuration an IP phone is plugged into the switch port and the PC is plugged into the phone. The switch port then puts voice traffic on one vlan and data on another vlan. This allows for better security as well as quality of service for the voice traffic. &lt;br /&gt;&lt;br /&gt;Trunk ports generally are the connections between switches. They allow switches to pass multiple vlan's through them to other switches. That way you can have multiple vlan's that span many switches within a enterprise LAN. Trunks can also connect switches to routers, known as &lt;i&gt;router on a stick.&lt;/i&gt; This allows a router to connect to multiple vlan's to route traffic through a single connection. Beware though, using a &lt;i&gt;router on a stick&lt;/i&gt; configuration can significantly hinder your network performance as it will be the bottleneck of the network. The only instance where a &lt;i&gt;router on a stick&lt;/i&gt; gains much use is for low traffic, small branch sites. Nowadays, layer 3 switches are used to route traffic internally on an enterprise.&lt;br /&gt;&lt;br /&gt;There are a few different trunking protocols. In the Ethernet world, there are two methods; ISL and 802.1q. ISL stands for Inter-Switch Link and is a Cisco proprietary trunking protocol. &lt;br /&gt;&lt;br /&gt;ISL:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Only carries 1000 VLANs&lt;/li&gt;&lt;li&gt;Encapsulates the frame, which add overhead&lt;/li&gt;&lt;li&gt;Must be point-to-point&lt;/li&gt;&lt;li&gt;does not have a separate QoS field&lt;/li&gt;&lt;/ul&gt;Since ISL encapsulates the entire frame it can support other protocols besides Ethernet. It can support Token Ring, FDDI, and ATM.&lt;br /&gt;&lt;br /&gt;802.1q is an open standard trunking protocol. Since it's open, it can be used with multiple vendors. Rather than encapsulating the entire frame, 802.1q adds a tag to the existing Ethernet header. 802.1q had a priority field for better QoS support and has a rich protocol support. It can support:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Ethernet&lt;/li&gt;&lt;li&gt;Token Ring&lt;/li&gt;&lt;li&gt;4095 VLANs&lt;/li&gt;&lt;li&gt;Common Spanning Tree&lt;/li&gt;&lt;li&gt;Multiple Spanning Tree&lt;/li&gt;&lt;li&gt;Rapid Spanning Tree&lt;/li&gt;&lt;/ul&gt;The native vlan is not tagged on the trunk.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Command Sets:&lt;/b&gt; &lt;br /&gt;&lt;br /&gt;&lt;i&gt;Interface Configuration mode:&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;CSW1(config-if)#switchport mode ?&lt;br /&gt;  access        Set trunking mode to ACCESS unconditionally&lt;br /&gt;  dot1q-tunnel  Set trunking mode to DOT1Q TUNNEL unconditionally&lt;br /&gt;  dynamic       Set trunking mode to dynamically negotiate access or trunk mode&lt;br /&gt;  trunk         Set trunking mode to TRUNK unconditionally&lt;br /&gt;&lt;br /&gt;CSW1(config-if)#switchport access ?&lt;br /&gt;  vlan  Set VLAN when interface is in access mode&lt;br /&gt;&lt;br /&gt;CSW1(config-if)#switchport trunk ?&lt;br /&gt;  allowed        Set allowed VLAN characteristics when interface is in trunking&lt;br /&gt;                 mode&lt;br /&gt;  encapsulation  Set trunking encapsulation when interface is in trunking mode&lt;br /&gt;  native         Set trunking native characteristics when interface is in&lt;br /&gt;                 trunking mode&lt;br /&gt;  pruning        Set pruning VLAN characteristics when interface is in trunking&lt;br /&gt;                 mode&lt;br /&gt;&lt;br /&gt;CSW1(config-if)#switchport voice ?&lt;br /&gt;  vlan  Vlan for voice traffic&lt;br /&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/3298052498411467692/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/08/virtual-lan-and-trunks_4.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3298052498411467692'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3298052498411467692'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/08/virtual-lan-and-trunks_4.html' title='Virtual LAN&amp;#39;s and Trunks'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4502496079678288908</id><published>2010-07-28T16:29:00.001-05:00</published><updated>2019-04-11T11:09:38.546-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Diebold'/><category scheme='http://www.blogger.com/atom/ns#' term='Perl Tips'/><title type='text'>Diebold FIT File Perl Script</title><content type='html'>I wrote this to generate Diebold FIT files quickly. This script can generate a FIT file in a couple seconds in what would take me hours to do by hand.&lt;br/&gt;&lt;pre class="lang:default decode:true "&gt;#!/usr/bin/perl&lt;br/&gt;#!C:\perl\bin\perl.exe&lt;br/&gt;&lt;br/&gt;# May, 29, 2009&lt;br/&gt;# Automatically creates a Diebold ATM FIT file&lt;br/&gt;# based on a list of BIN numbers.&lt;br/&gt;&lt;br/&gt;# 1) Takes each BIN number.&lt;br/&gt;# 2) splits each BIN into two digit strings.&lt;br/&gt;# 3) Assumes that each two digit string is a hex value.&lt;br/&gt;# 4) Converts each hex value to decimal.&lt;br/&gt;# 5) Makes sure each decimal number is three digits.&lt;br/&gt;# 6) Creates the each incrementing FIT line.&lt;br/&gt;# 7) Writes each FIT line to a specified file.&lt;br/&gt;&lt;br/&gt;# If you are using a UNIX-Like OS, be sure to change&lt;br/&gt;# the \\ in the $binPath, $fitPath, and $testPath&lt;br/&gt;# so a single /&lt;br/&gt;&lt;br/&gt;# User Definable Variables&lt;br/&gt;# The directory in which the script looks for the input file&lt;br/&gt;# and writes the output file(s).&lt;br/&gt;$homeDir  = 'C:\Documents and Settings\williamsj\My Documents';&lt;br/&gt;$binList  = "$ARGV[0]";&lt;br/&gt;$fitList  = "$ARGV[1]";&lt;br/&gt;$binPath = "$homeDir\\$binList";&lt;br/&gt;$fitPath = "$homeDir\\$fitList";&lt;br/&gt;# Do you want to add a FIT line so that the ATM can use&lt;br/&gt;# a settlement card?&lt;br/&gt;$settleCard = "1"; # 1 is On, 0 is Off&lt;br/&gt;# Do you want to add a FIT line so that all other FI&lt;br/&gt;# cards are defined? (Not "ON US")&lt;br/&gt;$allOtherFI = "1"; # 1 is On, 0 is Off&lt;br/&gt;# Having problems? Turning this on will create a file&lt;br/&gt;# that has all corresponding outputs. It can be useful in&lt;br/&gt;# troubleshooting the code.&lt;br/&gt;# 1) BIN length&lt;br/&gt;# 2) The BIN number&lt;br/&gt;# 3) The hex values&lt;br/&gt;# 4) The decimal values&lt;br/&gt;$testData  = "0"; # 1 is On, 0 is Off&lt;br/&gt;$testFile  = "testData.txt";&lt;br/&gt;$testPath = "$homeDir\\$testFile";&lt;br/&gt;&lt;br/&gt;# This is the meat of the script.&lt;br/&gt;$num = "0";&lt;br/&gt;if(!$ARGV[0]) {&lt;br/&gt; print "Error: You must specify a bin list.\n";&lt;br/&gt;        print "$0 &amp;lt;input_bin_list&amp;gt; &amp;lt;output_fit_file&amp;gt;\n";&lt;br/&gt;} elsif(!$ARGV[1]) {&lt;br/&gt; print "Error: You must specify a fit file to write to.\n";&lt;br/&gt;        print "$0 &amp;lt;input_bin_list&amp;gt; &amp;lt;output_fit_file&amp;gt;\n";&lt;br/&gt;} else {&lt;br/&gt;if($settleCard eq 1) {&lt;br/&gt; open(FIT, "&amp;gt;$fitPath") or die "Can't open $fitPath.\n";&lt;br/&gt; print FIT "; Settlement card BIN (all 9's)\n";&lt;br/&gt; print FIT "000000153153153153153002000140000000000031000255000000000000000000000000000000000000000000000000000000000000000000000\c\\n";&lt;br/&gt; print FIT "; on-us BINs\n";&lt;br/&gt; close(FIT);&lt;br/&gt;}&lt;br/&gt;open(BINS, "$binPath") or die "Can't open $binPath.\n";&lt;br/&gt;my @bins = ;&lt;br/&gt;foreach $bins (@bins) {&lt;br/&gt; chomp($bins);&lt;br/&gt;        $l = length($bins);&lt;br/&gt;        @sbins = split(/(\d\d)/,$bins);&lt;br/&gt; if($l eq 10) {&lt;br/&gt;         @b = ($sbins[1],$sbins[3],$sbins[5],$sbins[7],$sbins[9]);&lt;br/&gt;                @dec = @b;&lt;br/&gt;                $dec[0] = hex($dec[0]);&lt;br/&gt;                if(length($dec[0]) eq 2) {&lt;br/&gt;                 $dec[0] = "0$dec[0]";&lt;br/&gt;                } elsif(length($dec[0]) eq 1) {&lt;br/&gt;                 $dec[0] = "00$dec[0]";&lt;br/&gt;                }&lt;br/&gt;                $dec[1] = hex($dec[1]);&lt;br/&gt;                if(length($dec[1]) eq 2) {&lt;br/&gt;                 $dec[1] = "0$dec[1]";&lt;br/&gt;                } elsif(length($dec[1]) eq 1) {&lt;br/&gt;                 $dec[1] = "00$dec[1]";&lt;br/&gt;                }&lt;br/&gt;                $dec[2] = hex($dec[2]);&lt;br/&gt;                if(length($dec[2]) eq 2) {&lt;br/&gt;                 $dec[2] = "0$dec[2]";&lt;br/&gt;                } elsif(length($dec[2]) eq 1) {&lt;br/&gt;                 $dec[2] = "00$dec[2]";&lt;br/&gt;                }&lt;br/&gt;                $dec[3] = hex($dec[3]);&lt;br/&gt;                if(length($dec[3]) eq 2) {&lt;br/&gt;                 $dec[3] = "0$dec[3]";&lt;br/&gt;                } elsif(length($dec[3]) eq 1) {&lt;br/&gt;                 $dec[3] = "00$dec[3]";&lt;br/&gt;                }&lt;br/&gt;                $dec[4] = hex($dec[4]);&lt;br/&gt;                if(length($dec[4]) eq 2) {&lt;br/&gt;                 $dec[4] = "0$dec[4]";&lt;br/&gt;                } elsif(length($dec[4]) eq 1) {&lt;br/&gt;                 $dec[4] = "00$dec[4]";&lt;br/&gt;                }&lt;br/&gt; }&lt;br/&gt;        if($l eq 9) {&lt;br/&gt;         @b = ($sbins[1],$sbins[3],$sbins[5],$sbins[7],$sbins[8]);&lt;br/&gt;                $b[4] = "$b[4]f";&lt;br/&gt;                @dec = @b;&lt;br/&gt;                $dec[0] = hex($dec[0]);&lt;br/&gt;                if(length($dec[0]) eq 2) {&lt;br/&gt;                 $dec[0] = "0$dec[0]";&lt;br/&gt;                } elsif(length($dec[0]) eq 1) {&lt;br/&gt;                 $dec[0] = "00$dec[0]";&lt;br/&gt;                }&lt;br/&gt;                $dec[1] = hex($dec[1]);&lt;br/&gt;                if(length($dec[1]) eq 2) {&lt;br/&gt;                 $dec[1] = "0$dec[1]";&lt;br/&gt;                } elsif(length($dec[1]) eq 1) {&lt;br/&gt;                 $dec[1] = "00$dec[1]";&lt;br/&gt;                }&lt;br/&gt;                $dec[2] = hex($dec[2]);&lt;br/&gt;                if(length($dec[2]) eq 2) {&lt;br/&gt;                 $dec[2] = "0$dec[2]";&lt;br/&gt;                } elsif(length($dec[2]) eq 1) {&lt;br/&gt;                 $dec[2] = "00$dec[2]";&lt;br/&gt;                }&lt;br/&gt;                $dec[3] = hex($dec[3]);&lt;br/&gt;                if(length($dec[3]) eq 2) {&lt;br/&gt;                 $dec[3] = "0$dec[3]";&lt;br/&gt;                } elsif(length($dec[3]) eq 1) {&lt;br/&gt;                 $dec[3] = "00$dec[3]";&lt;br/&gt;                }&lt;br/&gt;                $dec[4] = hex($dec[4]);&lt;br/&gt;                if(length($dec[4]) eq 2) {&lt;br/&gt;                 $dec[4] = "0$dec[4]";&lt;br/&gt;                } elsif(length($dec[4]) eq 1) {&lt;br/&gt;                 $dec[4] = "00$dec[4]";&lt;br/&gt;                }&lt;br/&gt;        }&lt;br/&gt;        if($l eq 8) {&lt;br/&gt;         @b = ($sbins[1],$sbins[3],$sbins[5],$sbins[7]);&lt;br/&gt;                @dec = @b;&lt;br/&gt;                $dec[0] = hex($dec[0]);&lt;br/&gt;                if(length($dec[0]) eq 2) {&lt;br/&gt;                 $dec[0] = "0$dec[0]";&lt;br/&gt;                } elsif(length($dec[0]) eq 1) {&lt;br/&gt;                 $dec[0] = "00$dec[0]";&lt;br/&gt;                }&lt;br/&gt;                $dec[1] = hex($dec[1]);&lt;br/&gt;                if(length($dec[1]) eq 2) {&lt;br/&gt;                 $dec[1] = "0$dec[1]";&lt;br/&gt;                } elsif(length($dec[1]) eq 1) {&lt;br/&gt;                 $dec[1] = "00$dec[1]";&lt;br/&gt;                }&lt;br/&gt;                $dec[2] = hex($dec[2]);&lt;br/&gt;                if(length($dec[2]) eq 2) {&lt;br/&gt;                 $dec[2] = "0$dec[2]";&lt;br/&gt;                } elsif(length($dec[2]) eq 1) {&lt;br/&gt;                 $dec[2] = "00$dec[2]";&lt;br/&gt;                }&lt;br/&gt;                $dec[3] = hex($dec[3]);&lt;br/&gt;                if(length($dec[3]) eq 2) {&lt;br/&gt;                 $dec[3] = "0$dec[3]";&lt;br/&gt;                } elsif(length($dec[3]) eq 1) {&lt;br/&gt;                 $dec[3] = "00$dec[3]";&lt;br/&gt;                }&lt;br/&gt;        }&lt;br/&gt;        if($l eq 7) {&lt;br/&gt;         @b = ($sbins[1],$sbins[3],$sbins[5],$sbins[6]);&lt;br/&gt;                $b[3] = "$b[3]f";&lt;br/&gt;                @dec = @b;&lt;br/&gt;                $dec[0] = hex($dec[0]);&lt;br/&gt;                if(length($dec[0]) eq 2) {&lt;br/&gt;                 $dec[0] = "0$dec[0]";&lt;br/&gt;                } elsif(length($dec[0]) eq 1) {&lt;br/&gt;                 $dec[0] = "00$dec[0]";&lt;br/&gt;                }&lt;br/&gt;                $dec[1] = hex($dec[1]);&lt;br/&gt;                if(length($dec[1]) eq 2) {&lt;br/&gt;                 $dec[1] = "0$dec[1]";&lt;br/&gt;                } elsif(length($dec[1]) eq 1) {&lt;br/&gt;                 $dec[1] = "00$dec[1]";&lt;br/&gt;                }&lt;br/&gt;                $dec[2] = hex($dec[2]);&lt;br/&gt;                if(length($dec[2]) eq 2) {&lt;br/&gt;                 $dec[2] = "0$dec[2]";&lt;br/&gt;                } elsif(length($dec[2]) eq 1) {&lt;br/&gt;                 $dec[2] = "00$dec[2]";&lt;br/&gt;                }&lt;br/&gt;                $dec[3] = hex($dec[3]);&lt;br/&gt;                if(length($dec[3]) eq 2) {&lt;br/&gt;                 $dec[3] = "0$dec[3]";&lt;br/&gt;                } elsif(length($dec[2]) eq 1) {&lt;br/&gt;                 $dec[2] = "00$dec[2]";&lt;br/&gt;                }&lt;br/&gt;        }&lt;br/&gt;        if($l eq 6) {&lt;br/&gt;         @b = ($sbins[1],$sbins[3],$sbins[5]);&lt;br/&gt;                @dec = @b;&lt;br/&gt;                $dec[0] = hex($dec[0]);&lt;br/&gt;                if(length($dec[0]) eq 2) {&lt;br/&gt;                 $dec[0] = "0$dec[0]";&lt;br/&gt;                } elsif(length($dec[0]) eq 1) {&lt;br/&gt;                 $dec[0] = "00$dec[0]";&lt;br/&gt;                }&lt;br/&gt;                $dec[1] = hex($dec[1]);&lt;br/&gt;                if(length($dec[1]) eq 2) {&lt;br/&gt;                 $dec[1] = "0$dec[1]";&lt;br/&gt;                } elsif(length($dec[1]) eq 1) {&lt;br/&gt;                 $dec[1] = "00$dec[1]";&lt;br/&gt;                }&lt;br/&gt;                $dec[2] = hex($dec[2]);&lt;br/&gt;                if(length($dec[2]) eq 2) {&lt;br/&gt;                 $dec[2] = "0$dec[2]";&lt;br/&gt;                } elsif(length($dec[2]) eq 1) {&lt;br/&gt;                 $dec[2] = "00$dec[2]";&lt;br/&gt;                }&lt;br/&gt;        }&lt;br/&gt;        if($l eq 5) {&lt;br/&gt;         @b = ($sbins[1],$sbins[3],$sbins[4]);&lt;br/&gt;                $b[2] = "$b[2]f";&lt;br/&gt;                @dec = @b;&lt;br/&gt;                $dec[0] = hex($dec[0]);&lt;br/&gt;                if(length($dec[0]) eq 2) {&lt;br/&gt;                 $dec[0] = "0$dec[0]";&lt;br/&gt;                } elsif(length($dec[0]) eq 1) {&lt;br/&gt;                 $dec[0] = "00$dec[0]";&lt;br/&gt;                }&lt;br/&gt;                $dec[1] = hex($dec[1]);&lt;br/&gt;                if(length($dec[1]) eq 2) {&lt;br/&gt;                 $dec[1] = "0$dec[1]";&lt;br/&gt;                } elsif(length($dec[1]) eq 1) {&lt;br/&gt;                 $dec[1] = "00$dec[1]";&lt;br/&gt;                }&lt;br/&gt;                $dec[2] = hex($dec[2]);&lt;br/&gt;                if(length($dec[2]) eq 2) {&lt;br/&gt;                 $dec[2] = "0$dec[2]";&lt;br/&gt;                } elsif(length($dec[2]) eq 1) {&lt;br/&gt;                 $dec[2] = "00$dec[2]";&lt;br/&gt;                }&lt;br/&gt;        }&lt;br/&gt;        if($l eq 4) {&lt;br/&gt;         @b = ($sbins[1],$sbins[3]);&lt;br/&gt;                @dec = @b;&lt;br/&gt;                $dec[0] = hex($dec[0]);&lt;br/&gt;                if(length($dec[0]) eq 2) {&lt;br/&gt;                 $dec[0] = "0$dec[0]";&lt;br/&gt;                } elsif(length($dec[0]) eq 1) {&lt;br/&gt;                 $dec[0] = "00$dec[0]";&lt;br/&gt;                }&lt;br/&gt;                $dec[1] = hex($dec[1]);&lt;br/&gt;                if(length($dec[1]) eq 2) {&lt;br/&gt;                 $dec[1] = "0$dec[1]";&lt;br/&gt;                } elsif(length($dec[1]) eq 1) {&lt;br/&gt;                 $dec[1] = "00$dec[1]";&lt;br/&gt;                }&lt;br/&gt;        }&lt;br/&gt;        if($l eq 3) {&lt;br/&gt;         @b = ($sbins[1],$sbins[2]);&lt;br/&gt;                $b[1] = "$b[1]f";&lt;br/&gt;                @dec = @b;&lt;br/&gt;                $dec[0] = hex($dec[0]);&lt;br/&gt;                if(length($dec[0]) eq 2) {&lt;br/&gt;                 $dec[0] = "0$dec[0]";&lt;br/&gt;                } elsif(length($dec[0]) eq 1) {&lt;br/&gt;                 $dec[0] = "00$dec[0]";&lt;br/&gt;                }&lt;br/&gt;                $dec[1] = hex($dec[1]);&lt;br/&gt;                if(length($dec[1]) eq 2) {&lt;br/&gt;                 $dec[1] = "0$dec[1]";&lt;br/&gt;                } elsif(length($dec[1]) eq 1) {&lt;br/&gt;                 $dec[1] = "00$dec[1]";&lt;br/&gt;                }&lt;br/&gt;        }&lt;br/&gt;        if($l eq 2) {&lt;br/&gt;         @b = ($sbins[1]);&lt;br/&gt;                @dec = @b;&lt;br/&gt;                $dec[0] = hex($dec[0]);&lt;br/&gt;                if(length($dec[0]) eq 2) {&lt;br/&gt;                 $dec[0] = "0$dec[0]";&lt;br/&gt;                } elsif(length($dec[0]) eq 1) {&lt;br/&gt;                 $dec[0] = "00$dec[0]";&lt;br/&gt;                }&lt;br/&gt;        }&lt;br/&gt;        if($l eq 1) {&lt;br/&gt;         @b = ($sbins[0]);&lt;br/&gt;                $b[0] = "$b[0]f";&lt;br/&gt;                @dec = @b;&lt;br/&gt;                $dec[0] = hex($dec[0]);&lt;br/&gt;                if(length($dec[0]) eq 2) {&lt;br/&gt;                 $dec[0] = "0$dec[0]";&lt;br/&gt;                } elsif(length($dec[0]) eq 1) {&lt;br/&gt;                 $dec[0] = "00$dec[0]";&lt;br/&gt;                }&lt;br/&gt;        }&lt;br/&gt;        if($testData eq 1) {&lt;br/&gt;         open(FILE, "&amp;gt;&amp;gt;$testPath")&lt;br/&gt;                 or die "can't open file: $testFile.\n";&lt;br/&gt;                print FILE "BIN Length: $l\n";&lt;br/&gt;                print FILE "BINS: $bins\n";&lt;br/&gt;                print FILE "HEX:  @b\n";&lt;br/&gt;         print FILE "DEC:  @dec\n\n";&lt;br/&gt;         close(FILE);&lt;br/&gt;        }&lt;br/&gt;        $d = "@dec";&lt;br/&gt;        $d =~ s/ //g;&lt;br/&gt;        $dl = length($d);&lt;br/&gt;        if($dl eq 3) {&lt;br/&gt;         $d = "$d 255255255255";&lt;br/&gt;                $d =~ s/ //g;&lt;br/&gt;        } if($dl eq 6) {&lt;br/&gt;         $d = "$d 255255255";&lt;br/&gt;                $d =~ s/ //g;&lt;br/&gt;        } if($dl eq 9) {&lt;br/&gt;         $d = "$d 255255";&lt;br/&gt;                $d =~ s/ //g;&lt;br/&gt;        } if($dl eq 12) {&lt;br/&gt;         $d = "$d 255";&lt;br/&gt;                $d =~ s/ //g;&lt;br/&gt;        }&lt;br/&gt;        open(FIT, "&amp;gt;&amp;gt;$fitPath") or die "Can't Open $fitPath.\n";&lt;br/&gt;        foreach($d) {&lt;br/&gt;         chomp($d);&lt;br/&gt;                $num++;&lt;br/&gt;                if($num &amp;lt;= "09") {&lt;br/&gt;                 $fl = "00 $num 000 $d 001000140000000000031000255000000000000000000000000000000000000000000000000000000000000000000000";&lt;br/&gt;                        $fl =~ s/ //g;&lt;br/&gt;                        print FIT "$fl\c\\n";&lt;br/&gt;                }&lt;br/&gt;                if($num &amp;gt;= "10" &amp;amp;&amp;amp; $num &amp;lt;= "99") {&lt;br/&gt;                 $fl = "0 $num 000 $d 001000140000000000031000255000000000000000000000000000000000000000000000000000000000000000000000";&lt;br/&gt;                        $fl =~ s/ //g;&lt;br/&gt;                        print FIT "$fl\c\\n";&lt;br/&gt;                }&lt;br/&gt;                if($num &amp;gt;= "100" &amp;amp;&amp;amp; $num &amp;lt;= "999") {&lt;br/&gt;                 $fl = "$num 000 $d 001000140000000000031000255000000000000000000000000000000000000000000000000000000000000000000000";&lt;br/&gt;                        $fl =~ s/ //g;&lt;br/&gt;                        print FIT "$fl\c\\n";&lt;br/&gt;                }&lt;br/&gt;        }&lt;br/&gt;        close(FIT);&lt;br/&gt;}&lt;br/&gt;if($allOtherFI eq 1) {&lt;br/&gt;        $num++;&lt;br/&gt;       open(FIT, "&amp;gt;&amp;gt;$fitPath") or die "Can't open $fitPath.\n";&lt;br/&gt;        print FIT "; foreign BINs (All F's)\n";&lt;br/&gt;        if($num &amp;lt;= "09") {&lt;br/&gt;                $fl = "00 $num 000255255255255255000000140000000000031000255000000000000000000000000000000000000000000000000000000000000000000000";&lt;br/&gt;                $fl =~ s/ //g;&lt;br/&gt;                print FIT "$fl\c\\n";&lt;br/&gt;        } elsif($num &amp;gt;= "10" &amp;amp;&amp;amp; $num &amp;lt;= "99") {&lt;br/&gt;               $fl = "0 $num 000255255255255255000000140000000000031000255000000000000000000000000000000000000000000000000000000000000000000000";&lt;br/&gt;                $fl =~ s/ //g;&lt;br/&gt;                print FIT "$fl\c\\n";&lt;br/&gt;        } elsif($num &amp;gt;= "100" &amp;amp;&amp;amp; $num &amp;lt;= "999") {&lt;br/&gt;               $fl = "$num 000255255255255255000000140000000000031000255000000000000000000000000000000000000000000000000000000000000000000000";&lt;br/&gt;                $fl =~ s/ //g;&lt;br/&gt;                print FIT "$fl\c\\n";&lt;br/&gt;        }&lt;br/&gt;        close(FIT);&lt;br/&gt;}&lt;br/&gt;close(BINS);&lt;br/&gt;}&lt;/pre&gt;&lt;br/&gt;&amp;nbsp;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4502496079678288908/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/07/diebold-fit-file-perl-script_28.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4502496079678288908'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4502496079678288908'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/07/diebold-fit-file-perl-script_28.html' title='Diebold FIT File Perl Script'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5186270233048847527</id><published>2010-07-28T16:11:00.001-05:00</published><updated>2019-04-11T11:09:38.805-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Innovative'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Engineering Feats'/><title type='text'>Using Bittorrent to Distribute Software Updates?</title><content type='html'>I just thought that this was a very cool concept.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;object width="400" height="225"&gt;&lt;param name="allowfullscreen" value="true" /&gt;&lt;param name="allowscriptaccess" value="always" /&gt;&lt;param name="movie" value="http://vimeo.com/moogaloop.swf?clip_id=11280885&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" /&gt;&lt;embed src="http://vimeo.com/moogaloop.swf?clip_id=11280885&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="400" height="225"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;p&gt;&lt;a href="http://vimeo.com/11280885"&gt;Twitter - Murder Bittorrent Deploy System&lt;/a&gt; from &lt;a href="http://vimeo.com/user3690378"&gt;Larry Gadea&lt;/a&gt; on &lt;a href="http://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5186270233048847527/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/07/using-bittorrent-to-distribute-software_28.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5186270233048847527'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5186270233048847527'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/07/using-bittorrent-to-distribute-software_28.html' title='Using Bittorrent to Distribute Software Updates?'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-8095467737849319051</id><published>2010-07-27T17:25:00.001-05:00</published><updated>2019-04-11T11:09:39.067-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='LAN Switching'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNA Study Notes'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNP Study Notes'/><category scheme='http://www.blogger.com/atom/ns#' term='VTP'/><title type='text'>VLAN Trunking Protocol</title><content type='html'>VLAN Trunking Protocol, aka VTP, is a Cisco proprietary protocol that allows Cisco switches to manage your VLAN database across all switches in your LAN through a central switch. This is done via a client / server environment.&lt;br /&gt;&lt;br /&gt;A switch can operate in three VTP modes. The first is server mode. This is the VTP server which hosts the VLAN database and other switches on the LAN communicate to obtain a copy of the VTP database. In server mode, a network admin can add and remove VLANs at will.&lt;br /&gt;&lt;br /&gt;The second is client mode. This is a VTP client. These switches communicate with the VTP server to obtain the database. A network admin can not add or remove VLANs manually from a switch in client mode. &lt;br /&gt;&lt;br /&gt;And finally the the third mode is transparent mode. In transparent mode, the switch does not communicate with the VTP server and does not act as a VTP client. The network admin can add and remove VLANs from a switch in transparent mode and it will also allow VTP traffic to pass through it to other switches participating in the VTP domain.&lt;br /&gt;&lt;br /&gt;Misconfigured, VTP can cause a major headache, but fortunately, troubleshooting VTP is pretty straight forward.&lt;br /&gt;&lt;br /&gt;1. For VTP to propagate to switches in VTP client mode, they need to be connected as trunk ports. Switches connected together in access mode will not propagate any VTP changes.&lt;br /&gt;&lt;br /&gt;2.The "Configuration Revision" number should be the highest on the server VTP switch. If the client has a higher revision number, then it will fail to obtain updates from the server. If a switch is introduced to the network that is running in VTP server mode, has the same VTP domain name as your server, and has the same password that you've setup in your VTP domain, then it will over-write your VLAN database throughout your network.&lt;br /&gt;&lt;br /&gt;3. The "Configuration last modified" should list the IP Address of your VTP server switch. If it's not, then you have a rogue VTP server on your network.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;accessswitch#sh vtp status&lt;br /&gt;VTP Version                     : 2&lt;br /&gt;Configuration Revision          : 9&lt;br /&gt;Maximum VLANs supported locally : 255&lt;br /&gt;Number of existing VLANs        : 8&lt;br /&gt;VTP Operating Mode              : Client&lt;br /&gt;VTP Domain Name                 : rad&lt;br /&gt;VTP Pruning Mode                : Disabled&lt;br /&gt;VTP V2 Mode                     : Enabled&lt;br /&gt;VTP Traps Generation            : Disabled&lt;br /&gt;MD5 digest                      : 0x01 0x00 0xE6 0x40 0xE3 0x87 0x06 0x8C &lt;br /&gt;Configuration last modified by 10.10.10.1 at 3-1-93 00:07:31&lt;/pre&gt;&lt;br /&gt;Fixing the issues are pretty straightforward, though may take a lot of manual input if you have a lot of VLANS.&lt;br /&gt;&lt;br /&gt;1. If your client switches are not accepting updates from the server, verify that they are connected to the upstream switches via a trunking protocol. If that's correct, make sure that the "Configuration Revision" isn't higher than your VTP server. If it is, you can zero out the revision by changing to domain to null, changing the switch to server mode, then reconfiguring VTP in client mode.&lt;br /&gt;&lt;br /&gt;2. If you have a rogue switch on the network that has taken over the role as VTP server, either remove the offending switch, or join it to the network in VTP client mode, then go to your VTP server and re-enter all your VLAN information in. &lt;i&gt;You do have your VLAN information documented, right?&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Other than that; use version 2, enable VTP pruning, use unique domain names, and use passwords on your VTP domain. If you're very paranoid, set all your switches to transparent mode and update the VLAN database on your switch infrastructure manually.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Commands Sets:&lt;/b&gt;&lt;i&gt; &lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;i&gt;User EXEC mode:&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;show vtp counters&lt;br /&gt;show vtp status&lt;br /&gt;show vlan&lt;br /&gt;&lt;br /&gt;&lt;i&gt;Global Configuration mode:&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;CSW1(config)#vtp ?&lt;br /&gt;  domain     Set the name of the VTP administrative domain.&lt;br /&gt;  file       Configure IFS filesystem file where VTP configuration is stored.&lt;br /&gt;  interface  Configure interface as the preferred source for the VTP IP updater&lt;br /&gt;             address.&lt;br /&gt;  mode       Configure VTP device mode&lt;br /&gt;  password   Set the password for the VTP administrative domain&lt;br /&gt;  pruning    Set the adminstrative domain to permit pruning&lt;br /&gt;  version    Set the adminstrative domain to VTP version&lt;br /&gt;CSW1(config)#vlan ?&lt;br /&gt;  WORD        ISL VLAN IDs 1-4094&lt;br /&gt;  access-map  Create vlan access-map or enter vlan access-map command mode&lt;br /&gt;  dot1q       dot1q parameters&lt;br /&gt;  filter      Apply a VLAN Map&lt;br /&gt;  internal    internal VLAN&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;i&gt;VLAN Configuration mode:&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;CSW1(config-vlan)#?&lt;br /&gt;VLAN configuration commands:&lt;br /&gt;  are           Maximum number of All Route Explorer hops for this VLAN (or&lt;br /&gt;                zero if none specified)&lt;br /&gt;  backupcrf     Backup CRF mode of the VLAN&lt;br /&gt;  bridge        Bridging characteristics of the VLAN&lt;br /&gt;  exit          Apply changes, bump revision number, and exit mode&lt;br /&gt;  media         Media type of the VLAN&lt;br /&gt;  mtu           VLAN Maximum Transmission Unit&lt;br /&gt;  name          Ascii name of the VLAN&lt;br /&gt;  no            Negate a command or set its defaults&lt;br /&gt;  parent        ID number of the Parent VLAN of FDDI or Token Ring type VLANs&lt;br /&gt;  private-vlan  Configure a private VLAN&lt;br /&gt;  remote-span   Configure as Remote SPAN VLAN&lt;br /&gt;  ring          Ring number of FDDI or Token Ring type VLANs&lt;br /&gt;  said          IEEE 802.10 SAID&lt;br /&gt;  shutdown      Shutdown VLAN switching&lt;br /&gt;  state         Operational state of the VLAN&lt;br /&gt;  ste           Maximum number of Spanning Tree Explorer hops for this VLAN (or&lt;br /&gt;                zero if none specified)&lt;br /&gt;  stp           Spanning tree characteristics of the VLAN&lt;br /&gt;  tb-vlan1      ID number of the first translational VLAN for this VLAN (or&lt;br /&gt;                zero if none)&lt;br /&gt;  tb-vlan2      ID number of the second translational VLAN for this VLAN (or&lt;br /&gt;                zero if none)&lt;br /&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/8095467737849319051/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/07/vlan-trunking-protocol_27.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8095467737849319051'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/8095467737849319051'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/07/vlan-trunking-protocol_27.html' title='VLAN Trunking Protocol'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5203400042519566005</id><published>2010-07-20T09:48:00.001-05:00</published><updated>2019-04-11T11:09:39.360-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Routing Protocols'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='OSPF'/><category scheme='http://www.blogger.com/atom/ns#' term='IGP&apos;s'/><title type='text'>OSPF Notes and Gotchas</title><content type='html'>Open Shortest Path First (OSPF) is an open standard routing protocol that is used as an interior gateway routing protocol (IGP). Because OSPF is an open standard, it will inter-operate with many network gear vendors, with some configuration tweaks.&lt;br /&gt;&lt;br /&gt;Link = Interface. Interfaces are added to OSFP via the network command.&lt;br /&gt;&lt;br /&gt;Router ID = RID = an identifier. typically from a loopback interface or the highest ip address on a router. The router with the highest RID will be the router that propagates changes through the network. This router is called the designated router.  The router with the second highest RID will act as it's backup. This is called the backup designated router It's a best practice to add loopback interfaces with the highest IP Addresses being the core routers of the WAN. Use /32 addressing scheme in your loopback interfaces.&lt;br /&gt;&lt;br /&gt;Neighbor = routers that have a common interface&lt;br /&gt;&lt;br /&gt;Adjacency = a relationship that allows routers to share routing information&lt;br /&gt;&lt;br /&gt;OSPF, by default, uses multicast or propagate changes to other adjacent routers. If your WAN doesn't support multicast then you will need to make two additional changes to your configuration. First you will need to setup your WAN interface as a non-broadcast interface. In Cisco routers you will issue the "ip ospf network non-broadcast" command. Then you will need to manually specify your adjacency neighbor relationships with the neighbor command in the OSPF process.&lt;br /&gt;&lt;br /&gt;If you're using multi-vendor equipment for your OSPF routed WAN, then you will most likely need to manually specify Hello, Dead, and Wait timers.&lt;br /&gt;&lt;br /&gt;With Cisco routers, by default, if a router loses adjacency (loses connection, hardware failure, software glitch, etc); it will take OSPF 40 seconds to propagate the routing changes through the network. It will either drop the route(s) completely if there isn't a redundant path or it will propagate an alternate path.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5203400042519566005/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/07/ospf-notes-and-gotchas_20.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5203400042519566005'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5203400042519566005'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/07/ospf-notes-and-gotchas_20.html' title='OSPF Notes and Gotchas'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1841308286353799773</id><published>2010-05-18T03:29:00.001-05:00</published><updated>2019-04-11T11:09:39.617-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Perl Tips'/><category scheme='http://www.blogger.com/atom/ns#' term='Online Privacy'/><title type='text'>What information is your browser giving away?</title><content type='html'>This morning, there was an article where the EFF is claiming that just because you turn off cookies and javascript in your browser doesn't mean that you're not giving away information. Unfortunately, they are very correct. Your browser will give away ALL kinds of information about your computer; such as operating system, browser type / version number, browser plugin's, etc.&lt;br /&gt;&lt;br /&gt;I've used this exact same information for years to gain information about visitors on a site that I couldn't physically monitor the logs. What I did was use a CGI script, written in perl, to modify the HTTP header to point to an transparent image that was 1 pixel high and wide. It's very easy to hide an image when it's transparent and only a single pixel.&lt;br /&gt;&lt;br /&gt;The information that this script grabbed were IP Address, date / time the image was accessed, browser user agent, and the referring URL. That's enough information for me to get an idea of what content people are looking at and to even identify unique and repeat users.&lt;br /&gt;&lt;br /&gt;Here is a sample script that I've used before.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;#!/usr/bin/perl -w&lt;br /&gt;&lt;br /&gt;use DBI;&lt;br /&gt;&lt;br /&gt;my $imgurl = "http://www.domain.com/mytracker/images/1by1.gif";&lt;br /&gt;&lt;br /&gt;print "Cache-control: no-cache\n";&lt;br /&gt;print "Content-type: image/gif\n";&lt;br /&gt;print "Location: $imgurl\n\n";&lt;br /&gt;&lt;br /&gt;$refer = "$ENV{HTTP_REFERER}";&lt;br /&gt;$ipaddr = "$ENV{REMOTE_ADDR}";&lt;br /&gt;$browser = "$ENV{HTTP_USER_AGENT}";&lt;br /&gt;&lt;br /&gt;my $dbh = DBI-&gt;connect("DBI:mysql:database=mytracker;host=localhost", "username", "password", {'RaiseError' =&gt; 1});&lt;br /&gt;&lt;br /&gt;my $rows = $dbh-&gt;do("INSERT INTO trackerlogs (id, date, referurl, ipaddress, useragent) VALUES ('', NOW(), '$refer', '$ipaddr', '$browser')");&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;Here's an example of the information that the log generates:&lt;br /&gt;&lt;br /&gt;&lt;table border="1" cellpadding="1" cellspacing="1"&gt;&lt;tr&gt;    &lt;td&gt;2009-10-11 19:54:06&lt;/td&gt; &lt;td&gt;127.0.0.1&lt;/td&gt; &lt;td&gt;http://www.domain.com/referringurl.htm&lt;/td&gt; &lt;td&gt;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; FunWebProducts; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30618; AskTB5.3)&lt;/td&gt;  &lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;Here's a link to the article: &lt;a href="http://www.theregister.co.uk/2010/05/17/browser_fingerprint/"&gt;EFF Browser Fingerprints Article&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/1841308286353799773/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/05/what-information-is-your-browser-giving_18.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1841308286353799773'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1841308286353799773'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/05/what-information-is-your-browser-giving_18.html' title='What information is your browser giving away?'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-6111477715976489549</id><published>2010-05-16T15:28:00.001-05:00</published><updated>2019-04-11T11:09:39.870-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Linux'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='System Administration'/><category scheme='http://www.blogger.com/atom/ns#' term='Perl Tips'/><title type='text'>Automated Linux Backups utilizing rsync over SSH</title><content type='html'>I was recently tasked with coming up with a backup solution for our Linux based servers. My solution was to use rsync over SSH to pull the data that we wanted over and then use tar to create daily archives, which we can then pull off the server to some other type of storage media or a remote server.&lt;br /&gt;&lt;br /&gt;After creating a Linux server that I would use as the backup server, I setup SSH with a public key exchange.&lt;br /&gt;&lt;br /&gt;To do this, I typed "ssh-keygen" on my Linux backup server.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;root@linuxbackup:~# ssh-keygen&lt;br /&gt;Generating public/private rsa key pair.&lt;br /&gt;Enter file in which to save the key (/root/.ssh/id_rsa):&lt;br /&gt;Enter passphrase (empty for no passphrase):&lt;br /&gt;Enter same passphrase again:&lt;br /&gt;Your identification has been saved in /root/.ssh/id_rsa.&lt;br /&gt;Your public key has been saved in /root/.ssh/id_rsa.pub.&lt;br /&gt;The key fingerprint is:&lt;br /&gt;c3:81:ee:64:5b:d0:8c:8e:5a:ff:68:49:be:f4:ff:68 root@linuxbackup&lt;br /&gt;root@linuxbackup:~#&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;After creating a public key on my Linux backup server, I moved the public key over to the servers that the server would be accessing.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;root@linuxbackup:~# ssh-copy-id -i .ssh/id_rsa.pub root@server01&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;To automate the process, I created a custom perl script.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;#!/usr/bin/perl&lt;br /&gt;&lt;br /&gt;use Time::localtime;&lt;br /&gt;&lt;br /&gt;## Date and Time Configuration&lt;br /&gt;$tm                     = localtime;&lt;br /&gt;($day,$month,$year)     = ($tm-&gt;mday,$tm-&gt;mon,$tm-&gt;year);&lt;br /&gt;$year                   += 1900;&lt;br /&gt;$month                  += 1;&lt;br /&gt;&lt;br /&gt;## User Changeable Variables&lt;br /&gt;$archiveDir             = "/data/archive";&lt;br /&gt;@server                 = ("server01", "server02");&lt;br /&gt;&lt;br /&gt;## The Nitty Gritty&lt;br /&gt;$args = $ARGV[0];&lt;br /&gt;if(!$args) {&lt;br /&gt;        print "Error: Invalid Option.\n";&lt;br /&gt;        print "$0 help\n";&lt;br /&gt;} else {&lt;br /&gt;        arguments();&lt;br /&gt;}&lt;br /&gt;sub arguments {&lt;br /&gt;        if($args eq "help") {&lt;br /&gt;                print "\n$0 help | auto | list\n\n";&lt;br /&gt;                print "help     - Lists all available options.\n";&lt;br /&gt;                print "auto     - Automatically runs the backup functions on the servers listed in the database.\n";&lt;br /&gt;        } elsif($args eq "auto") {&lt;br /&gt;                foreach $box (@server) {&lt;br /&gt;                        chomp($box);&lt;br /&gt;                        `rsync -ae ssh --delete $box:/root /data/$box`;&lt;br /&gt;                        `rsync -ae ssh --delete $box:/home /data/$box`;&lt;br /&gt;                        `rsync -ae ssh --delete $box:/etc /data/$box`;&lt;br /&gt;                        `rsync -ae ssh --delete $box:/var /data/$box`;&lt;br /&gt;                        if($box eq "server02") {&lt;br /&gt;                                `rsync -ae ssh --delete $box:/customdir /data/$box`;&lt;br /&gt;                        }&lt;br /&gt;                        `tar -cpjf $archiveDir/$box-$month$day$year.tar.bz2 /data/$box/`;&lt;br /&gt;                }&lt;br /&gt;        } else {&lt;br /&gt;                print "Error: Invalid Option.\n";&lt;br /&gt;                print "Type: $0 help\n";&lt;br /&gt;        }&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;You will notice that the perl script is pretty simple, but written in a way that it can be easily expanded upon. For example, you might get to the point where keeping up with the @server array is more maintenance than it's worth. You could easily have the perl script access a MySQL database to pull a list of servers and the directories that needed to be pulled over via rsync. You could also add options so that it automatically put the tar.bz2 archive files onto remote storage or even tape.&lt;br /&gt;&lt;br /&gt;To automate the script, save the script in a place like /usr/sbin/linuxbackup.pl and then create a bash script in /etc/cron.daily/ that executes the command "linuxbackup.pl auto". It's really pretty simple.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/6111477715976489549/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/05/automated-linux-backups-utilizing-rsync_16.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6111477715976489549'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6111477715976489549'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/05/automated-linux-backups-utilizing-rsync_16.html' title='Automated Linux Backups utilizing rsync over SSH'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-3014727661434861886</id><published>2010-05-12T02:39:00.001-05:00</published><updated>2019-04-11T11:09:40.128-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Net Nuetrality'/><title type='text'>Network Nuetrality</title><content type='html'>&lt;div&gt;Net Nuetrality is a very  important subject for anybody who connects to the Internet to watch TV,  movies, view websites, play games, work, and download files. Teir 1  telecommunications companies (AT&amp;T, Verizon, Comcast, etc) want to  assign priorities to certain traffic instead of allowing ALL traffic  through their networks equally. Ser&lt;span&gt;...&lt;/span&gt;&lt;span&gt;vices like file downloads and streaming media  rich content (VoIP, streaming movie servcies like Netflix, etc) can be  degredated to a point where it's not worth it or impossible if the  telecommunications companies get their way. I don't know about you, but I  don't want my service provider to tell me how I can access the Internet  and at what speeds. The FCC has tried to enforce Net Nuetrality, but  the U.S. courts sided with Comcast. Our government needs to give the FCC  the necessary powers to enforce Net Nuetrality. It's good for the  consumer and will force the telecommunications companies to engineer  their networks to better support those services that people want.  Normally I'm a huge fan of de-regulation, but this is an instance where  an industry has proven that they can't be trusted to be unregulated.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;a href="http://thinkprogress.org/2010/05/11/netneutrality-grover-afp/"&gt;http://thinkprogress.org/2010/05/11/netneutrality-grover-afp/&lt;/a&gt; &lt;/span&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/3014727661434861886/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/05/network-nuetrality_12.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3014727661434861886'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/3014727661434861886'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/05/network-nuetrality_12.html' title='Network Nuetrality'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-684912905063645929</id><published>2010-03-21T16:08:00.001-05:00</published><updated>2019-04-11T11:09:40.385-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Virtualization'/><category scheme='http://www.blogger.com/atom/ns#' term='Hyper-V'/><category scheme='http://www.blogger.com/atom/ns#' term='VMware'/><title type='text'>Virtualization Notes, Best Practices, and Gotcha's</title><content type='html'>I spent last week attending the Virtualization Pro Summit. I came away with a wealth of information that I'm still compiling, wrapping my head around, and figuring out where and how I can implement what. Below are some of the notes that I took away from the conference.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;General Virtualization&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Memory is the first bottle neck in virtualization. &lt;/li&gt; &lt;ul&gt;&lt;li&gt;When sizing a server, be sure to use servers that can handle at least 128GB of RAM. It doesn't mean that you will need to purchase a server with 128GB of RAM off the bat. It will allow for proper expansion. &lt;/li&gt;&lt;li&gt;If possible, use DDR3 RAM and buy in sticks of three.&lt;/li&gt;&lt;li&gt;Balance the memory allocations across the CPU channels.&lt;/li&gt;&lt;li&gt;Leave a buffer to the amount of logical RAM allocated to the amount of physical RAM in the server. &lt;/li&gt;&lt;/ul&gt;&lt;li&gt;The speed of your hard disk subsystem is probably the second bottleneck that will be encountered.&lt;/li&gt; &lt;ul&gt;&lt;li&gt;For iSCSI SANs, use multiple load balanced connections to the SAN to get the desired bandwidth.&lt;/li&gt;&lt;li&gt;For the best performance, purchase a SAN or DAS that uses newer SAS (serially attached SCSI) hard drives.&lt;/li&gt;&lt;li&gt;Fiber Channel over Ethernet (FCoE) will provide the better performance as it doesn't have the overhead of the IP protocol, but for the time being, iSCSI will provide the most bang for the buck.&lt;/li&gt;&lt;li&gt;SAS hard drives provide 384MBps throughput.&lt;/li&gt;&lt;li&gt;15K SAS drives will provide the best performance.&lt;/li&gt;&lt;li&gt;You can allocate additional RAM for x64 guests for disk caching to compensate for an overloaded hard disk subsystem. This will greatly enhance performance for servers that are hard on disk I/O, such as Exchange, SQL, and Virtual Desktops (VDI). &lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Processor Management: &lt;/li&gt; &lt;ul&gt;&lt;li&gt;Target CPU usage is around 60 - 70%, combined for all guest VMs and the VM host.&lt;/li&gt;&lt;li&gt;A four to one ratio of CPU core to guest VM vCPU is a good ratio to start off with after taking other factors into account (RAM, disk I/O, networking, etc). After that you can add or remove VMs as needed.&lt;/li&gt;&lt;li&gt;Multi-socket x64 processors provide the best performance. &lt;/li&gt;&lt;li&gt;For SMP Applications - vCPU's shouldn't out number the physical CPU's. &lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Dynamic VM moves (VMWare vMotion / Microsoft Live Migration)&lt;/li&gt; &lt;ul&gt;&lt;li&gt; You will need to plan your VM clusters so that not any single VM host is over loaded. If a VM host goes down in a cluster, it will cause a domino effect.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Network Management:&lt;/li&gt; &lt;ul&gt;&lt;li&gt;NIC teaming or 10GB Ethernet will provide the best performance for heavy usage.&lt;/li&gt;&lt;li&gt;Isolate the console network and protect the VM hosts at all costs.&lt;/li&gt;&lt;li&gt;Isolate the cluster heartbeat (vMotion / Live Migration) traffic on a physical separate switch. &lt;/li&gt;&lt;li&gt;The console network and cluster heartbeat network can be on the same network if need be.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;BIOS:&lt;/li&gt; &lt;ul&gt;&lt;li&gt;Enable: &lt;/li&gt; &lt;ul&gt;&lt;li&gt;Hyper-threading &lt;/li&gt;&lt;li&gt;Hardware assisted virtualization&lt;/li&gt;&lt;li&gt;Data Execution Prevention&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Disable:&lt;/li&gt; &lt;ul&gt;&lt;li&gt;All power save settings &lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li&gt;Host / Guest Capacity Planning:&lt;/li&gt; &lt;ul&gt;&lt;li&gt;http://www.vkernal.com&lt;/li&gt;&lt;li&gt;http://www.teamquest.com/solutions-products/products/model/&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Disk Raid:&lt;/li&gt; &lt;ul&gt;&lt;li&gt;Raid 5 is a good compromise of performance and fault tollerance.&lt;/li&gt;&lt;li&gt;Raid 10 provides the best performance, but is costs more on disk usage.&lt;/li&gt;&lt;li&gt;Raid 1 can be used for VM hosts.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;/ul&gt;&lt;b&gt;VMWare vSphere 4.0&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt; Memory Management:&lt;/li&gt; &lt;ul&gt;&lt;li&gt;ESX(i) will consolidate identical memory pools. Therefore it's better to  try to run the same types of operating systems and applications on a VM  host.&lt;/li&gt;&lt;li&gt;Balloon driver is a function that allows a VM host to dynamically allocate RAM to a guest. If this feature is used, careful planning will be needed as to not over-allocate RAM.  &lt;/li&gt;&lt;/ul&gt;&lt;li&gt; Disk Provisioning:&lt;/li&gt; &lt;ul&gt;&lt;li&gt;Thin provisioning is an option, but may thick provisioning will provide better performance.&lt;/li&gt;&lt;li&gt;If thin provisioning is used, careful planning will be needed as it allows you to potentially over-allocate available disk space.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Snapshots:&lt;/li&gt; &lt;ul&gt;&lt;li&gt;Don't leave snapshots active because you might need them.&lt;/li&gt;&lt;li&gt;Try to keep snapshot sizes and the number of them to a minimum.&lt;/li&gt;&lt;li&gt;Active snapshots may reduce performance on the VM.&lt;/li&gt;&lt;li&gt;Deleting snapshots (especially large ones) and playing them back into a base image reduces performance. Depending on the size, it can take a LONG time.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;General performance:&lt;/li&gt; &lt;ul&gt;&lt;li&gt;Minimize the number of vSwitches&lt;/li&gt;&lt;li&gt;Don't use the ESX(i) console to manage guests.&lt;/li&gt;&lt;li&gt;Consider using an iSCSI HBA on older hosts. On newer hosts it may be a detriment to performance. vSphere doesn't support TOE NIC cards.&lt;/li&gt;&lt;li&gt;Install VMware-Tools. &lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/684912905063645929/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2010/03/virtualization-notes-best-practices-and_21.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/684912905063645929'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/684912905063645929'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2010/03/virtualization-notes-best-practices-and_21.html' title='Virtualization Notes, Best Practices, and Gotcha&amp;#39;s'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-497595518201154991</id><published>2009-06-04T08:37:00.001-05:00</published><updated>2019-04-11T11:09:40.645-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='OSI Model'/><category scheme='http://www.blogger.com/atom/ns#' term='TCP/IP Model'/><category scheme='http://www.blogger.com/atom/ns#' term='CCNA Study Notes'/><title type='text'>OSI and TCP/IP Layer Models</title><content type='html'>&lt;span style="font-weight:bold;"&gt;Background History&lt;/span&gt;&lt;br /&gt;Many vendors were developing proprietary network protocols that would only work with their systems. The International Organization for Standards (ISO) started to work on an open standard network model in the 1970's. This network model was called Open Systems Interconnection (OSI). A less formal effort to create a standardized, public network model came about from a U.S. Defense Department contract. Researchers from various universities worked to further the development of the work done by the department. The efforts resulted in TCP/IP.&lt;br /&gt;&lt;br /&gt;By the late 1980's, there were many proprietary, and two standardized network models. Eventually TCP/IP became the standard. The OSI model, in part suffered from a slower formal standardization process as compared with TCP/IP and never succeeded in the market place.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;TCP/IP&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;TCP/IP classifies the various protocols into different catagories or layers.&lt;br /&gt;&lt;br /&gt;&lt;table width="50%"  border="1" cellpadding="1"&gt;&lt;tr&gt;&lt;td&gt;&lt;span style="font-weight:bold;"&gt;TCP/IP Architecture Layer&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-weight:bold;"&gt;Example Protocols&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Application&lt;/td&gt;&lt;td&gt;HTTP, SMTP, DNS, DHCP&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Transport&lt;/td&gt;&lt;td&gt;TCP, UDP&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Internet&lt;/td&gt;&lt;td&gt;IP&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Network access&lt;/td&gt;&lt;td&gt;Ethernet, PPP, Frame Relay, IPSEC&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;If someone makes up a new application, the protocol used directly by the application would be considered to be application layer protocols. Similarly, the network access layer includes protocols and standards such as Ethernet. If someone makes up a new type of LAN, those protocols would be considered to be apart of the network access layer.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;TCP/IP Application Layer&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The TCP/IP application layer provides services to the application software running on a computer. The application layer does not define the application itself, but rather it defines the services that the applications need. The application layer provides an interface between the software running on a computer and the networks.&lt;br /&gt;&lt;br /&gt;When one computer wants to communicate with the same layer on another computer, the two computers use headers to hold the information that they want to communicate. The headers are part of what is transmitted between the two computers. This process is called &lt;span style="font-style:italic;"&gt;same-layer interaction&lt;/span&gt;.&lt;br /&gt;&lt;br /&gt;Regardless of what the application layer protocol is, they all use the same concept of communicating with the application layer on the other computer using the application layer headers.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;The TCP/IP Transport Layer&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The TCP/IP transport layer consists of two main protocol options: Transmission Control Protocol (TCP) and User Datagram Protocol (UDP).&lt;br /&gt;&lt;br /&gt;TCP/IP needs a mechanism to guarantee delivery of data across a network. TCP provides an error-recovery feature to the application protocols by using acknowledgments.&lt;br /&gt;&lt;br /&gt;The benefits of TCP error recovery can not be seen unless the data is lost. TCP will resend data and ensure that it is received successfully. This is demonstrates an example of &lt;span style="font-style:italic;"&gt;adjacent-layer interaction&lt;/span&gt;, which defines the concept of how adjacent layers in a network model, on the same computer, work together. Higher layer protocols (example, SMTP, HTTP) need to do something that it can not do, error recovery. The higher layer asks the next lower-layer protocol, TCP, to perform the service.&lt;br /&gt;&lt;br /&gt;UDP does not perform error recovery.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-style:italic;"&gt;Same-layer interaction on different computers&lt;/span&gt;: Two computers use a protocol to communicate with the same layer on another computer. the protocol defined by each layer uses a header that is transmitted between the computers, to communicate each computer wants to do.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-style:italic;"&gt;Adjacent-layer interaction on the same computer&lt;/span&gt;: A single computer, one layer provides a service to a higher layer. the software or hardware that implements the higher layer requests that the next lower layer perform the needed function.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;TCP/IP Internet Layer&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;IP defines logical addresses, called &lt;span style="font-style:italic;"&gt;IP addresses&lt;/span&gt;, which allow each TCP/IP-speaking device to have an address with which to communicate. IP also defines the routing process of how a router should forward packets of data.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;TCP/IP Network Access Layer&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The network access layer defines the protocol and hardware required to deliver data across some physical network. The term &lt;span style="font-style:italic;"&gt;network access&lt;/span&gt; refers to the fact that this layer defines how to physically connect a computer to the phyical media over which data can be transmitted. Ethernet is one example protocol at the TCP/IP network access layer.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-style:italic;"&gt;Each layer provides services to the layer above it in the model. (TCP/IP and OSI models)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;IP, an TCP/IP Internet Layer, relies on the network access layer to deliver IP packets across a physical network.&lt;br /&gt;&lt;br /&gt;The network access layer includes a large number of protocols, such as Ethernet, PPP, IPSEC, Frame Relay, etc.&lt;br /&gt;&lt;br /&gt;IP uses the network access layer protocols to deliver an IP packet to the next router or host, with each router repeating the process until the packet arrives at the destination. Each network access protocol uses headers to encode the information needed to successfully deliver the data across the physical network, in much the same way as other layers use headers to achieve their goals.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;Data Encapsulation Terminalolgy&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;As you can see from the explanations of how HTTP, TCP, IP and the network access protocols, Ethernet and PPP do their jobs, each layer adds its own header (and sometimes trailer) to the data supplied by the higher layer. &lt;span style="font-style:italic;"&gt;Encapsulation&lt;/span&gt; refers to the process of putting headers and trailers around some data.&lt;br /&gt;&lt;span style="font-style:italic;"&gt;Five steps of Data Encapsulation&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;table width="50%"  border="1" cellpadding="1"&gt;&lt;tr&gt;&lt;td&gt;1.&lt;/td&gt;&lt;td&gt; &lt;div align="center"&gt;| Data |&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div align="center"&gt;Application&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div align="center"&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2.&lt;/td&gt;&lt;td&gt; &lt;div align="center"&gt;| TCP | Data |&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div align="center"&gt;Transport&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div align="center"&gt;Segment&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3.&lt;/td&gt;&lt;td&gt; &lt;div align="center"&gt;| IP | TCP | Data |&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div align="center"&gt;Internet&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div align="center"&gt;Packet&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4.&lt;/td&gt;&lt;td&gt; &lt;div align="center"&gt;| LH | IP | TCP | Data | LT |&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div align="center"&gt;Network Access&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div align="center"&gt;Frame&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5.&lt;/td&gt;&lt;td colspan="3"&gt;&lt;div align="center"&gt;Transmit Bits&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-style:italic;"&gt;*LH and LT stand for link header and link trailer&lt;/span&gt;&lt;br /&gt;&lt;span style="font-style:italic;"&gt;Segment, packet, and frame&lt;/span&gt; refer to the headers and possibly trailers defined by a particular layer. Only the network access layer provides a trailer in it's encapsulation, called a frame.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;The OSI Reference Model&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The Open System Interconnection (OSI) model consists of seven layers. Each layer &lt;br /&gt;defines a set of typical networking functions.&lt;br /&gt;&lt;br /&gt;&lt;table width="50%"  border="1" cellpadding="1"&gt;&lt;tr&gt;&lt;td&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;"&gt;OSI Model&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;"&gt;TCP/IP&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align="center"&gt;Application&lt;/div&gt;&lt;/td&gt;&lt;td rowspan="3"&gt;&lt;div align="center"&gt;Application&lt;/div&gt;      &lt;div align="center"&gt;&lt;/div&gt;      &lt;div align="center"&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align="center"&gt;Presentation&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align="center"&gt;Session&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align="center"&gt;Transport&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div align="center"&gt;Transport&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align="center"&gt;Network&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div align="center"&gt;Internet&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align="center"&gt;Data Link &lt;/div&gt;&lt;/td&gt;&lt;td rowspan="2"&gt;&lt;div align="center"&gt;Network Access &lt;/div&gt;      &lt;div align="center"&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;div align="center"&gt;Physical&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-style:italic;"&gt;*OSI Layers in reference to the TCP/IP Layers&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;TCP/IP's internet layer, as implemented mainly by IP, equates most directly to the protocol, using OSI terminology and numbers for the layer.&lt;br /&gt;&lt;br /&gt;OSI network layer defines logical addressing and routing, as does the TCP/IP internet layer. Similarly, the TCP/IP transport layer defines many functions, including error recovery, as does the OSI transport layer - so TCP is called a transport layer, or Layer 4 protocol.&lt;br /&gt;&lt;br /&gt;Not all TCP/IP layers correspond to a single OSI layer. In particular, the TCP/IP network access layer defines both physical network specifications and the protocols used to control the physical network.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-style:italic;"&gt;&lt;span style="font-weight:bold;"&gt;Note:&lt;/span&gt;be aware of both views about whether TCP/IP has a single network access layer or two lower layers (data link and physical).&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The upper layers of the OSI reference model (application, presentation, and session - Layers 7 - 5) define functions focused on the application. the lower four layers (transport, network, data link, and physical - Layers 4 - 1) define functions focused on the end-to-end delivery of the data.&lt;br /&gt;&lt;br /&gt;&lt;table width="80%"  border="1" cellpadding="1"&gt;&lt;tr&gt;&lt;td&gt;&lt;span style="font-weight:bold;"&gt;Layer&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span style="font-weight:bold;"&gt;Functional Description&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top"&gt;7&lt;/td&gt;&lt;td&gt;Layer 7 provides an interface between the communications software and any applications that need to communicate outside the computer on which the application resides. It also defines processes for user authentication. &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top"&gt;6&lt;/td&gt;&lt;td&gt;The layers's main purpose is to define negotiate data formats, such as ASCII text, EBCDIC text, binary, BCD, and JPEG. Encryption also is defined by OSI as a presentation layer service. &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top"&gt;5&lt;/td&gt;&lt;td&gt;The session layer defines how to start, control, and end conversations (called sessions). This includes the control and management of multiple bidirectional messages so that the application can be notified if only some of the series of messages are completed. this allows the presentation layer to have a seamless view of an incoming stream of data. &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top"&gt;4&lt;/td&gt;&lt;td&gt;Layer 4 protocols provide a large number of services, as described of Chapter 6 of this book. Although OSI Layer 5 through 7 focus on issues related to the application, Layer 4 focuses on issues related to data delivery to another computer - for instance, error recovery and flow contol. &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top"&gt;3&lt;/td&gt;&lt;td&gt;The network layer defines three main features: logical addressing, routing (forwarding), and path determination. The routing concepts define how devices (typically routers) forward packets to their final destination. Logical addressing defines how each device can have an address that can be used by the routing process. Path determination refers to the work done by routing protocols by which all possible routers are learned, but the best route is chosen for use. &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top"&gt;2&lt;/td&gt;&lt;td&gt;The data link layer defines the rules (protocols) that determine when a device can send data over a particular medium. Data link protocols also define the format of a header and trailer that allows devices attached to the medium to send and reeive data successfully. The data link trailer, which follows the encapsulated data, typically defines a Frame Check Sequence (FCS) field, which allows the receiving device to detect transmission errors. &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top"&gt;1&lt;/td&gt;&lt;td&gt;The layer typically refers to standards from other organizations. These standards deal with the physical characteristics of the transmission medium, including connectors, pins, use of pins, electrical currents, encoding, light modulation, and the rules for how to activate and deactivate the use of the physical medium. &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-style:italic;"&gt;*The CCNA focuses on issues in the lower (4-1) layers in the OSI.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:bold;"&gt;OSI Layering Concepts and Benefits&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Many benefits can be gained from the process of breaking up functions or tasks of networking into smaller chunks and defining standard interfaces between these layers. The layers break a large, complex set of concepts and protocols into smaller pieces, making it easier to talk about, easier to implement with hardware and software, and easier to &lt;span style="font-style:italic;"&gt;&lt;span style="font-weight:bold;"&gt;troubleshoot&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;"&lt;span style="font-weight:bold;"&gt;A&lt;/span&gt;ll &lt;span style="font-weight:bold;"&gt;P&lt;/span&gt;eople &lt;span style="font-weight:bold;"&gt;S&lt;/span&gt;eem &lt;span style="font-weight:bold;"&gt;T&lt;/span&gt;o &lt;span style="font-weight:bold;"&gt;N&lt;/span&gt;eed &lt;span style="font-weight:bold;"&gt;D&lt;/span&gt;ata &lt;span style="font-weight:bold;"&gt;P&lt;/span&gt;rocessing." (Layers 7 - 1) - A mnemonic phrase to help remember the OSI layer names.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/497595518201154991/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2009/06/osi-and-tcpip-layer-models_4.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/497595518201154991'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/497595518201154991'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2009/06/osi-and-tcpip-layer-models_4.html' title='OSI and TCP/IP Layer Models'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4217350426817908483</id><published>2009-06-03T18:14:00.001-05:00</published><updated>2019-04-11T11:09:40.902-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Ethernet'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Ethernet - Cat 5 pin-outs</title><content type='html'>&lt;a href="http://4.bp.blogspot.com/_52Mvdh_gH6s/SidYgtr4GiI/AAAAAAAACRY/WktjgnI5fzQ/s1600-h/cat5.jpg"&gt;&lt;img style="float:left; margin:0 10px 10px 0;cursor:pointer; cursor:hand;width: 226px; height: 320px;" src="http://4.bp.blogspot.com/_52Mvdh_gH6s/SidYgtr4GiI/AAAAAAAACRY/WktjgnI5fzQ/s320/cat5.jpg" border="0" alt=""id="BLOGGER_PHOTO_ID_5343336801941068322" /&gt;&lt;/a&gt; Because I always forget. :)</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4217350426817908483/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2009/06/ethernet-cat-5-pin-outs_3.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4217350426817908483'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4217350426817908483'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2009/06/ethernet-cat-5-pin-outs_3.html' title='Ethernet - Cat 5 pin-outs'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://4.bp.blogspot.com/_52Mvdh_gH6s/SidYgtr4GiI/AAAAAAAACRY/WktjgnI5fzQ/s72-c/cat5.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1111883542489668346</id><published>2009-06-03T10:45:00.001-05:00</published><updated>2019-04-11T11:09:41.159-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Security'/><title type='text'>NSA Security Configuration Guides</title><content type='html'>I refer to these guides from time to time, but always end up doing a google search to find them. I'm not very good at browser bookmark up keep and I'm always on a different computer then the needed bookmark is on. :)&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.nsa.gov/ia/guidance/security_configuration_guides/index.shtml"&gt;NSA Security Configuration Guide&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/1111883542489668346/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2009/06/nsa-security-configuration-guides_3.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1111883542489668346'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/1111883542489668346'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2009/06/nsa-security-configuration-guides_3.html' title='NSA Security Configuration Guides'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-6037598556329279924</id><published>2009-06-03T05:34:00.001-05:00</published><updated>2019-04-11T11:09:41.412-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Article'/><title type='text'>Why Open Source helps to build competence in IT</title><content type='html'>I love open source software (OSS), even though, technically, I'm not a developer. I'm a consumer of oss, I guess you could say. At the heart of it, oss has had a profound impact on my development as an IT professional and hobbyist. Let me explain.&lt;br /&gt;&lt;br /&gt;If it were not for operating systems such as Linux and FreeBSD and server software like the Apache web server and BIND DNS server. I would have had a real hard time gaining knowledge and experience building, tearing down, and rebuilding systems that I currently have. I spent many hours, as a hobbyist, playing with Linux, hosting a web, email, and ftp server from the living room of my first apartment when I was just 19. I gave people shell accounts and invited them to try to break my server. I learned a lot about TCP/IP networking, firewalls, security, and system administration during that time. The knowledge gained from those experiences helped me land my first systems administrator job at a local ISP, where I built and maintained a lot of those SAME services that I did as a hobbyist, and then some.&lt;br /&gt;&lt;br /&gt;A lot of this comes from the fact that much of the oss is built on open standards that even proprietary vendors implement from time to time. The fact that you can learn the inner workings of standard protocols/services and how they are supposed to react in a given circumstance is an invaluable resource for an up and coming IT professional. It can help maintaining those proprietary systems that much easier.&lt;br /&gt;&lt;br /&gt;It's safe to say that I wouldn't have near the knowledge or experience that I do today if it weren't for open source. Even today, I play around with oss. Currently, I'm experimenting with open source implementations of the nhrp protocol to better understand dynamic multipoint vpn services. I have a Linux desktop and utilize open source alternatives for desktop applications such as video editing and office productivity.&lt;br /&gt;&lt;br /&gt;I wouldn't hesitate to implement a lot of mature open source solutions in a production environment. In fact, I find that in a lot of cases, open source software makes more sense and out performs a proprietary solution. Linux can be such a rock stable server operating system in the right environment. Add to it server software that is secure, stable, and reliable and you have a combination that can with stand the time of servers. Still, there is a time and place for oss in the business. Managers prefer commercial support for IT equipment and software. Some oss vendors reconize that and now offer those services to companies. Win, win! Thank you Open Source, both as a hobbyist and a professional.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/6037598556329279924/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2009/06/why-open-source-helps-to-build_3.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6037598556329279924'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6037598556329279924'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2009/06/why-open-source-helps-to-build_3.html' title='Why Open Source helps to build competence in IT'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-5828400780642779508</id><published>2009-05-31T14:26:00.001-05:00</published><updated>2019-04-11T11:09:41.670-05:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='Ubuntu SE'/><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='VPN'/><category scheme='http://www.blogger.com/atom/ns#' term='Perl Tips'/><title type='text'>Prepping Ubuntu Server Edition to run as a DMVPN.</title><content type='html'>After reading about the open source implementation of NHRP, I decided that I would play around with it a bit to see where it's at, development wise. I have a VMWare Session of Ubuntu 9.04 (Server Edition) that I use to geek out on stuff like this. It's nice, because at a click of a button I can have a default install, by reverting to my default snap shot. &lt;br /&gt;&lt;br /&gt;I've determined that the packages that you need to install, on a default install of Ubuntu SE are:&lt;br /&gt;&lt;br /&gt;openssh-server&lt;br /&gt;quagga&lt;br /&gt;ipsec-tools&lt;br /&gt;racoon&lt;br /&gt;gcc&lt;br /&gt;git&lt;br /&gt;git-core&lt;br /&gt;pkg-config&lt;br /&gt;libc-ares-dev&lt;br /&gt;make&lt;br /&gt;&lt;br /&gt;Gcc, make, git, git-core, pkg-config, and libc-ares-dev are the packages required to compile openNHRP from source. They can probably be uninstalled after it's been compiled. :) &lt;br /&gt;&lt;br /&gt;Openssh-server is just used to admin the box remotely. It's easier to do everything over ssh, rather than through the vm window.&lt;br /&gt;&lt;br /&gt;Quagga is the routing software. It's not required to install opennhrp, but I figured I might as well install it. Same goes for ipsec-tools.&lt;br /&gt;&lt;br /&gt;Iproute2, which supports the GRE implementation, is installed by default, so we don't need to worry about it. &lt;br /&gt;&lt;br /&gt;I wrote a quick perl script to run on Ubuntu to check to see whether the packages are installed. If they aren't it installs them via apt-get.&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;#!/usr/bin/perl&lt;br /&gt;&lt;br /&gt;@software = ('openssh-server','ipsec-tools','racoon','quagga','gcc',&lt;br /&gt;     'git','git-core','pkg-config','libc-ares-dev','make');&lt;br /&gt;&lt;br /&gt;foreach $pkg (@software) {&lt;br /&gt;    chomp($pkg);&lt;br /&gt;    @dpkg = `dpkg -l | grep $pkg`;&lt;br /&gt;    if(!@dpkg) {&lt;br /&gt;         print "Getting: $pkg\n";&lt;br /&gt;        `sudo apt-get -y install $pkg`;&lt;br /&gt;    } else {&lt;br /&gt;         print "$pkg is already installed.\n";&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;After you run that perl script, opennhrp is ready to install. Download the latest version from http://sourceforge.net/projects/opennhrp/, unpack the contents, then run make and make install. That's it! Now to play with configurations.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/5828400780642779508/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2009/05/prepping-ubuntu-server-edition-to-run_31.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5828400780642779508'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/5828400780642779508'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2009/05/prepping-ubuntu-server-edition-to-run_31.html' title='Prepping Ubuntu Server Edition to run as a DMVPN.'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-6411949567027835550</id><published>2009-05-31T09:23:00.001-05:00</published><updated>2019-04-11T11:09:41.926-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='VPN'/><category scheme='http://www.blogger.com/atom/ns#' term='Open Source Alternatives'/><title type='text'>An Open Source Implementation of Cisco's Dynamic Multipoint VPN (DMVPN)</title><content type='html'>&lt;a href="http://1.bp.blogspot.com/_52Mvdh_gH6s/SiL07tGaoyI/AAAAAAAACPE/U7qhXNRJzRI/s1600-h/dmvpn.png"&gt;&lt;img style="float:left; margin:0 10px 10px 0;cursor:pointer; cursor:hand;width: 280px; height: 320px;" src="http://1.bp.blogspot.com/_52Mvdh_gH6s/SiL07tGaoyI/AAAAAAAACPE/U7qhXNRJzRI/s320/dmvpn.png" border="0" alt=""id="BLOGGER_PHOTO_ID_5342101414570795810" /&gt;&lt;/a&gt;&lt;br /&gt;For a few years, Cisco has had a pretty innovative VPN solution called "Dynamic Multipoint VPN". In essence, it's a traditional hub and spoke VPN design, except that when two, or more, spokes want to communicate directly with each other, they initiate a dynamic IPSEC tunnel with each other instead of sending the traffic to the hub, where the hub would route the traffic to the destination spoke. If you're confused, the "hub" would be the main office where all VPN sessions are initiated to and the "spoke" are the branch offices.&lt;br /&gt;&lt;br /&gt;Why does this matter? There are two HUGE reasons: bandwidth and ease of operation. If two spokes need to send data back and forth to each other over the VPN, it doesn't make sense that the data should be sent from spoke 1, to the hub, to spoke 2. Doing this doubles the amount of Internet bandwidth that you need. That's a lot of wasted money. For the people configuring the VPN devices, it's an added complexity to add all kinds of VPN tunnels to each branch turning your VPN network into a mesh design. Could you imagine doing that with hundreds or thousands of branch offices? It would be an administration night mare. So essentially, either way you look at it, DMVPN could save your organization a ton of money in total cost of ownership and on bandwidth. Your network admins will love you for it.&lt;br /&gt;&lt;br /&gt;How is DMVPN achieved? It uses all the same tricks as traditional hub and spoke VPN; IPSEC, GRE, a dynamic routing protocol, along with a fairly new protocol called Next Hop Resolution Protocol. "NHRP is an Address Resolution Protocol (ARP)-like protocol that dynamically maps nonbroadcast multiaccess (NBMA) network. With NHRP, systems attached to an NBMA network can dynamically learn the NBMA (physical) address of the other systems that are part of that network, allowing these systems to directly communicate." (Cisco.com) Pretty cool, right?&lt;br /&gt;&lt;br /&gt;It now looks like the Open Source community is putting together the last piece of the DMVPN puzzle. For years there have been open source implementations of IPSEC, GRE, and dynamic routing protocols, such as OSPF. (It's a shame that EIGRP is proprietary to Cisco.) Now there is a NHRP implementation in the works, that looks promising. I'm sure that I'll be keeping up with the progress.&lt;br /&gt;&lt;br /&gt;Maybe Vyatta will implement this? hmmm...&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.faqs.org/rfcs/rfc2332.html"&gt;RFC 2332 - NBMA Next Hop Resolution Protocol&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Open Source Related Links:&lt;br /&gt;&lt;a href="http://sourceforge.net/projects/opennhrp"&gt;OpenNHRP&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.quagga.net/"&gt;Quagga Routing Software&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.linuxfoundation.org/en/Net%3AIproute2"&gt;Iproute2 - Open Source GRE implementation&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.strongswan.org/"&gt;StrongSwan - IPSEC for Linux&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.openswan.org/"&gt;OpenSwan - Another IPSEC for Linux&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Cisco Related Links:&lt;br /&gt;&lt;a href="http://www.cisco.com/en/US/docs/ios/12_4/ip_addr/configuration/guide/hadnhrp_ps6350_TSD_Products_Configuration_Guide_Chapter.html"&gt;Cisco's implementation of NHRP&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.cisco.com/en/US/tech/tk583/tk372/technologies_configuration_example09186a008014bcd7.shtml"&gt;Configuring DMVPN using GRE over IPSEC between multiple routers&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.cisco.com/en/US/prod/collateral/iosswrel/ps6537/ps6586/ps6635/ps6658/DMVPN_Overview.pdf"&gt;DMVPN Overview&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/6411949567027835550/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2009/05/an-open-source-implementation-of-cisco_31.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6411949567027835550'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/6411949567027835550'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2009/05/an-open-source-implementation-of-cisco_31.html' title='An Open Source Implementation of Cisco&amp;#39;s Dynamic Multipoint VPN (DMVPN)'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://1.bp.blogspot.com/_52Mvdh_gH6s/SiL07tGaoyI/AAAAAAAACPE/U7qhXNRJzRI/s72-c/dmvpn.png' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4157643959010687746</id><published>2009-05-31T08:48:00.001-05:00</published><updated>2019-04-11T11:09:42.184-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Cisco Administration Perl Scripting'/><category scheme='http://www.blogger.com/atom/ns#' term='Perl Tips'/><title type='text'>A Net::Telnet::Cisco Example (Save Running Configuration)</title><content type='html'>This is a simple perl script that uses the 'Net::Telnet::Cisco' perl module to save the running configuration on a Cisco IOS router or switch. It could be modified to be automated very easily.&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;#!/usr/bin/perl&lt;br /&gt;&lt;br /&gt;$confDir = '/home/james/cisco_configs';&lt;br /&gt;$user  = "changeme";&lt;br /&gt;$pass  = "changeme";&lt;br /&gt;$enable  = "changeme";&lt;br /&gt;&lt;br /&gt;use Time::localtime;&lt;br /&gt;use Net::Telnet::Cisco;&lt;br /&gt;&lt;br /&gt;$tm = localtime;&lt;br /&gt;($hour,$min,$day,$month,$year) = ($tm-&gt;hour,$tm-&gt;min,$tm-&gt;mday,$tm-&gt;mon,$tm-&gt;year);&lt;br /&gt;$month += 1;&lt;br /&gt;$year += 1900;&lt;br /&gt;&lt;br /&gt;if($ARGV[0]) {&lt;br /&gt; $ip = $ARGV[0];&lt;br /&gt; my $session = Net::Telnet::Cisco-&gt;new(Host =&gt; "$ip");&lt;br /&gt; $session-&gt;login("$user", "$pass");&lt;br /&gt; $session-&gt;enable("$enable");&lt;br /&gt; my @output = $session-&gt;cmd("show configuration");&lt;br /&gt; open(CONFIG, "&gt;&gt;$confDir/$ip-$month$day$year-$hour$min.txt") &lt;br /&gt;                or die "Can't open $confDir/$ip-$month$day$year-$hour$min.txt\n";&lt;br /&gt;  print CONFIG @output;&lt;br /&gt; close(CONFIG);&lt;br /&gt; $session-&gt;close;&lt;br /&gt; print "\n$ip has been backed up successfully.\n";&lt;br /&gt;} else {&lt;br /&gt;        print "Error: You must specify an IP Address to connect to.\n";&lt;br /&gt;        print "$0 &lt;ip_address&gt;\n";&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4157643959010687746/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2009/05/a-nettelnetcisco-example-save-running_31.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4157643959010687746'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4157643959010687746'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2009/05/a-nettelnetcisco-example-save-running_31.html' title='A Net::Telnet::Cisco Example (Save Running Configuration)'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-2492944665119299596</id><published>2009-05-31T07:35:00.000-05:00</published><updated>2019-04-11T11:09:42.438-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Perl Tips'/><title type='text'>Using Perl to grab a proccess id in Linux</title><content type='html'>Ever since I first started doing Linux system administration, I've used perl scripts to automate some basic tasks. I've never really been that great at writing scripts because I never took the time to sit down and really learn the intricate details of the language. Here recently, I've written some of my most complex and detail oriented scripts, where I've had to really learn a little bit about regular expressions. Along the way I also learned how to pick very specific data out of a array and feed it to my script for processing.&lt;br /&gt;&lt;br /&gt;Here is a simple script that utilizes the 'ps' command, grabs the process id (PID) from the array, and prints as an output.&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;#!/usr/bin/perl&lt;br /&gt;&lt;br /&gt;@ps = `ps ax | grep sshd`;&lt;br /&gt;foreach $proc (@ps) {&lt;br /&gt;        @pid = split(/ +/,$proc);&lt;br /&gt;        print "PID: $pid[0]\n";&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;The things that you can with this sort of script are endless in automating system administration.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/2492944665119299596/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2009/05/using-perl-to-grab-proccess-id-in-linux.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2492944665119299596'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/2492944665119299596'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2009/05/using-perl-to-grab-proccess-id-in-linux.html' title='Using Perl to grab a proccess id in Linux'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4727120548623088605</id><published>2009-05-31T06:13:00.000-05:00</published><updated>2019-04-11T11:09:42.630-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='About'/><title type='text'>Why I'm here...</title><content type='html'>I often run across articles about technologies, network/systems configurations, and even the perl scripting language. At the time, I tell myself that is cool and should implement it if the need arises, but over time I forget about it. This is just my "engineering journal", if you will, to help me keep up with my mental notes.</content><link rel='replies' type='application/atom+xml' href='https://www.packetgeek.net/feeds/4727120548623088605/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://www.packetgeek.net/2009/05/why-i-here.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4727120548623088605'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/posts/default/4727120548623088605'/><link rel='alternate' type='text/html' href='https://www.packetgeek.net/2009/05/why-i-here.html' title='Why I&amp;#39;m here...'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.page-3531204875718424320</id><published>2019-04-11T10:52:00.000-05:00</published><updated>2019-04-11T10:52:54.036-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#page'/><title type='text'>About</title><content type='html'>&lt;br /&gt;I'm a technology nerd. I've been pretty passionate about networking, Linux, the Internet and information security since I was a young child. Now, in my adult-hood, I've been working professionally with technology for about ~16 years. The road has been bumpy and I've worked jobs that made me lose interest in technology for periods of time, but I now work at a job that fuels my interest and has ignited a passion for technology in me that I felt when I was younger. This site is mainly used as an information dump of my thoughts, labs, and experiments. I hope that you find something that interests you! If you have any questions or comments, please feel free to get in contact with me - james.williams_at_packetgeek.net, or &lt;a href="https://twitter.com/packetgeeknet" rel="noopener noreferrer" target="_blank"&gt;twitter&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;img border="0" data-original-height="75" data-original-width="75" src="https://4.bp.blogspot.com/-LbRfhZuZeCg/XK9fTcb0URI/AAAAAAAA2D8/LhJU6QlJLK8VgKQbm-5-RQmwihKs_UrEwCLcBGAs/s1600/CCNP_med.jpg" /&gt; &lt;img border="0" data-original-height="75" data-original-width="75" src="https://3.bp.blogspot.com/-JXgvtjqsCn8/XK9fTtcjISI/AAAAAAAA2EQ/SMXe8eB-_tMi9FbOxIeMA3SREwb-J-28ACEwYBhgL/s1600/ccdp_design_med.jpg" /&gt; &lt;img border="0" data-original-height="75" data-original-width="75" src="https://4.bp.blogspot.com/-3egjloTI4Bo/XK9fT-nR48I/AAAAAAAA2EU/e-WN66-N_fYROVgSWya9ytAghtjA8CAGgCEwYBhgL/s1600/ccna_serviceprovider_med.jpg" /&gt; &lt;img border="0" data-original-height="75" data-original-width="75" src="https://1.bp.blogspot.com/-51K-moFJJMc/XK9fTZQLM3I/AAAAAAAA2EM/bAX2u2RjU7oiLW8SpvVGNTi4NySGVEQvwCEwYBhgL/s1600/CCNA_security_med.jpg" /&gt; &lt;img border="0" data-original-height="150" data-original-width="92" src="https://2.bp.blogspot.com/-2QamfGPW2NQ/XK9fTYKF03I/AAAAAAAA2EI/7JfZSKXLYeUgvq2IFS1JJl23YfjBu8ezgCEwYBhgL/s1600/RH_CertifiedEngineer_logo_cmyk-185x300.jpg" /&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/pages/default/3531204875718424320'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/pages/default/3531204875718424320'/><link rel='alternate' type='text/html' href='http://www.packetgeek.net/p/about.html' title='About'/><author><name>jtdub</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//www.blogger.com/img/blogger_logo_round_35.png'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='https://4.bp.blogspot.com/-LbRfhZuZeCg/XK9fTcb0URI/AAAAAAAA2D8/LhJU6QlJLK8VgKQbm-5-RQmwihKs_UrEwCLcBGAs/s72-c/CCNP_med.jpg' height='72' width='72'/></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-2148796210877338388</id><published>2014-12-03T18:44:09.000-06:00</published><updated>2019-04-11T11:10:04.121-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>[…] my first post on VIRL –  “Cisco VIRL Status? D...</title><content type='html'>[…] my first post on VIRL –  “Cisco VIRL Status? Digital Paper Weight“, I shared my frustration with not being able to get my system to activate with Cisco. Come […]</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/8867379985183785104/comments/default/2148796210877338388'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/8867379985183785104/comments/default/2148796210877338388'/><link rel='alternate' type='text/html' href='http://www.packetgeek.net/2014/12/cisco-virl-status-digital-paper-weight_3.html?showComment=1417653849000#c2148796210877338388' title=''/><author><name>Cisco VIRL – Bare Metal Install Tips and Lessons Learned « Packet Geek Networks</name><uri>http://www.packetgeek.net/2014/12/cisco-virl-bare-metal-install-tips-and-lessons-learned/</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//resources.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='https://www.packetgeek.net/2014/12/cisco-virl-status-digital-paper-weight_3.html' ref='tag:blogger.com,1999:blog-2200496390325245811.post-8867379985183785104' source='https://www.blogger.com/feeds/2200496390325245811/posts/default/8867379985183785104' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-659668898'/><gd:extendedProperty name='blogger.displayTime' value='December 3, 2014 at 6:44 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-1241728581840901593</id><published>2014-12-05T10:39:22.000-06:00</published><updated>2019-04-11T11:10:04.481-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>[…] Update:  I fixed the issue. Turns out, I’m a d...</title><content type='html'>[…] Update:  I fixed the issue. Turns out, I’m a dim wit. There is an updated post, with tips and lessons learned, here. […]</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/4158117098008478048/comments/default/1241728581840901593'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/4158117098008478048/comments/default/1241728581840901593'/><link rel='alternate' type='text/html' href='http://www.packetgeek.net/2014/12/cisco-virl-bare-metal-install-tips-and_3.html?showComment=1417797562000#c1241728581840901593' title=''/><author><name>Cisco VIRL Status? Digital Paper Weight « Packet Geek Networks</name><uri>http://www.packetgeek.net/2014/12/cisco-virl-status-digital-paper-weight/</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//resources.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='https://www.packetgeek.net/2014/12/cisco-virl-bare-metal-install-tips-and_3.html' ref='tag:blogger.com,1999:blog-2200496390325245811.post-4158117098008478048' source='https://www.blogger.com/feeds/2200496390325245811/posts/default/4158117098008478048' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-659668898'/><gd:extendedProperty name='blogger.displayTime' value='December 5, 2014 at 10:39 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2200496390325245811.post-4198865971677364931</id><published>2016-03-01T18:28:41.000-06:00</published><updated>2019-04-11T11:10:07.143-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>[…] the previous blog, I kicked the tires on the i...</title><content type='html'>[…] the previous blog, I kicked the tires on the ios_command and ios_config Ansible modules. I still had my development […]</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/3242076565983677622/comments/default/4198865971677364931'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/2200496390325245811/3242076565983677622/comments/default/4198865971677364931'/><link rel='alternate' type='text/html' href='http://www.packetgeek.net/2016/02/kicking-tires-with-new-ansible-network_29.html?showComment=1456878521000#c4198865971677364931' title=''/><author><name>Kicking the tires on the new Ansible Network Modules, Part 2 « Packet Geek Networks</name><uri>http://www.packetgeek.net/2016/03/kicking-the-tires-on-the-new-ansible-network-modules-part-2/</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='35' height='35' src='//resources.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='https://www.packetgeek.net/2016/02/kicking-tires-with-new-ansible-network_29.html' ref='tag:blogger.com,1999:blog-2200496390325245811.post-3242076565983677622' source='https://www.blogger.com/feeds/2200496390325245811/posts/default/3242076565983677622' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-659668898'/><gd:extendedProperty name='blogger.displayTime' value='March 1, 2016 at 6:28 PM'/></entry></feed>